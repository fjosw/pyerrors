window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"pyerrors": {"fullname": "pyerrors", "modulename": "pyerrors", "type": "module", "doc": "<h1 id=\"what-is-pyerrors\">What is pyerrors?</h1>\n\n<p><code>pyerrors</code> is a python package for error computation and propagation of Markov chain Monte Carlo data.\nIt is based on the gamma method <a href=\"https://arxiv.org/abs/hep-lat/0306017\">arXiv:hep-lat/0306017</a>. Some of its features are:</p>\n\n<ul>\n<li>automatic differentiation for exact liner error propagation as suggested in <a href=\"https://arxiv.org/abs/1809.01289\">arXiv:1809.01289</a> (partly based on the <a href=\"https://github.com/HIPS/autograd\">autograd</a> package).</li>\n<li>treatment of slow modes in the simulation as suggested in <a href=\"https://arxiv.org/abs/1009.5228\">arXiv:1009.5228</a>.</li>\n<li>coherent error propagation for data from different Markov chains.</li>\n<li>non-linear fits with x- and y-errors and exact linear error propagation based on automatic differentiation as introduced in <a href=\"https://arxiv.org/abs/1809.01289\">arXiv:1809.01289</a>.</li>\n<li>real and complex matrix operations and their error propagation based on automatic differentiation (Matrix inverse, Cholesky decomposition, calculation of eigenvalues and eigenvectors, singular value decomposition...).</li>\n</ul>\n\n<p>There exist similar publicly available implementations of gamma method error analysis suites in <a href=\"https://gitlab.ift.uam-csic.es/alberto/aderrors\">Fortran</a>, <a href=\"https://gitlab.ift.uam-csic.es/alberto/aderrors.jl\">Julia</a> and <a href=\"https://github.com/mbruno46/pyobs\">Python</a>.</p>\n\n<h2 id=\"basic-example\">Basic example</h2>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyerrors</span> <span class=\"k\">as</span> <span class=\"nn\">pe</span>\n\n<span class=\"n\">my_obs</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble_name&#39;</span><span class=\"p\">])</span> <span class=\"c1\"># Initialize an Obs object</span>\n<span class=\"n\">my_new_obs</span> <span class=\"o\">=</span> <span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">my_obs</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">my_obs</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"c1\"># Construct derived Obs object</span>\n<span class=\"n\">my_new_obs</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">()</span>                     <span class=\"c1\"># Estimate the statistical error</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_new_obs</span><span class=\"p\">)</span>                             <span class=\"c1\"># Print the result to stdout</span>\n<span class=\"o\">&gt;</span> <span class=\"mf\">0.31498</span><span class=\"p\">(</span><span class=\"mi\">72</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h1 id=\"the-obs-class\">The <code>Obs</code> class</h1>\n\n<p><code>pyerrors</code> introduces a new datatype, <code>Obs</code>, which simplifies error propagation and estimation for auto- and cross-correlated data.\nAn <code>Obs</code> object can be initialized with two arguments, the first is a list containing the samples for an observable from a Monte Carlo chain.\nThe samples can either be provided as python list or as numpy array.\nThe second argument is a list containing the names of the respective Monte Carlo chains as strings. These strings uniquely identify a Monte Carlo chain/ensemble.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">pyerrors</span> <span class=\"k\">as</span> <span class=\"nn\">pe</span>\n\n<span class=\"n\">my_obs</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble_name&#39;</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<h2 id=\"error-propagation\">Error propagation</h2>\n\n<p>When performing mathematical operations on <code>Obs</code> objects the correct error propagation is intrinsically taken care of using a first order Taylor expansion\n$$\\delta_f^i=\\sum_\\alpha \\bar{f}_\\alpha \\delta_\\alpha^i\\,,\\quad \\delta_\\alpha^i=a_\\alpha^i-\\bar{a}_\\alpha\\,,$$\nas introduced in <a href=\"https://arxiv.org/abs/hep-lat/0306017\">arXiv:hep-lat/0306017</a>.\nThe required derivatives $\\bar{f}_\\alpha$ are evaluated up to machine precision via automatic differentiation as suggested in <a href=\"https://arxiv.org/abs/1809.01289\">arXiv:1809.01289</a>.</p>\n\n<p>The <code>Obs</code> class is designed such that mathematical numpy functions can be used on <code>Obs</code> just as for regular floats.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyerrors</span> <span class=\"k\">as</span> <span class=\"nn\">pe</span>\n\n<span class=\"n\">my_obs1</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble_name&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">my_obs2</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble_name&#39;</span><span class=\"p\">])</span>\n\n<span class=\"n\">my_sum</span> <span class=\"o\">=</span> <span class=\"n\">my_obs1</span> <span class=\"o\">+</span> <span class=\"n\">my_obs2</span>\n\n<span class=\"n\">my_m_eff</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">my_obs1</span> <span class=\"o\">/</span> <span class=\"n\">my_obs2</span><span class=\"p\">)</span>\n\n<span class=\"n\">iamzero</span> <span class=\"o\">=</span> <span class=\"n\">my_m_eff</span> <span class=\"o\">-</span> <span class=\"n\">my_m_eff</span>\n<span class=\"c1\"># Check that value and fluctuations are zero within machine precision</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">iamzero</span> <span class=\"o\">==</span> <span class=\"mf\">0.0</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"kc\">True</span>\n</code></pre></div>\n\n<h2 id=\"error-estimation\">Error estimation</h2>\n\n<p>The error estimation within <code>pyerrors</code> is based on the gamma method introduced in <a href=\"https://arxiv.org/abs/hep-lat/0306017\">arXiv:hep-lat/0306017</a>.\nAfter having arrived at the derived quantity of interest the <code>gamma_method</code> can be called as detailed in the following example.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_sum</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mf\">1.70</span><span class=\"p\">(</span><span class=\"mi\">57</span><span class=\"p\">)</span>\n<span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">1.70000000e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">5.72046658e-01</span> <span class=\"o\">+/-</span> <span class=\"mf\">7.56746598e-02</span> <span class=\"p\">(</span><span class=\"mf\">33.650</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>  <span class=\"n\">t_int</span>         <span class=\"mf\">2.71422900e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">6.40320983e-01</span> <span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"mf\">2.00</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1000</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble_name&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">1000</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>We use the following definition of the integrated autocorrelation time established in <a href=\"https://link.springer.com/article/10.1007/BF01022990\">Madras &amp; Sokal 1988</a>\n$$\\tau_\\mathrm{int}=\\frac{1}{2}+\\sum_{t=1}^{W}\\rho(t)\\geq \\frac{1}{2}\\,.$$\nThe window $W$ is determined via the automatic windowing procedure described in <a href=\"https://arxiv.org/abs/hep-lat/0306017\">arXiv:hep-lat/0306017</a>.\nThe standard value for the parameter $S$ of this automatic windowing procedure is $S=2$. Other values for $S$ can be passed to the <code>gamma_method</code> as parameter.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">(</span><span class=\"n\">S</span><span class=\"o\">=</span><span class=\"mf\">3.0</span><span class=\"p\">)</span>\n<span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">1.70000000e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">6.30675201e-01</span> <span class=\"o\">+/-</span> <span class=\"mf\">1.04585650e-01</span> <span class=\"p\">(</span><span class=\"mf\">37.099</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>  <span class=\"n\">t_int</span>         <span class=\"mf\">3.29909703e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">9.77310102e-01</span> <span class=\"n\">S</span> <span class=\"o\">=</span> <span class=\"mf\">3.00</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1000</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble_name&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">1000</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>The integrated autocorrelation time $\\tau_\\mathrm{int}$ and the autocorrelation function $\\rho(W)$ can be monitored via the methods <code>pyerrors.obs.Obs.plot_tauint</code> and <code>pyerrors.obs.Obs.plot_tauint</code>.</p>\n\n<p>If the parameter $S$ is set to zero it is assumed that the dataset does not exhibit any autocorrelation and the windowsize is chosen to be zero.\nIn this case the error estimate is identical to the sample standard error.</p>\n\n<h3 id=\"exponential-tails\">Exponential tails</h3>\n\n<p>Slow modes in the Monte Carlo history can be accounted for by attaching an exponential tail to the autocorrelation function $\\rho$ as suggested in <a href=\"https://arxiv.org/abs/1009.5228\">arXiv:1009.5228</a>. The longest autocorrelation time in the history, $\\tau_\\mathrm{exp}$, can be passed to the <code>gamma_method</code> as parameter. In this case the automatic windowing procedure is vacated and the parameter $S$ does not affect the error estimate.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">(</span><span class=\"n\">tau_exp</span><span class=\"o\">=</span><span class=\"mf\">7.2</span><span class=\"p\">)</span>\n<span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">1.70000000e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">6.28097762e-01</span> <span class=\"o\">+/-</span> <span class=\"mf\">5.79077524e-02</span> <span class=\"p\">(</span><span class=\"mf\">36.947</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>  <span class=\"n\">t_int</span>         <span class=\"mf\">3.27218667e+00</span> <span class=\"o\">+/-</span> <span class=\"mf\">7.99583654e-01</span> <span class=\"n\">tau_exp</span> <span class=\"o\">=</span> <span class=\"mf\">7.20</span><span class=\"p\">,</span>  <span class=\"n\">N_sigma</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1000</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble_name&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">1000</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>For the full API see <code>pyerrors.obs.Obs.gamma_method</code>.</p>\n\n<h2 id=\"multiple-ensemblesreplica\">Multiple ensembles/replica</h2>\n\n<p>Error propagation for multiple ensembles (Markov chains with different simulation parameters) is handled automatically. Ensembles are uniquely identified by their <code>name</code>.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">obs1</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">obs2</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble2&#39;</span><span class=\"p\">])</span>\n\n<span class=\"n\">my_sum</span> <span class=\"o\">=</span> <span class=\"n\">obs1</span> <span class=\"o\">+</span> <span class=\"n\">obs2</span>\n<span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>   <span class=\"mf\">2.00697958e+00</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1500</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">2</span> <span class=\"n\">ensembles</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble1&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">1000</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble2&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">500</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><code>pyerrors</code> identifies multiple replica (independent Markov chains with identical simulation parameters) by the vertical bar <code>|</code> in the name of the data set.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">obs1</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1|r01&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">obs2</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1|r02&#39;</span><span class=\"p\">])</span>\n\n<span class=\"o\">&gt;</span> <span class=\"n\">my_sum</span> <span class=\"o\">=</span> <span class=\"n\">obs1</span> <span class=\"o\">+</span> <span class=\"n\">obs2</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">my_sum</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>   <span class=\"mf\">2.00697958e+00</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1500</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble1&#39;</span>\n<span class=\"o\">&gt;</span>     <span class=\"err\">\u00b7</span> <span class=\"n\">Replicum</span> <span class=\"s1\">&#39;r01&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">1000</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>     <span class=\"err\">\u00b7</span> <span class=\"n\">Replicum</span> <span class=\"s1\">&#39;r02&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">500</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">1</span> <span class=\"n\">to</span> <span class=\"mi\">500</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h3 id=\"error-estimation-for-multiple-ensembles\">Error estimation for multiple ensembles</h3>\n\n<p>In order to keep track of different error analysis parameters for different ensembles one can make use of global dictionaries as detailed in the following example.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"o\">.</span><span class=\"n\">S_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.5</span>\n<span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"o\">.</span><span class=\"n\">tau_exp_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;ensemble2&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">8.0</span>\n<span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"o\">.</span><span class=\"n\">tau_exp_dict</span><span class=\"p\">[</span><span class=\"s1\">&#39;ensemble3&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>\n</code></pre></div>\n\n<p>In case the <code>gamma_method</code> is called without any parameters it will use the values specified in the dictionaries for the respective ensembles.\nPassing arguments to the <code>gamma_method</code> still dominates over the dictionaries.</p>\n\n<h2 id=\"irregular-monte-carlo-chains\">Irregular Monte Carlo chains</h2>\n\n<p><code>Obs</code> objects defined on irregular Monte Carlo chains can be initialized with the parameter <code>idl</code>.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"c1\"># Observable defined on configurations 20 to 519</span>\n<span class=\"n\">obs1</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">],</span> <span class=\"n\">idl</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">520</span><span class=\"p\">)])</span>\n<span class=\"n\">obs1</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">9.98319881e-01</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">500</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble1&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">500</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">20</span> <span class=\"n\">to</span> <span class=\"mi\">519</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Observable defined on every second configuration between 5 and 1003</span>\n<span class=\"n\">obs2</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">],</span> <span class=\"n\">idl</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">1005</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)])</span>\n<span class=\"n\">obs2</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">9.99100712e-01</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">500</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble1&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">500</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"kn\">from</span> <span class=\"mi\">5</span> <span class=\"n\">to</span> <span class=\"mi\">1003</span> <span class=\"ow\">in</span> <span class=\"n\">steps</span> <span class=\"n\">of</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Observable defined on configurations 2, 9, 28, 29 and 501</span>\n<span class=\"n\">obs3</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples3</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">],</span> <span class=\"n\">idl</span><span class=\"o\">=</span><span class=\"p\">[[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mi\">29</span><span class=\"p\">,</span> <span class=\"mi\">501</span><span class=\"p\">]])</span>\n<span class=\"n\">obs3</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">1.01718064e+00</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">5</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Ensemble</span> <span class=\"s1\">&#39;ensemble1&#39;</span> <span class=\"p\">:</span> <span class=\"mi\">5</span> <span class=\"n\">configurations</span> <span class=\"p\">(</span><span class=\"n\">irregular</span> <span class=\"nb\">range</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><code>Obs</code> objects defined on regular and irregular histories of the same ensemble can be combined with each other and the correct error propagation and estimation is automatically taken care of.</p>\n\n<p><strong>Warning:</strong> Irregular Monte Carlo chains can result in odd patterns in the autocorrelation functions.\nMake sure to check the autocorrelation time with e.g. <code>pyerrors.obs.Obs.plot_rho</code> or <code>pyerrors.obs.Obs.plot_tauint</code>.</p>\n\n<p>For the full API see <code>pyerrors.obs.Obs</code>.</p>\n\n<h1 id=\"correlators\">Correlators</h1>\n\n<p>When one is not interested in single observables but correlation functions, <code>pyerrors</code> offers the <code>Corr</code> class which simplifies the corresponding error propagation and provides the user with a set of standard methods. In order to initialize a <code>Corr</code> objects one needs to arrange the data as a list of <code>Obs</code></p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_corr</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Corr</span><span class=\"p\">([</span><span class=\"n\">obs_0</span><span class=\"p\">,</span> <span class=\"n\">obs_1</span><span class=\"p\">,</span> <span class=\"n\">obs_2</span><span class=\"p\">,</span> <span class=\"n\">obs_3</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_corr</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">x0</span><span class=\"o\">/</span><span class=\"n\">a</span>  <span class=\"n\">Corr</span><span class=\"p\">(</span><span class=\"n\">x0</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"o\">------------------</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">0</span>      <span class=\"mf\">0.7957</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1</span>      <span class=\"mf\">0.5156</span><span class=\"p\">(</span><span class=\"mi\">51</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">2</span>      <span class=\"mf\">0.3227</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">3</span>      <span class=\"mf\">0.2041</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>In case the correlation functions are not defined on the outermost timeslices, for example because of fixed boundary conditions, a padding can be introduced.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_corr</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Corr</span><span class=\"p\">([</span><span class=\"n\">obs_0</span><span class=\"p\">,</span> <span class=\"n\">obs_1</span><span class=\"p\">,</span> <span class=\"n\">obs_2</span><span class=\"p\">,</span> <span class=\"n\">obs_3</span><span class=\"p\">],</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_corr</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">x0</span><span class=\"o\">/</span><span class=\"n\">a</span>  <span class=\"n\">Corr</span><span class=\"p\">(</span><span class=\"n\">x0</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"o\">------------------</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">0</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1</span>      <span class=\"mf\">0.7957</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">2</span>      <span class=\"mf\">0.5156</span><span class=\"p\">(</span><span class=\"mi\">51</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">3</span>      <span class=\"mf\">0.3227</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">4</span>      <span class=\"mf\">0.2041</span><span class=\"p\">(</span><span class=\"mi\">21</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">5</span>\n</code></pre></div>\n\n<p>The individual entries of a correlator can be accessed via slicing</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_corr</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;</span> <span class=\"mf\">0.3227</span><span class=\"p\">(</span><span class=\"mi\">33</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Error propagation with the <code>Corr</code> class works very similar to <code>Obs</code> objects. Mathematical operations are overloaded and <code>Corr</code> objects can be computed together with other <code>Corr</code> objects, <code>Obs</code> objects or real numbers and integers.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_new_corr</span> <span class=\"o\">=</span> <span class=\"mf\">0.3</span> <span class=\"o\">*</span> <span class=\"n\">my_corr</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">my_corr</span> <span class=\"o\">*</span> <span class=\"n\">my_corr</span> <span class=\"o\">+</span> <span class=\"mi\">12</span> <span class=\"o\">/</span> <span class=\"n\">my_corr</span>\n</code></pre></div>\n\n<p><code>pyerrors</code> provides the user with a set of regularly used methods for the manipulation of correlator objects:</p>\n\n<ul>\n<li><code>Corr.gamma_method</code> applies the gamma method to all entries of the correlator.</li>\n<li><code>Corr.m_eff</code> to construct effective masses. Various variants for periodic and fixed temporal boundary conditions are available.</li>\n<li><code>Corr.deriv</code> returns the first derivative of the correlator as <code>Corr</code>. Different discretizations of the numerical derivative are available.</li>\n<li><code>Corr.second_deriv</code> returns the second derivative of the correlator as <code>Corr</code>. Different discretizations of the numerical derivative are available.</li>\n<li><code>Corr.symmetric</code> symmetrizes parity even correlations functions, assuming periodic boundary conditions.</li>\n<li><code>Corr.anti_symmetric</code> anti-symmetrizes parity odd correlations functions, assuming periodic boundary conditions.</li>\n<li><code>Corr.T_symmetry</code> averages a correlator with its time symmetry partner, assuming fixed boundary conditions.</li>\n<li><code>Corr.plateau</code> extracts a plateau value from the correlator in a given range.</li>\n<li><code>Corr.roll</code> periodically shifts the correlator.</li>\n<li><code>Corr.reverse</code> reverses the time ordering of the correlator.</li>\n<li><code>Corr.correlate</code> constructs a disconnected correlation function from the correlator and another <code>Corr</code> or <code>Obs</code> object.</li>\n<li><code>Corr.reweight</code> reweights the correlator.</li>\n</ul>\n\n<p><code>pyerrors</code> can also handle matrices of correlation functions and extract energy states from these matrices via a generalized eigenvalue problem (see <code>pyerrors.correlators.Corr.GEVP</code>).</p>\n\n<p>For the full API see <code>pyerrors.correlators.Corr</code>.</p>\n\n<h1 id=\"complex-valued-observables\">Complex valued observables</h1>\n\n<p><code>pyerrors</code> can handle complex valued observables via the class <code>pyerrors.obs.CObs</code>.\n<code>CObs</code> are initialized with a real and an imaginary part which both can be <code>Obs</code> valued.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_real_part</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">])</span>\n<span class=\"n\">my_imag_part</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples2</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">&#39;ensemble1&#39;</span><span class=\"p\">])</span>\n\n<span class=\"n\">my_cobs</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">CObs</span><span class=\"p\">(</span><span class=\"n\">my_real_part</span><span class=\"p\">,</span> <span class=\"n\">my_imag_part</span><span class=\"p\">)</span>\n<span class=\"n\">my_cobs</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_cobs</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">0.9959</span><span class=\"p\">(</span><span class=\"mi\">91</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mf\">0.659</span><span class=\"p\">(</span><span class=\"mi\">28</span><span class=\"p\">)</span><span class=\"n\">j</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>Elementary mathematical operations are overloaded and samples are properly propagated as for the <code>Obs</code> class.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_derived_cobs</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">my_cobs</span> <span class=\"o\">+</span> <span class=\"n\">my_cobs</span><span class=\"o\">.</span><span class=\"n\">conjugate</span><span class=\"p\">())</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">abs</span><span class=\"p\">(</span><span class=\"n\">my_cobs</span><span class=\"p\">)</span>\n<span class=\"n\">my_derived_cobs</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_derived_cobs</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"p\">(</span><span class=\"mf\">1.668</span><span class=\"p\">(</span><span class=\"mi\">23</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"mf\">0.0</span><span class=\"n\">j</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<h1 id=\"the-covobs-class\">The <code>Covobs</code> class</h1>\n\n<p>In many projects, auxiliary data that is not based on Monte Carlo chains enters. Examples are experimentally determined mesons masses which are used to set the scale or renormalization constants. These numbers come with an error that has to be propagated through the analysis. The <code>Covobs</code> class allows to define such quantities in <code>pyerrors</code>. Furthermore, external input might consist of correlated quantities. An example are the parameters of an interpolation formula, which are defined via mean values and a covariance matrix between all parameters. The contribution of the interpolation formula to the error of a derived quantity therefore might depend on the complete covariance matrix.</p>\n\n<p>This concept is built into the definition of <code>Covobs</code>. In <code>pyerrors</code>, external input is defined by $M$ mean values, a $M\\times M$ covariance matrix, where $M=1$ is permissible, and a name that uniquely identifies the covariance matrix. Below, we define the pion mass, based on its mean value and error, 134.9768(5). Note, that the square of the error enters <code>cov_Obs</code>, since the second argument of this function is the covariance matrix of the <code>Covobs</code>.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">pyerrors.obs</span> <span class=\"k\">as</span> <span class=\"nn\">pe</span>\n\n<span class=\"n\">mpi</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">cov_Obs</span><span class=\"p\">(</span><span class=\"mf\">134.9768</span><span class=\"p\">,</span> <span class=\"mf\">0.0005</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pi^0 mass&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">mpi</span><span class=\"o\">.</span><span class=\"n\">gamma_method</span><span class=\"p\">()</span>\n<span class=\"n\">mpi</span><span class=\"o\">.</span><span class=\"n\">details</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Result</span>         <span class=\"mf\">1.34976800e+02</span> <span class=\"o\">+/-</span> <span class=\"mf\">5.00000000e-04</span> <span class=\"o\">+/-</span> <span class=\"mf\">0.00000000e+00</span> <span class=\"p\">(</span><span class=\"mf\">0.000</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span>  <span class=\"n\">pi</span><span class=\"o\">^</span><span class=\"mi\">0</span> <span class=\"n\">mass</span>     <span class=\"mf\">5.00000000e-04</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">0</span> <span class=\"n\">samples</span> <span class=\"ow\">in</span> <span class=\"mi\">1</span> <span class=\"n\">ensemble</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span>   <span class=\"err\">\u00b7</span> <span class=\"n\">Covobs</span>   <span class=\"s1\">&#39;pi^0 mass&#39;</span>\n</code></pre></div>\n\n<p>The resulting object <code>mpi</code> is an <code>Obs</code> that contains a <code>Covobs</code>. In the following, it may be handled as any other <code>Obs</code>. The contribution of the covariance matrix to the error of an <code>Obs</code> is determined from the $M \\times M$ covariance matrix $\\Sigma$ and the gradient of the <code>Obs</code> with respect to the external quantities, which is the $1\\times M$ Jacobian matrix $J$, via\n$$s = \\sqrt{J^T \\Sigma J}\\,,$$\nwhere the Jacobian is computed for each derived quantity via automatic differentiation.</p>\n\n<p>Correlated auxiliary data is defined similarly to above, e.g., via</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">RAP</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">cov_Obs</span><span class=\"p\">([</span><span class=\"mf\">16.7457</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">19.0475</span><span class=\"p\">],</span> <span class=\"p\">[[</span><span class=\"mf\">3.49591</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mf\">6.07560</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">6.07560</span><span class=\"p\">,</span> <span class=\"mf\">10.5834</span><span class=\"p\">]],</span> <span class=\"s1\">&#39;R_AP, 1906.03445, (5.3a)&#39;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">RAP</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"p\">[</span><span class=\"n\">Obs</span><span class=\"p\">[</span><span class=\"mf\">16.7</span><span class=\"p\">(</span><span class=\"mf\">1.9</span><span class=\"p\">)],</span> <span class=\"n\">Obs</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">19.0</span><span class=\"p\">(</span><span class=\"mf\">3.3</span><span class=\"p\">)]]</span>\n</code></pre></div>\n\n<p>where <code>RAP</code> now is a list of two <code>Obs</code> that contains the two correlated parameters.</p>\n\n<p>Since the gradient of a derived observable with respect to an external covariance matrix is propagated through the entire analysis, the <code>Covobs</code> class allows to quote the derivative of a result with respect to the external quantities. If these derivatives are published together with the result, small shifts in the definition of external quantities, e.g., the definition of the physical point, can be performed a posteriori based on the published information. This may help to compare results of different groups. The gradient of an <code>Obs</code> <code>o</code> with respect to a covariance matrix with the identifying string <code>k</code> may be accessed via</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">covobs</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">grad</span>\n</code></pre></div>\n\n<h1 id=\"error-propagation-in-iterative-algorithms\">Error propagation in iterative algorithms</h1>\n\n<p><code>pyerrors</code> supports exact linear error propagation for iterative algorithms like various variants of non-linear least sqaures fits or root finding. The derivatives required for the error propagation are calculated as described in <a href=\"https://arxiv.org/abs/1809.01289\">arXiv:1809.01289</a>.</p>\n\n<h2 id=\"least-squares-fits\">Least squares fits</h2>\n\n<p>Standard non-linear least square fits with errors on the dependent but not the independent variables can be performed with <code>pyerrors.fits.least_squares</code>. As default solver the Levenberg-Marquardt algorithm implemented in <a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.least_squares.html\">scipy</a> is used.</p>\n\n<p>Fit functions have to be of the following form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">autograd.numpy</span> <span class=\"k\">as</span> <span class=\"nn\">anp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">anp</span><span class=\"o\">.</span><span class=\"n\">exp</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p><strong>It is important that numerical functions refer to <code>autograd.numpy</code> instead of <code>numpy</code> for the automatic differentiation in iterative algorithms to work properly.</strong></p>\n\n<p>Fits can then be performed via</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">fit_result</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">fits</span><span class=\"o\">.</span><span class=\"n\">least_squares</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">func</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">fit_result</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Fit</span> <span class=\"k\">with</span> <span class=\"mi\">2</span> <span class=\"n\">parameters</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Method</span><span class=\"p\">:</span> <span class=\"n\">Levenberg</span><span class=\"o\">-</span><span class=\"n\">Marquardt</span>\n<span class=\"o\">&gt;</span> <span class=\"err\">`</span><span class=\"n\">ftol</span><span class=\"err\">`</span> <span class=\"n\">termination</span> <span class=\"n\">condition</span> <span class=\"ow\">is</span> <span class=\"n\">satisfied</span><span class=\"o\">.</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">chisquare</span><span class=\"o\">/</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"p\">:</span> <span class=\"mf\">0.9593035785160936</span>\n\n<span class=\"o\">&gt;</span>  <span class=\"n\">Goodness</span> <span class=\"n\">of</span> <span class=\"n\">fit</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">\u03c7</span><span class=\"err\">\u00b2</span><span class=\"o\">/</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">f</span><span class=\"o\">.</span> <span class=\"o\">=</span> <span class=\"mf\">0.959304</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">p</span><span class=\"o\">-</span><span class=\"n\">value</span>   <span class=\"o\">=</span> <span class=\"mf\">0.5673</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">Fit</span> <span class=\"n\">parameters</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">0</span>      <span class=\"mf\">0.0548</span><span class=\"p\">(</span><span class=\"mi\">28</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"mi\">1</span>      <span class=\"mf\">1.933</span><span class=\"p\">(</span><span class=\"mi\">64</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>where x is a <code>list</code> or <code>numpy.array</code> of <code>floats</code> and y is a <code>list</code> or <code>numpy.array</code> of <code>Obs</code>.</p>\n\n<p>Data stored in <code>Corr</code> objects can be fitted directly using the <code>Corr.fit</code> method.</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_corr</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Corr</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"n\">fit_result</span> <span class=\"o\">=</span> <span class=\"n\">my_corr</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"n\">fitrange</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">])</span>\n</code></pre></div>\n\n<p>this can simplify working with absolute fit ranges and takes care of gaps in the data automatically.</p>\n\n<p>For fit functions with multiple independent variables the fit function can be of the form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x1</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x2</span>\n</code></pre></div>\n\n<p><code>pyerrors</code> also supports correlated fits which can be triggered via the parameter <code>correlated_fit=True</code>.\nDetails about how the required covariance matrix is estimated can be found in <code>pyerrors.obs.covariance</code>.</p>\n\n<p>Direct visualizations of the performed fits can be triggered via <code>resplot=True</code> or <code>qqplot=True</code>. For all available options see <code>pyerrors.fits.least_squares</code>.</p>\n\n<h2 id=\"total-least-squares-fits\">Total least squares fits</h2>\n\n<p><code>pyerrors</code> can also fit data with errors on both the dependent and independent variables using the total least squares method also referred to orthogonal distance regression as implemented in <a href=\"https://docs.scipy.org/doc/scipy/reference/odr.html\">scipy</a>, see <code>pyerrors.fits.least_squares</code>. The syntax is identical to the standard least squares case, the only diffrence being that <code>x</code> also has to be a <code>list</code> or <code>numpy.array</code> of <code>Obs</code>.</p>\n\n<p>For the full API see <code>pyerrors.fits</code> for fits and <code>pyerrors.roots</code> for finding roots of functions.</p>\n\n<h1 id=\"matrix-operations\">Matrix operations</h1>\n\n<p><code>pyerrors</code> provides wrappers for <code>Obs</code>- and <code>CObs</code>-valued matrix operations based on <code>numpy.linalg</code>. The supported functions include:</p>\n\n<ul>\n<li><code>inv</code> for the matrix inverse.</li>\n<li><code>cholseky</code> for the Cholesky decomposition.</li>\n<li><code>det</code> for the matrix determinant.</li>\n<li><code>eigh</code> for eigenvalues and eigenvectors of hermitean matrices.</li>\n<li><code>eig</code> for eigenvalues of general matrices.</li>\n<li><code>pinv</code> for the Moore-Penrose pseudoinverse.</li>\n<li><code>svd</code> for the singular-value-decomposition.</li>\n</ul>\n\n<p>For the full API see <code>pyerrors.linalg</code>.</p>\n\n<h1 id=\"export-data\">Export data</h1>\n\n<p>The preferred exported file format within <code>pyerrors</code> is json.gz. Files written to this format are valid JSON files that have been compressed using gzip. The structure of the content is inspired by the dobs format of the ALPHA collaboration. The aim of the format is to facilitate the storage of data in a self-contained way such that, even years after the creation of the file, it is possible to extract all necessary information:</p>\n\n<ul>\n<li>What observables are stored? Possibly: How exactly are they defined.</li>\n<li>How does each single ensemble or external quantity contribute to the error of the observable?</li>\n<li>Who did write the file when and on which machine?</li>\n</ul>\n\n<p>This can be achieved by storing all information in one single file. The export routines of <code>pyerrors</code> are written such that as much information as possible is written automatically as described in the following example</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"n\">my_obs</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">Obs</span><span class=\"p\">([</span><span class=\"n\">samples</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s2\">&quot;test_ensemble&quot;</span><span class=\"p\">])</span>\n<span class=\"n\">my_obs</span><span class=\"o\">.</span><span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;My observable&quot;</span>\n\n<span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dump_to_json</span><span class=\"p\">(</span><span class=\"n\">my_obs</span><span class=\"p\">,</span> <span class=\"s2\">&quot;test_output_file&quot;</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;This file contains a test observable&quot;</span><span class=\"p\">)</span>\n<span class=\"c1\"># For a single observable one can equivalently use the class method dump</span>\n<span class=\"n\">my_obs</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"s2\">&quot;test_output_file&quot;</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">&quot;This file contains a test observable&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">check</span> <span class=\"o\">=</span> <span class=\"n\">pe</span><span class=\"o\">.</span><span class=\"n\">input</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">load_json</span><span class=\"p\">(</span><span class=\"s2\">&quot;test_output_file&quot;</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">my_obs</span> <span class=\"o\">==</span> <span class=\"n\">check</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;</span> <span class=\"kc\">True</span>\n</code></pre></div>\n\n<p>The format also allows to directly write out the content of <code>Corr</code> objects or lists and arrays of <code>Obs</code> objects by passing the desired data to <code>pyerrors.input.json.dump_to_json</code>.</p>\n\n<h2 id=\"jsongz-format-specification\">json.gz format specification</h2>\n\n<p>The first entries of the file provide optional auxiliary information:</p>\n\n<ul>\n<li><code>program</code> is a string that indicates which program was used to write the file.</li>\n<li><code>version</code> is a string that specifies the version of the format.</li>\n<li><code>who</code> is a string that specifies the user name of the creator of the file.</li>\n<li><code>date</code> is a string and contains the creation date of the file.</li>\n<li><code>host</code> is a string and contains the hostname of the machine where the file has been written.</li>\n<li><code>description</code> contains information on the content of the file. This field is not filled automatically in <code>pyerrors</code>. The user is advised to provide as detailed information as possible in this field. Examples are: Input files of measurements or simulations, LaTeX formulae or references to publications to specify how the observables have been computed, details on the analysis strategy, ... This field may be any valid JSON type. Strings, arrays or objects (equivalent to dicts in python) are well suited to provide information.</li>\n</ul>\n\n<p>The only necessary entry of the file is the field\n-<code>obsdata</code>, an array that contains the actual data.</p>\n\n<p>Each entry of the array belongs to a single structure of observables. Currently, these structures can be either of <code>Obs</code>, <code>list</code>, <code>numpy.ndarray</code>, <code>Corr</code>. All <code>Obs</code> inside a structure (with dimension &gt; 0) have to be defined on the same set of configurations. Different structures, that are represented by entries of the array <code>obsdata</code>, are treated independently. Each entry of the array <code>obsdata</code> has the following required entries:</p>\n\n<ul>\n<li><code>type</code> is a string that specifies the type of the structure. This allows to parse the content to the correct form after reading the file. It is always possible to interpret the content as list of Obs.</li>\n<li><code>value</code> is an array that contains the mean values of the Obs inside the structure.\nThe following entries are optional:</li>\n<li><code>layout</code> is a string that specifies the layout of multi-dimensional structures. Examples are \"2, 2\" for a 2x2 dimensional matrix or  \"64, 4, 4\" for a Corr with $T=64$ and 4x4 matrices on each time slices. \"1\" denotes a single Obs. Multi-dimensional structures are stored in row-major format (see below).</li>\n<li><code>tag</code> is any JSON type. It contains additional information concerning the structure. The <code>tag</code> of an <code>Obs</code> in <code>pyerrors</code> is written here.</li>\n<li><code>reweighted</code> is a Bool that may be used to specify, whether the <code>Obs</code> in the structure have been reweighted.</li>\n<li><code>data</code> is an array that contains the data from MC chains. We will define it below.</li>\n<li><code>cdata</code> is an array that contains the data from external quantities with an error (<code>Covobs</code> in <code>pyerrors</code>). We will define it below.</li>\n</ul>\n\n<p>The array <code>data</code> contains the data from MC chains. Each entry of the array corresponds to one ensemble and contains:</p>\n\n<ul>\n<li><code>id</code>, a string that contains the name of the ensemble</li>\n<li><code>replica</code>, an array that contains an entry per replica of the ensemble.</li>\n</ul>\n\n<p>Each entry of <code>replica</code> contains\n<code>name</code>, a string that contains the name of the replica\n<code>deltas</code>, an array that contains the actual data.</p>\n\n<p>Each entry in <code>deltas</code> corresponds to one configuration of the replica and has $1+N$ many entries. The first entry is an integer that specifies the configuration number that, together with ensemble and replica name, may be used to uniquely identify the configuration on which the data has been obtained. The following N entries specify the deltas, i.e., the deviation of the observable from the mean value on this configuration, of each <code>Obs</code> inside the structure. Multi-dimensional structures are stored in a row-major format. For primary observables, such as correlation functions, $value + delta_i$ matches the primary data obtained on the configuration.</p>\n\n<p>The array <code>cdata</code> contains information about the contribution of auxiliary observables, represented by <code>Covobs</code> in <code>pyerrors</code>, to the total error of the observables. Each entry of the array belongs to one auxiliary covariance matrix and contains:</p>\n\n<ul>\n<li><code>id</code>, a string that identifies the covariance matrix</li>\n<li><code>layout</code>, a string that defines the dimensions of the $M\\times M$ covariance matrix (has to be \"M, M\" or \"1\").</li>\n<li><code>cov</code>, an array that contains the $M\\times M$ many entries of the covariance matrix, stored in row-major format.</li>\n<li><code>grad</code>, an array that contains N entries, one for each <code>Obs</code> inside the structure. Each entry itself is an array, that contains the M gradients of the Nth observable  with respect to the quantity that corresponds to the Mth diagonal entry of the covariance matrix.</li>\n</ul>\n\n<p>A JSON schema that may be used to verify the correctness of a file with respect to the format definition is stored in ./examples/json_schema.json. The schema is a self-descriptive format definition and contains an exemplary file.</p>\n\n<p>Julia I/O routines for the json.gz format, compatible with <a href=\"https://gitlab.ift.uam-csic.es/alberto/aderrors.jl\">ADerrors.jl</a>, can be found <a href=\"https://github.com/fjosw/ADjson.jl\">here</a>.</p>\n\n<h1 id=\"citing\">Citing</h1>\n\n<p>If you use <code>pyerrors</code> for research that leads to a publication please consider citing:</p>\n\n<ul>\n<li>Ulli Wolff, <em>Monte Carlo errors with less errors</em>. Comput.Phys.Commun. 156 (2004) 143-153, Comput.Phys.Commun. 176 (2007) 383 (erratum).</li>\n<li>Stefan Schaefer, Rainer Sommer, Francesco Virotta, <em>Critical slowing down and error analysis in lattice QCD simulations</em>. Nucl.Phys.B 845 (2011) 93-119.</li>\n<li>Alberto Ramos, <em>Automatic differentiation for error analysis of Monte Carlo data</em>. Comput.Phys.Commun. 238 (2019) 19-35.</li>\n</ul>\n"}, "pyerrors.correlators": {"fullname": "pyerrors.correlators", "modulename": "pyerrors.correlators", "type": "module", "doc": "<p></p>\n"}, "pyerrors.correlators.Corr": {"fullname": "pyerrors.correlators.Corr", "modulename": "pyerrors.correlators", "qualname": "Corr", "type": "class", "doc": "<p>The class for a correlator (time dependent sequence of pe.Obs).</p>\n\n<p>Everything, this class does, can be achieved using lists or arrays of Obs.\nBut it is simply more convenient to have a dedicated object for correlators.\nOne often wants to add or multiply correlators of the same length at every timeslice and it is inconvenient\nto iterate over all timeslices for every operation. This is especially true, when dealing with matrices.</p>\n\n<p>The correlator can have two types of content: An Obs at every timeslice OR a GEVP\nmatrix at every timeslice. Other dependency (eg. spatial) are not supported.</p>\n"}, "pyerrors.correlators.Corr.__init__": {"fullname": "pyerrors.correlators.Corr.__init__", "modulename": "pyerrors.correlators", "qualname": "Corr.__init__", "type": "function", "doc": "<p>Initialize a Corr object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_input</strong> (list or array):\nlist of Obs or list of arrays of Obs or array of Corrs</li>\n<li><strong>padding</strong> (list, optional):\nList with two entries where the first labels the padding\nat the front of the correlator and the second the padding\nat the back.</li>\n<li><strong>prange</strong> (list, optional):\nList containing the first and last timeslice of the plateau\nregion indentified for this correlator.</li>\n</ul>\n", "signature": "(self, data_input, padding=[0, 0], prange=None)", "funcdef": "def"}, "pyerrors.correlators.Corr.reweighted": {"fullname": "pyerrors.correlators.Corr.reweighted", "modulename": "pyerrors.correlators", "qualname": "Corr.reweighted", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.correlators.Corr.gamma_method": {"fullname": "pyerrors.correlators.Corr.gamma_method", "modulename": "pyerrors.correlators", "qualname": "Corr.gamma_method", "type": "function", "doc": "<p>Apply the gamma method to the content of the Corr.</p>\n", "signature": "(self, **kwargs)", "funcdef": "def"}, "pyerrors.correlators.Corr.projected": {"fullname": "pyerrors.correlators.Corr.projected", "modulename": "pyerrors.correlators", "qualname": "Corr.projected", "type": "function", "doc": "<p>We need to project the Correlator with a Vector to get a single value at each timeslice.</p>\n\n<p>The method can use one or two vectors.\nIf two are specified it returns v1@G@v2 (the order might be very important.)\nBy default it will return the lowest source, which usually means unsmeared-unsmeared (0,0), but it does not have to</p>\n", "signature": "(self, vector_l=None, vector_r=None, normalize=False)", "funcdef": "def"}, "pyerrors.correlators.Corr.item": {"fullname": "pyerrors.correlators.Corr.item", "modulename": "pyerrors.correlators", "qualname": "Corr.item", "type": "function", "doc": "<p>Picks the element [i,j] from every matrix and returns a correlator containing one Obs per timeslice.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>i</strong> (int):\nFirst index to be picked.</li>\n<li><strong>j</strong> (int):\nSecond index to be picked.</li>\n</ul>\n", "signature": "(self, i, j)", "funcdef": "def"}, "pyerrors.correlators.Corr.plottable": {"fullname": "pyerrors.correlators.Corr.plottable", "modulename": "pyerrors.correlators", "qualname": "Corr.plottable", "type": "function", "doc": "<p>Outputs the correlator in a plotable format.</p>\n\n<p>Outputs three lists containing the timeslice index, the value on each\ntimeslice and the error on each timeslice.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.symmetric": {"fullname": "pyerrors.correlators.Corr.symmetric", "modulename": "pyerrors.correlators", "qualname": "Corr.symmetric", "type": "function", "doc": "<p>Symmetrize the correlator around x0=0.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.anti_symmetric": {"fullname": "pyerrors.correlators.Corr.anti_symmetric", "modulename": "pyerrors.correlators", "qualname": "Corr.anti_symmetric", "type": "function", "doc": "<p>Anti-symmetrize the correlator around x0=0.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.matrix_symmetric": {"fullname": "pyerrors.correlators.Corr.matrix_symmetric", "modulename": "pyerrors.correlators", "qualname": "Corr.matrix_symmetric", "type": "function", "doc": "<p>Symmetrizes the correlator matrices on every timeslice.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.GEVP": {"fullname": "pyerrors.correlators.Corr.GEVP", "modulename": "pyerrors.correlators", "qualname": "Corr.GEVP", "type": "function", "doc": "<p>Solve the general eigenvalue problem on the current correlator</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>t0</strong> (int):\nThe time t0 for G(t)v= lambda G(t_0)v</li>\n<li><strong>ts</strong> (int):\nfixed time G(t_s)v= lambda G(t_0)v  if return_list=False\nIf return_list=True and sorting=Eigenvector it gives a reference point for the sorting method.</li>\n<li><strong>state</strong> (int):\nThe state one is interested in ordered by energy. The lowest state is zero.</li>\n<li><strong>sorted_list</strong> (string):\nif this argument is set, a list of vectors (len=self.T) is returned. If it is left as None, only one vector is returned.\n\"Eigenvalue\"  -  The eigenvector is chosen according to which eigenvalue it belongs individually on every timeslice.\n\"Eigenvector\" -  Use the method described in arXiv:2004.10472 [hep-lat] to find the set of v(t) belonging to the state.\n                 The reference state is identified by its eigenvalue at t=ts</li>\n</ul>\n", "signature": "(self, t0, ts=None, state=0, sorted_list=None)", "funcdef": "def"}, "pyerrors.correlators.Corr.Eigenvalue": {"fullname": "pyerrors.correlators.Corr.Eigenvalue", "modulename": "pyerrors.correlators", "qualname": "Corr.Eigenvalue", "type": "function", "doc": "<p>Determines the eigenvalue of the GEVP by solving and projecting the correlator</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>t0</strong> (int):\nThe time t0 for G(t)v= lambda G(t_0)v</li>\n<li><strong>ts</strong> (int):\nfixed time G(t_s)v= lambda G(t_0)v  if return_list=False\nIf return_list=True and sorting=Eigenvector it gives a reference point for the sorting method.</li>\n<li><strong>state</strong> (int):\nThe state one is interested in ordered by energy. The lowest state is zero.</li>\n<li><strong>sorted_list</strong> (string):\nif this argument is set, a list of vectors (len=self.T) is returned. If it is left as None, only one vector is returned.\n\"Eigenvalue\"  -  The eigenvector is chosen according to which eigenvalue it belongs individually on every timeslice.\n\"Eigenvector\" -  Use the method described in arXiv:2004.10472 [hep-lat] to find the set of v(t) belonging to the state.\n                 The reference state is identified by its eigenvalue at t=ts</li>\n</ul>\n", "signature": "(self, t0, ts=None, state=0, sorted_list=None)", "funcdef": "def"}, "pyerrors.correlators.Corr.Hankel": {"fullname": "pyerrors.correlators.Corr.Hankel", "modulename": "pyerrors.correlators", "qualname": "Corr.Hankel", "type": "function", "doc": "<p>Constructs an NxN Hankel matrix</p>\n\n<p>C(t) c(t+1) ... c(t+n-1)\nC(t+1) c(t+2) ... c(t+n)\n.................\nC(t+(n-1)) c(t+n) ... c(t+2(n-1))</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>N</strong> (int):\nDimension of the Hankel matrix</li>\n<li><strong>periodic</strong> (bool, optional):\ndetermines whether the matrix is extended periodically</li>\n</ul>\n", "signature": "(self, N, periodic=False)", "funcdef": "def"}, "pyerrors.correlators.Corr.roll": {"fullname": "pyerrors.correlators.Corr.roll", "modulename": "pyerrors.correlators", "qualname": "Corr.roll", "type": "function", "doc": "<p>Periodically shift the correlator by dt timeslices</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dt</strong> (int):\nnumber of timeslices</li>\n</ul>\n", "signature": "(self, dt)", "funcdef": "def"}, "pyerrors.correlators.Corr.reverse": {"fullname": "pyerrors.correlators.Corr.reverse", "modulename": "pyerrors.correlators", "qualname": "Corr.reverse", "type": "function", "doc": "<p>Reverse the time ordering of the Corr</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.thin": {"fullname": "pyerrors.correlators.Corr.thin", "modulename": "pyerrors.correlators", "qualname": "Corr.thin", "type": "function", "doc": "<p>Thin out a correlator to suppress correlations</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>spacing</strong> (int):\nKeep only every 'spacing'th entry of the correlator</li>\n<li><strong>offset</strong> (int):\nOffset the equal spacing</li>\n</ul>\n", "signature": "(self, spacing=2, offset=0)", "funcdef": "def"}, "pyerrors.correlators.Corr.correlate": {"fullname": "pyerrors.correlators.Corr.correlate", "modulename": "pyerrors.correlators", "qualname": "Corr.correlate", "type": "function", "doc": "<p>Correlate the correlator with another correlator or Obs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>partner</strong> (Obs or Corr):\npartner to correlate the correlator with.\nCan either be an Obs which is correlated with all entries of the\ncorrelator or a Corr of same length.</li>\n</ul>\n", "signature": "(self, partner)", "funcdef": "def"}, "pyerrors.correlators.Corr.reweight": {"fullname": "pyerrors.correlators.Corr.reweight", "modulename": "pyerrors.correlators", "qualname": "Corr.reweight", "type": "function", "doc": "<p>Reweight the correlator.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>weight</strong> (Obs):\nReweighting factor. An Observable that has to be defined on a superset of the\nconfigurations in obs[i].idl for all i.</li>\n<li><strong>all_configs</strong> (bool):\nif True, the reweighted observables are normalized by the average of\nthe reweighting factor on all configurations in weight.idl and not\non the configurations in obs[i].idl.</li>\n</ul>\n", "signature": "(self, weight, **kwargs)", "funcdef": "def"}, "pyerrors.correlators.Corr.T_symmetry": {"fullname": "pyerrors.correlators.Corr.T_symmetry", "modulename": "pyerrors.correlators", "qualname": "Corr.T_symmetry", "type": "function", "doc": "<p>Return the time symmetry average of the correlator and its partner</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>partner</strong> (Corr):\nTime symmetry partner of the Corr</li>\n<li><strong>partity</strong> (int):\nParity quantum number of the correlator, can be +1 or -1</li>\n</ul>\n", "signature": "(self, partner, parity=1)", "funcdef": "def"}, "pyerrors.correlators.Corr.deriv": {"fullname": "pyerrors.correlators.Corr.deriv", "modulename": "pyerrors.correlators", "qualname": "Corr.deriv", "type": "function", "doc": "<p>Return the first derivative of the correlator with respect to x0.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>variant</strong> (str):\ndecides which definition of the finite differences derivative is used.\nAvailable choice: symmetric, forward, backward, improved, default: symmetric</li>\n</ul>\n", "signature": "(self, variant='symmetric')", "funcdef": "def"}, "pyerrors.correlators.Corr.second_deriv": {"fullname": "pyerrors.correlators.Corr.second_deriv", "modulename": "pyerrors.correlators", "qualname": "Corr.second_deriv", "type": "function", "doc": "<p>Return the second derivative of the correlator with respect to x0.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>variant</strong> (str):\ndecides which definition of the finite differences derivative is used.\nAvailable choice: symmetric, improved, default: symmetric</li>\n</ul>\n", "signature": "(self, variant='symmetric')", "funcdef": "def"}, "pyerrors.correlators.Corr.m_eff": {"fullname": "pyerrors.correlators.Corr.m_eff", "modulename": "pyerrors.correlators", "qualname": "Corr.m_eff", "type": "function", "doc": "<p>Returns the effective mass of the correlator as correlator object</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>variant</strong> (str):\nlog : uses the standard effective mass log(C(t) / C(t+1))\ncosh, periodic : Use periodicitiy of the correlator by solving C(t) / C(t+1) = cosh(m * (t - T/2)) / cosh(m * (t + 1 - T/2)) for m.\nsinh : Use anti-periodicitiy of the correlator by solving C(t) / C(t+1) = sinh(m * (t - T/2)) / sinh(m * (t + 1 - T/2)) for m.\nSee, e.g., arXiv:1205.5380\narccosh : Uses the explicit form of the symmetrized correlator (not recommended)</li>\n<li><strong>guess</strong> (float):\nguess for the root finder, only relevant for the root variant</li>\n</ul>\n", "signature": "(self, variant='log', guess=1.0)", "funcdef": "def"}, "pyerrors.correlators.Corr.fit": {"fullname": "pyerrors.correlators.Corr.fit", "modulename": "pyerrors.correlators", "qualname": "Corr.fit", "type": "function", "doc": "<p>Fits function to the data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>function</strong> (obj):\nfunction to fit to the data. See fits.least_squares for details.</li>\n<li><strong>fitrange</strong> (list):\nTwo element list containing the timeslices on which the fit is supposed to start and stop.\nCaution: This range is inclusive as opposed to standard python indexing.\n<code>fitrange=[4, 6]</code> corresponds to the three entries 4, 5 and 6.\nIf not specified, self.prange or all timeslices are used.</li>\n<li><strong>silent</strong> (bool):\nDecides whether output is printed to the standard output.</li>\n</ul>\n", "signature": "(self, function, fitrange=None, silent=False, **kwargs)", "funcdef": "def"}, "pyerrors.correlators.Corr.plateau": {"fullname": "pyerrors.correlators.Corr.plateau", "modulename": "pyerrors.correlators", "qualname": "Corr.plateau", "type": "function", "doc": "<p>Extract a plateau value from a Corr object</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>plateau_range</strong> (list):\nlist with two entries, indicating the first and the last timeslice\nof the plateau region.</li>\n<li><strong>method</strong> (str):\nmethod to extract the plateau.\n   'fit' fits a constant to the plateau region\n   'avg', 'average' or 'mean' just average over the given timeslices.</li>\n<li><strong>auto_gamma</strong> (bool):\napply gamma_method with default parameters to the Corr. Defaults to None</li>\n</ul>\n", "signature": "(self, plateau_range=None, method='fit', auto_gamma=False)", "funcdef": "def"}, "pyerrors.correlators.Corr.set_prange": {"fullname": "pyerrors.correlators.Corr.set_prange", "modulename": "pyerrors.correlators", "qualname": "Corr.set_prange", "type": "function", "doc": "<p>Sets the attribute prange of the Corr object.</p>\n", "signature": "(self, prange)", "funcdef": "def"}, "pyerrors.correlators.Corr.show": {"fullname": "pyerrors.correlators.Corr.show", "modulename": "pyerrors.correlators", "qualname": "Corr.show", "type": "function", "doc": "<p>Plots the correlator using the tag of the correlator as label if available.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x_range</strong> (list):\nlist of two values, determining the range of the x-axis e.g. [4, 8]</li>\n<li><strong>comp</strong> (Corr or list of Corr):\nCorrelator or list of correlators which are plotted for comparison.\nThe tags of these correlators are used as labels if available.</li>\n<li><strong>logscale</strong> (bool):\nSets y-axis to logscale</li>\n<li><strong>plateau</strong> (Obs):\nPlateau value to be visualized in the figure</li>\n<li><strong>fit_res</strong> (Fit_result):\nFit_result object to be visualized</li>\n<li><strong>ylabel</strong> (str):\nLabel for the y-axis</li>\n<li><strong>save</strong> (str):\npath to file in which the figure should be saved</li>\n<li><strong>auto_gamma</strong> (bool):\nApply the gamma method with standard parameters to all correlators and plateau values before plotting.</li>\n<li><strong>hide_sigma</strong> (float):\nHides data points from the first value on which is consistent with zero within 'hide_sigma' standard errors.</li>\n<li><strong>references</strong> (list):\nList of floating point values that are displayed as horizontal lines for reference.</li>\n</ul>\n", "signature": "(\n    self,\n    x_range=None,\n    comp=None,\n    y_range=None,\n    logscale=False,\n    plateau=None,\n    fit_res=None,\n    ylabel=None,\n    save=None,\n    auto_gamma=False,\n    hide_sigma=None,\n    references=None\n)", "funcdef": "def"}, "pyerrors.correlators.Corr.spaghetti_plot": {"fullname": "pyerrors.correlators.Corr.spaghetti_plot", "modulename": "pyerrors.correlators", "qualname": "Corr.spaghetti_plot", "type": "function", "doc": "<p>Produces a spaghetti plot of the correlator suited to monitor exceptional configurations.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>logscale</strong> (bool):\nDetermines whether the scale of the y-axis is logarithmic or standard.</li>\n</ul>\n", "signature": "(self, logscale=True)", "funcdef": "def"}, "pyerrors.correlators.Corr.dump": {"fullname": "pyerrors.correlators.Corr.dump", "modulename": "pyerrors.correlators", "qualname": "Corr.dump", "type": "function", "doc": "<p>Dumps the Corr into a file of chosen type</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nName of the file to be saved.</li>\n<li><strong>datatype</strong> (str):\nFormat of the exported file. Supported formats include\n\"json.gz\" and \"pickle\"</li>\n<li><strong>path</strong> (str):\nspecifies a custom path for the file (default '.')</li>\n</ul>\n", "signature": "(self, filename, datatype='json.gz', **kwargs)", "funcdef": "def"}, "pyerrors.correlators.Corr.print": {"fullname": "pyerrors.correlators.Corr.print", "modulename": "pyerrors.correlators", "qualname": "Corr.print", "type": "function", "doc": "<p></p>\n", "signature": "(self, range=[0, None])", "funcdef": "def"}, "pyerrors.correlators.Corr.sqrt": {"fullname": "pyerrors.correlators.Corr.sqrt", "modulename": "pyerrors.correlators", "qualname": "Corr.sqrt", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.log": {"fullname": "pyerrors.correlators.Corr.log", "modulename": "pyerrors.correlators", "qualname": "Corr.log", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.exp": {"fullname": "pyerrors.correlators.Corr.exp", "modulename": "pyerrors.correlators", "qualname": "Corr.exp", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.sin": {"fullname": "pyerrors.correlators.Corr.sin", "modulename": "pyerrors.correlators", "qualname": "Corr.sin", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.cos": {"fullname": "pyerrors.correlators.Corr.cos", "modulename": "pyerrors.correlators", "qualname": "Corr.cos", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.tan": {"fullname": "pyerrors.correlators.Corr.tan", "modulename": "pyerrors.correlators", "qualname": "Corr.tan", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.sinh": {"fullname": "pyerrors.correlators.Corr.sinh", "modulename": "pyerrors.correlators", "qualname": "Corr.sinh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.cosh": {"fullname": "pyerrors.correlators.Corr.cosh", "modulename": "pyerrors.correlators", "qualname": "Corr.cosh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.tanh": {"fullname": "pyerrors.correlators.Corr.tanh", "modulename": "pyerrors.correlators", "qualname": "Corr.tanh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arcsin": {"fullname": "pyerrors.correlators.Corr.arcsin", "modulename": "pyerrors.correlators", "qualname": "Corr.arcsin", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arccos": {"fullname": "pyerrors.correlators.Corr.arccos", "modulename": "pyerrors.correlators", "qualname": "Corr.arccos", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arctan": {"fullname": "pyerrors.correlators.Corr.arctan", "modulename": "pyerrors.correlators", "qualname": "Corr.arctan", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arcsinh": {"fullname": "pyerrors.correlators.Corr.arcsinh", "modulename": "pyerrors.correlators", "qualname": "Corr.arcsinh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arccosh": {"fullname": "pyerrors.correlators.Corr.arccosh", "modulename": "pyerrors.correlators", "qualname": "Corr.arccosh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.arctanh": {"fullname": "pyerrors.correlators.Corr.arctanh", "modulename": "pyerrors.correlators", "qualname": "Corr.arctanh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.correlators.Corr.real": {"fullname": "pyerrors.correlators.Corr.real", "modulename": "pyerrors.correlators", "qualname": "Corr.real", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.correlators.Corr.imag": {"fullname": "pyerrors.correlators.Corr.imag", "modulename": "pyerrors.correlators", "qualname": "Corr.imag", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.correlators.Corr.prune": {"fullname": "pyerrors.correlators.Corr.prune", "modulename": "pyerrors.correlators", "qualname": "Corr.prune", "type": "function", "doc": "<p>Project large correlation matrix to lowest states</p>\n\n<p>This method can be used to reduce the size of an (N x N) correlation matrix\nto (Ntrunc x Ntrunc) by solving a GEVP at very early times where the noise\nis still small.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Ntrunc</strong> (int):\nRank of the target matrix.</li>\n<li><strong>tproj</strong> (int):\nTime where the eigenvectors are evaluated, corresponds to ts in the GEVP method.\nThe default value is 3.</li>\n<li><strong>t0proj</strong> (int):\nTime where the correlation matrix is inverted. Choosing t0proj=1 is strongly\ndiscouraged for O(a) improved theories, since the correctness of the procedure\ncannot be granted in this case. The default value is 2.</li>\n<li><strong>basematrix</strong> (Corr):\nCorrelation matrix that is used to determine the eigenvectors of the\nlowest states based on a GEVP. basematrix is taken to be the Corr itself if\nis is not specified.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>We have the basematrix $C(t)$ and the target matrix $G(t)$. We start by solving\nthe GEVP $$C(t) v_n(t, t_0) = \\lambda_n(t, t_0) C(t_0) v_n(t, t_0)$$ where $t \\equiv t_\\mathrm{proj}$\nand $t_0 \\equiv t_{0, \\mathrm{proj}}$. The target matrix is projected onto the subspace of the\nresulting eigenvectors $v_n, n=1,\\dots,N_\\mathrm{trunc}$ via\n$$G^\\prime_{i, j}(t) = (v_i, G(t) v_j)$$. This allows to reduce the size of a large\ncorrelation matrix and to remove some noise that is added by irrelevant operators.\nThis may allow to use the GEVP on $G(t)$ at late times such that the theoretically motivated\nbound $t_0 \\leq t/2$ holds, since the condition number of $G(t)$ is decreased, compared to $C(t)$.</p>\n", "signature": "(self, Ntrunc, tproj=3, t0proj=2, basematrix=None)", "funcdef": "def"}, "pyerrors.covobs": {"fullname": "pyerrors.covobs", "modulename": "pyerrors.covobs", "type": "module", "doc": "<p></p>\n"}, "pyerrors.covobs.Covobs": {"fullname": "pyerrors.covobs.Covobs", "modulename": "pyerrors.covobs", "qualname": "Covobs", "type": "class", "doc": "<p></p>\n"}, "pyerrors.covobs.Covobs.__init__": {"fullname": "pyerrors.covobs.Covobs.__init__", "modulename": "pyerrors.covobs", "qualname": "Covobs.__init__", "type": "function", "doc": "<p>Initialize Covobs object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mean</strong> (float):\nMean value of the new Obs</li>\n<li><strong>cov</strong> (list or array):\n2d Covariance matrix or 1d diagonal entries</li>\n<li><strong>name</strong> (str):\nidentifier for the covariance matrix</li>\n<li><strong>pos</strong> (int):\nPosition of the variance belonging to mean in cov.\nIs taken to be 1 if cov is 0-dimensional</li>\n<li><strong>grad</strong> (list or array):\nGradient of the Covobs wrt. the means belonging to cov.</li>\n</ul>\n", "signature": "(self, mean, cov, name, pos=None, grad=None)", "funcdef": "def"}, "pyerrors.covobs.Covobs.errsq": {"fullname": "pyerrors.covobs.Covobs.errsq", "modulename": "pyerrors.covobs", "qualname": "Covobs.errsq", "type": "function", "doc": "<p>Return the variance (= square of the error) of the Covobs</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.covobs.Covobs.cov": {"fullname": "pyerrors.covobs.Covobs.cov", "modulename": "pyerrors.covobs", "qualname": "Covobs.cov", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.covobs.Covobs.grad": {"fullname": "pyerrors.covobs.Covobs.grad", "modulename": "pyerrors.covobs", "qualname": "Covobs.grad", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.dirac": {"fullname": "pyerrors.dirac", "modulename": "pyerrors.dirac", "type": "module", "doc": "<p></p>\n"}, "pyerrors.dirac.epsilon_tensor": {"fullname": "pyerrors.dirac.epsilon_tensor", "modulename": "pyerrors.dirac", "qualname": "epsilon_tensor", "type": "function", "doc": "<p>Rank-3 epsilon tensor</p>\n\n<p>Based on https://codegolf.stackexchange.com/a/160375</p>\n", "signature": "(i, j, k)", "funcdef": "def"}, "pyerrors.dirac.epsilon_tensor_rank4": {"fullname": "pyerrors.dirac.epsilon_tensor_rank4", "modulename": "pyerrors.dirac", "qualname": "epsilon_tensor_rank4", "type": "function", "doc": "<p>Rank-4 epsilon tensor</p>\n\n<p>Extension of https://codegolf.stackexchange.com/a/160375</p>\n", "signature": "(i, j, k, o)", "funcdef": "def"}, "pyerrors.dirac.Grid_gamma": {"fullname": "pyerrors.dirac.Grid_gamma", "modulename": "pyerrors.dirac", "qualname": "Grid_gamma", "type": "function", "doc": "<p>Returns gamma matrix in Grid labeling.</p>\n", "signature": "(gamma_tag)", "funcdef": "def"}, "pyerrors.fits": {"fullname": "pyerrors.fits", "modulename": "pyerrors.fits", "type": "module", "doc": "<p></p>\n"}, "pyerrors.fits.Fit_result": {"fullname": "pyerrors.fits.Fit_result", "modulename": "pyerrors.fits", "qualname": "Fit_result", "type": "class", "doc": "<p>Represents fit results.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>fit_parameters</strong> (list):\nresults for the individual fit parameters,\nalso accessible via indices.</li>\n</ul>\n", "bases": "collections.abc.Sequence"}, "pyerrors.fits.Fit_result.__init__": {"fullname": "pyerrors.fits.Fit_result.__init__", "modulename": "pyerrors.fits", "qualname": "Fit_result.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.fits.Fit_result.gamma_method": {"fullname": "pyerrors.fits.Fit_result.gamma_method", "modulename": "pyerrors.fits", "qualname": "Fit_result.gamma_method", "type": "function", "doc": "<p>Apply the gamma method to all fit parameters</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.fits.least_squares": {"fullname": "pyerrors.fits.least_squares", "modulename": "pyerrors.fits", "qualname": "least_squares", "type": "function", "doc": "<p>Performs a non-linear fit to y = func(x).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (list):\nlist of floats.</li>\n<li><strong>y</strong> (list):\nlist of Obs.</li>\n<li><p><strong>func</strong> (object):\nfit function, has to be of the form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">autograd.numpy</span> <span class=\"k\">as</span> <span class=\"nn\">anp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">anp</span><span class=\"o\">.</span><span class=\"n\">sinh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>For multiple x values func can be of the form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n   <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x1</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x2</span>\n</code></pre></div>\n\n<p>It is important that all numpy functions refer to autograd.numpy, otherwise the differentiation\nwill not work.</p></li>\n<li><strong>priors</strong> (list, optional):\npriors has to be a list with an entry for every parameter in the fit. The entries can either be\nObs (e.g. results from a previous fit) or strings containing a value and an error formatted like\n0.548(23), 500(40) or 0.5(0.4)</li>\n<li><strong>silent</strong> (bool, optional):\nIf true all output to the console is omitted (default False).</li>\n<li><strong>initial_guess</strong> (list):\ncan provide an initial guess for the input parameters. Relevant for\nnon-linear fits with many parameters.</li>\n<li><strong>method</strong> (str, optional):\ncan be used to choose an alternative method for the minimization of chisquare.\nThe possible methods are the ones which can be used for scipy.optimize.minimize and\nmigrad of iminuit. If no method is specified, Levenberg-Marquard is used.\nReliable alternatives are migrad, Powell and Nelder-Mead.</li>\n<li><strong>correlated_fit</strong> (bool):\nIf True, use the full inverse covariance matrix in the definition of the chisquare cost function.\nFor details about how the covariance matrix is estimated see <code>pyerrors.obs.covariance</code>.\nIn practice the correlation matrix is Cholesky decomposed and inverted (instead of the covariance matrix).\nThis procedure should be numerically more stable as the correlation matrix is typically better conditioned (Jacobi preconditioning).\nAt the moment this option only works for <code>prior==None</code> and when no <code>method</code> is given.</li>\n<li><strong>expected_chisquare</strong> (bool):\nIf True estimates the expected chisquare which is\ncorrected by effects caused by correlated input data (default False).</li>\n<li><strong>resplot</strong> (bool):\nIf True, a plot which displays fit, data and residuals is generated (default False).</li>\n<li><strong>qqplot</strong> (bool):\nIf True, a quantile-quantile plot of the fit result is generated (default False).</li>\n</ul>\n", "signature": "(x, y, func, priors=None, silent=False, **kwargs)", "funcdef": "def"}, "pyerrors.fits.total_least_squares": {"fullname": "pyerrors.fits.total_least_squares", "modulename": "pyerrors.fits", "qualname": "total_least_squares", "type": "function", "doc": "<p>Performs a non-linear fit to y = func(x) and returns a list of Obs corresponding to the fit parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (list):\nlist of Obs, or a tuple of lists of Obs</li>\n<li><strong>y</strong> (list):\nlist of Obs. The dvalues of the Obs are used as x- and yerror for the fit.</li>\n<li><p><strong>func</strong> (object):\nfunc has to be of the form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">autograd.numpy</span> <span class=\"k\">as</span> <span class=\"nn\">anp</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">anp</span><span class=\"o\">.</span><span class=\"n\">sinh</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n\n<p>For multiple x values func can be of the form</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n   <span class=\"p\">(</span><span class=\"n\">x1</span><span class=\"p\">,</span> <span class=\"n\">x2</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"n\">x</span>\n   <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x1</span> <span class=\"o\">**</span> <span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">x2</span>\n</code></pre></div>\n\n<p>It is important that all numpy functions refer to autograd.numpy, otherwise the differentiation\nwill not work.</p></li>\n<li><strong>silent</strong> (bool, optional):\nIf true all output to the console is omitted (default False).</li>\n<li><strong>initial_guess</strong> (list):\ncan provide an initial guess for the input parameters. Relevant for non-linear\nfits with many parameters.</li>\n<li><strong>expected_chisquare</strong> (bool):\nIf true prints the expected chisquare which is\ncorrected by effects caused by correlated input data.\nThis can take a while as the full correlation matrix\nhas to be calculated (default False).</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Based on the orthogonal distance regression module of scipy</p>\n", "signature": "(x, y, func, silent=False, **kwargs)", "funcdef": "def"}, "pyerrors.fits.fit_lin": {"fullname": "pyerrors.fits.fit_lin", "modulename": "pyerrors.fits", "qualname": "fit_lin", "type": "function", "doc": "<p>Performs a linear fit to y = n + m * x and returns two Obs n, m.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (list):\nCan either be a list of floats in which case no xerror is assumed, or\na list of Obs, where the dvalues of the Obs are used as xerror for the fit.</li>\n<li><strong>y</strong> (list):\nList of Obs, the dvalues of the Obs are used as yerror for the fit.</li>\n</ul>\n", "signature": "(x, y, **kwargs)", "funcdef": "def"}, "pyerrors.fits.qqplot": {"fullname": "pyerrors.fits.qqplot", "modulename": "pyerrors.fits", "qualname": "qqplot", "type": "function", "doc": "<p>Generates a quantile-quantile plot of the fit result which can be used to\ncheck if the residuals of the fit are gaussian distributed.</p>\n", "signature": "(x, o_y, func, p)", "funcdef": "def"}, "pyerrors.fits.residual_plot": {"fullname": "pyerrors.fits.residual_plot", "modulename": "pyerrors.fits", "qualname": "residual_plot", "type": "function", "doc": "<p>Generates a plot which compares the fit to the data and displays the corresponding residuals</p>\n", "signature": "(x, y, func, fit_res)", "funcdef": "def"}, "pyerrors.fits.error_band": {"fullname": "pyerrors.fits.error_band", "modulename": "pyerrors.fits", "qualname": "error_band", "type": "function", "doc": "<p>Returns the error band for an array of sample values x, for given fit function func with optimized parameters beta.</p>\n", "signature": "(x, func, beta)", "funcdef": "def"}, "pyerrors.fits.ks_test": {"fullname": "pyerrors.fits.ks_test", "modulename": "pyerrors.fits", "qualname": "ks_test", "type": "function", "doc": "<p>Performs a Kolmogorov\u2013Smirnov test for the p-values of all fit object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>objects</strong> (list):\nList of fit results to include in the analysis (optional).</li>\n</ul>\n", "signature": "(objects=None)", "funcdef": "def"}, "pyerrors.input": {"fullname": "pyerrors.input", "modulename": "pyerrors.input", "type": "module", "doc": "<p><code>pyerrors</code> includes an <code>input</code> submodule in which input routines and parsers for the output of various numerical programs are contained.</p>\n\n<h1 id=\"jackknife-samples\">Jackknife samples</h1>\n\n<p>For comparison with other analysis workflows <code>pyerrors</code> can also generate jackknife samples from an <code>Obs</code> object or import jackknife samples into an <code>Obs</code> object.\nSee <code>pyerrors.obs.Obs.export_jackknife</code> and <code>pyerrors.obs.import_jackknife</code> for details.</p>\n"}, "pyerrors.input.bdio": {"fullname": "pyerrors.input.bdio", "modulename": "pyerrors.input.bdio", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.bdio.read_ADerrors": {"fullname": "pyerrors.input.bdio.read_ADerrors", "modulename": "pyerrors.input.bdio", "qualname": "read_ADerrors", "type": "function", "doc": "<p>Extract generic MCMC data from a bdio file</p>\n\n<p>read_ADerrors requires bdio to be compiled into a shared library. This can be achieved by\nadding the flag -fPIC to CC and changing the all target to</p>\n\n<p>all:                bdio.o $(LIBDIR)\n            gcc -shared -Wl,-soname,libbdio.so -o $(BUILDDIR)/libbdio.so $(BUILDDIR)/bdio.o\n            cp $(BUILDDIR)/libbdio.so $(LIBDIR)/</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path -- path to the bdio file</strong></li>\n<li><strong>bdio_path -- path to the shared bdio library libbdio.so (default ./libbdio.so)</strong></li>\n</ul>\n", "signature": "(file_path, bdio_path='./libbdio.so', **kwargs)", "funcdef": "def"}, "pyerrors.input.bdio.write_ADerrors": {"fullname": "pyerrors.input.bdio.write_ADerrors", "modulename": "pyerrors.input.bdio", "qualname": "write_ADerrors", "type": "function", "doc": "<p>Write Obs to a bdio file according to ADerrors conventions</p>\n\n<p>read_mesons requires bdio to be compiled into a shared library. This can be achieved by\nadding the flag -fPIC to CC and changing the all target to</p>\n\n<p>all:                bdio.o $(LIBDIR)\n            gcc -shared -Wl,-soname,libbdio.so -o $(BUILDDIR)/libbdio.so $(BUILDDIR)/bdio.o\n            cp $(BUILDDIR)/libbdio.so $(LIBDIR)/</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path -- path to the bdio file</strong></li>\n<li><strong>bdio_path -- path to the shared bdio library libbdio.so (default ./libbdio.so)</strong></li>\n</ul>\n", "signature": "(obs_list, file_path, bdio_path='./libbdio.so', **kwargs)", "funcdef": "def"}, "pyerrors.input.bdio.read_mesons": {"fullname": "pyerrors.input.bdio.read_mesons", "modulename": "pyerrors.input.bdio", "qualname": "read_mesons", "type": "function", "doc": "<p>Extract mesons data from a bdio file and return it as a dictionary</p>\n\n<p>The dictionary can be accessed with a tuple consisting of (type, source_position, kappa1, kappa2)</p>\n\n<p>read_mesons requires bdio to be compiled into a shared library. This can be achieved by\nadding the flag -fPIC to CC and changing the all target to</p>\n\n<p>all:                bdio.o $(LIBDIR)\n            gcc -shared -Wl,-soname,libbdio.so -o $(BUILDDIR)/libbdio.so $(BUILDDIR)/bdio.o\n            cp $(BUILDDIR)/libbdio.so $(LIBDIR)/</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\npath to the bdio file</li>\n<li><strong>bdio_path</strong> (str):\npath to the shared bdio library libbdio.so (default ./libbdio.so)</li>\n<li><strong>start</strong> (int):\nThe first configuration to be read (default 1)</li>\n<li><strong>stop</strong> (int):\nThe last configuration to be read (default None)</li>\n<li><strong>step</strong> (int):\nFixed step size between two measurements (default 1)</li>\n<li><strong>alternative_ensemble_name</strong> (str):\nManually overwrite ensemble name</li>\n</ul>\n", "signature": "(file_path, bdio_path='./libbdio.so', **kwargs)", "funcdef": "def"}, "pyerrors.input.bdio.read_dSdm": {"fullname": "pyerrors.input.bdio.read_dSdm", "modulename": "pyerrors.input.bdio", "qualname": "read_dSdm", "type": "function", "doc": "<p>Extract dSdm data from a bdio file and return it as a dictionary</p>\n\n<p>The dictionary can be accessed with a tuple consisting of (type, kappa)</p>\n\n<p>read_dSdm requires bdio to be compiled into a shared library. This can be achieved by\nadding the flag -fPIC to CC and changing the all target to</p>\n\n<p>all:                bdio.o $(LIBDIR)\n            gcc -shared -Wl,-soname,libbdio.so -o $(BUILDDIR)/libbdio.so $(BUILDDIR)/bdio.o\n            cp $(BUILDDIR)/libbdio.so $(LIBDIR)/</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\npath to the bdio file</li>\n<li><strong>bdio_path</strong> (str):\npath to the shared bdio library libbdio.so (default ./libbdio.so)</li>\n<li><strong>start</strong> (int):\nThe first configuration to be read (default 1)</li>\n<li><strong>stop</strong> (int):\nThe last configuration to be read (default None)</li>\n<li><strong>step</strong> (int):\nFixed step size between two measurements (default 1)</li>\n<li><strong>alternative_ensemble_name</strong> (str):\nManually overwrite ensemble name</li>\n</ul>\n", "signature": "(file_path, bdio_path='./libbdio.so', **kwargs)", "funcdef": "def"}, "pyerrors.input.dobs": {"fullname": "pyerrors.input.dobs", "modulename": "pyerrors.input.dobs", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.dobs.create_pobs_string": {"fullname": "pyerrors.input.dobs.create_pobs_string", "modulename": "pyerrors.input.dobs", "qualname": "create_pobs_string", "type": "function", "doc": "<p>Export a list of Obs or structures containing Obs to an xml string\naccording to the Zeuthen pobs format.</p>\n\n<p>Tags are not written or recovered automatically. The separator | is removed from the replica names.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obsl</strong> (list):\nList of Obs that will be exported.\nThe Obs inside a structure have to be defined on the same ensemble.</li>\n<li><strong>name</strong> (str):\nThe name of the observable.</li>\n<li><strong>spec</strong> (str):\nOptional string that describes the contents of the file.</li>\n<li><strong>origin</strong> (str):\nSpecify where the data has its origin.</li>\n<li><strong>symbol</strong> (list):\nA list of symbols that describe the observables to be written. May be empty.</li>\n<li><strong>enstag</strong> (str):\nEnstag that is written to pobs. If None, the ensemble name is used.</li>\n</ul>\n", "signature": "(obsl, name, spec='', origin='', symbol=[], enstag=None)", "funcdef": "def"}, "pyerrors.input.dobs.write_pobs": {"fullname": "pyerrors.input.dobs.write_pobs", "modulename": "pyerrors.input.dobs", "qualname": "write_pobs", "type": "function", "doc": "<p>Export a list of Obs or structures containing Obs to a .xml.gz file\naccording to the Zeuthen pobs format.</p>\n\n<p>Tags are not written or recovered automatically. The separator | is removed from the replica names.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obsl</strong> (list):\nList of Obs that will be exported.\nThe Obs inside a structure have to be defined on the same ensemble.</li>\n<li><strong>fname</strong> (str):\nFilename of the output file.</li>\n<li><strong>name</strong> (str):\nThe name of the observable.</li>\n<li><strong>spec</strong> (str):\nOptional string that describes the contents of the file.</li>\n<li><strong>origin</strong> (str):\nSpecify where the data has its origin.</li>\n<li><strong>symbol</strong> (list):\nA list of symbols that describe the observables to be written. May be empty.</li>\n<li><strong>enstag</strong> (str):\nEnstag that is written to pobs. If None, the ensemble name is used.</li>\n<li><strong>gz</strong> (bool):\nIf True, the output is a gzipped xml. If False, the output is an xml file.</li>\n</ul>\n", "signature": "(\n    obsl,\n    fname,\n    name,\n    spec='',\n    origin='',\n    symbol=[],\n    enstag=None,\n    gz=True\n)", "funcdef": "def"}, "pyerrors.input.dobs.read_pobs": {"fullname": "pyerrors.input.dobs.read_pobs", "modulename": "pyerrors.input.dobs", "qualname": "read_pobs", "type": "function", "doc": "<p>Import a list of Obs from an xml.gz file in the Zeuthen pobs format.</p>\n\n<p>Tags are not written or recovered automatically.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fname</strong> (str):\nFilename of the input file.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned as list.</li>\n<li><strong>separatior_insertion</strong> (str or int):\nstr: replace all occurences of \"separator_insertion\" within the replica names\nby \"|%s\" % (separator_insertion) when constructing the names of the replica.\nint: Insert the separator \"|\" at the position given by separator_insertion.\nNone (default): Replica names remain unchanged.</li>\n</ul>\n", "signature": "(fname, full_output=False, gz=True, separator_insertion=None)", "funcdef": "def"}, "pyerrors.input.dobs.import_dobs_string": {"fullname": "pyerrors.input.dobs.import_dobs_string", "modulename": "pyerrors.input.dobs", "qualname": "import_dobs_string", "type": "function", "doc": "<p>Import a list of Obs from a string in the Zeuthen dobs format.</p>\n\n<p>Tags are not written or recovered automatically.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>content</strong> (str):\nXML string containing the data</li>\n<li><strong>noemtpy</strong> (bool):\nIf True, ensembles with no contribution to the Obs are not included.\nIf False, ensembles are included as written in the file, possibly with vanishing entries.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned as list.</li>\n<li><strong>separatior_insertion</strong> (str, int or bool):\nstr: replace all occurences of \"separator_insertion\" within the replica names\nby \"|%s\" % (separator_insertion) when constructing the names of the replica.\nint: Insert the separator \"|\" at the position given by separator_insertion.\nTrue (default): separator \"|\" is inserted after len(ensname), assuming that the\nensemble name is a prefix to the replica name.\nNone or False: No separator is inserted.</li>\n</ul>\n", "signature": "(content, noempty=False, full_output=False, separator_insertion=True)", "funcdef": "def"}, "pyerrors.input.dobs.read_dobs": {"fullname": "pyerrors.input.dobs.read_dobs", "modulename": "pyerrors.input.dobs", "qualname": "read_dobs", "type": "function", "doc": "<p>Import a list of Obs from an xml.gz file in the Zeuthen dobs format.</p>\n\n<p>Tags are not written or recovered automatically.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fname</strong> (str):\nFilename of the input file.</li>\n<li><strong>noemtpy</strong> (bool):\nIf True, ensembles with no contribution to the Obs are not included.\nIf False, ensembles are included as written in the file.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned as list.</li>\n<li><strong>gz</strong> (bool):\nIf True, assumes that data is gzipped. If False, assumes XML file.</li>\n<li><strong>separatior_insertion</strong> (str, int or bool):\nstr: replace all occurences of \"separator_insertion\" within the replica names\nby \"|%s\" % (separator_insertion) when constructing the names of the replica.\nint: Insert the separator \"|\" at the position given by separator_insertion.\nTrue (default): separator \"|\" is inserted after len(ensname), assuming that the\nensemble name is a prefix to the replica name.\nNone or False: No separator is inserted.</li>\n</ul>\n", "signature": "(\n    fname,\n    noempty=False,\n    full_output=False,\n    gz=True,\n    separator_insertion=True\n)", "funcdef": "def"}, "pyerrors.input.dobs.create_dobs_string": {"fullname": "pyerrors.input.dobs.create_dobs_string", "modulename": "pyerrors.input.dobs", "qualname": "create_dobs_string", "type": "function", "doc": "<p>Generate the string for the export of a list of Obs or structures containing Obs\nto a .xml.gz file according to the Zeuthen dobs format.</p>\n\n<p>Tags are not written or recovered automatically. The separator |is removed from the replica names.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obsl</strong> (list):\nList of Obs that will be exported.\nThe Obs inside a structure do not have to be defined on the same set of configurations,\nbut the storage requirement is increased, if this is not the case.</li>\n<li><strong>name</strong> (str):\nThe name of the observable.</li>\n<li><strong>spec</strong> (str):\nOptional string that describes the contents of the file.</li>\n<li><strong>origin</strong> (str):\nSpecify where the data has its origin.</li>\n<li><strong>symbol</strong> (list):\nA list of symbols that describe the observables to be written. May be empty.</li>\n<li><strong>who</strong> (str):\nProvide the name of the person that exports the data.</li>\n<li><strong>enstags</strong> (dict):\nProvide alternative enstag for ensembles in the form enstags = {ename: enstag}\nOtherwise, the ensemble name is used.</li>\n</ul>\n", "signature": "(\n    obsl,\n    name,\n    spec='dobs v1.0',\n    origin='',\n    symbol=[],\n    who=None,\n    enstags={}\n)", "funcdef": "def"}, "pyerrors.input.dobs.write_dobs": {"fullname": "pyerrors.input.dobs.write_dobs", "modulename": "pyerrors.input.dobs", "qualname": "write_dobs", "type": "function", "doc": "<p>Export a list of Obs or structures containing Obs to a .xml.gz file\naccording to the Zeuthen dobs format.</p>\n\n<p>Tags are not written or recovered automatically. The separator | is removed from the replica names.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obsl</strong> (list):\nList of Obs that will be exported.\nThe Obs inside a structure do not have to be defined on the same set of configurations,\nbut the storage requirement is increased, if this is not the case.</li>\n<li><strong>fname</strong> (str):\nFilename of the output file.</li>\n<li><strong>name</strong> (str):\nThe name of the observable.</li>\n<li><strong>spec</strong> (str):\nOptional string that describes the contents of the file.</li>\n<li><strong>origin</strong> (str):\nSpecify where the data has its origin.</li>\n<li><strong>symbol</strong> (list):\nA list of symbols that describe the observables to be written. May be empty.</li>\n<li><strong>who</strong> (str):\nProvide the name of the person that exports the data.</li>\n<li><strong>enstags</strong> (dict):\nProvide alternative enstag for ensembles in the form enstags = {ename: enstag}\nOtherwise, the ensemble name is used.</li>\n<li><strong>gz</strong> (bool):\nIf True, the output is a gzipped XML. If False, the output is a XML file.</li>\n</ul>\n", "signature": "(\n    obsl,\n    fname,\n    name,\n    spec='dobs v1.0',\n    origin='',\n    symbol=[],\n    who=None,\n    enstags={},\n    gz=True\n)", "funcdef": "def"}, "pyerrors.input.hadrons": {"fullname": "pyerrors.input.hadrons", "modulename": "pyerrors.input.hadrons", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.hadrons.read_meson_hd5": {"fullname": "pyerrors.input.hadrons.read_meson_hd5", "modulename": "pyerrors.input.hadrons", "qualname": "read_meson_hd5", "type": "function", "doc": "<p>Read hadrons meson hdf5 file and extract the meson labeled 'meson'</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath to the files to read</li>\n<li><strong>filestem</strong> (str):\nnamestem of the files to read</li>\n<li><strong>ens_id</strong> (str):\nname of the ensemble, required for internal bookkeeping</li>\n<li><strong>meson</strong> (str):\nlabel of the meson to be extracted, standard value meson_0 which\ncorresponds to the pseudoscalar pseudoscalar two-point function.</li>\n<li><strong>idl</strong> (range):\nIf specified only configurations in the given range are read in.</li>\n</ul>\n", "signature": "(path, filestem, ens_id, meson='meson_0', idl=None)", "funcdef": "def"}, "pyerrors.input.hadrons.Npr_matrix": {"fullname": "pyerrors.input.hadrons.Npr_matrix", "modulename": "pyerrors.input.hadrons", "qualname": "Npr_matrix", "type": "class", "doc": "<p>ndarray(shape, dtype=float, buffer=None, offset=0,\n        strides=None, order=None)</p>\n\n<p>An array object represents a multidimensional, homogeneous array\nof fixed-size items.  An associated data-type object describes the\nformat of each element in the array (its byte-order, how many bytes it\noccupies in memory, whether it is an integer, a floating point number,\nor something else, etc.)</p>\n\n<p>Arrays should be constructed using <code>array</code>, <code>zeros</code> or <code>empty</code> (refer\nto the See Also section below).  The parameters given here refer to\na low-level method (<code>ndarray(...)</code>) for instantiating an array.</p>\n\n<p>For more information, refer to the <code>numpy</code> module and examine the\nmethods and attributes of an array.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>(for the __new__ method; see Notes below)</strong></li>\n<li><strong>shape</strong> (tuple of ints):\nShape of created array.</li>\n<li><strong>dtype</strong> (data-type, optional):\nAny object that can be interpreted as a numpy data type.</li>\n<li><strong>buffer</strong> (object exposing buffer interface, optional):\nUsed to fill the array with data.</li>\n<li><strong>offset</strong> (int, optional):\nOffset of array data in buffer.</li>\n<li><strong>strides</strong> (tuple of ints, optional):\nStrides of data in memory.</li>\n<li><strong>order</strong> ({'C', 'F'}, optional):\nRow-major (C-style) or column-major (Fortran-style) order.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>T</strong> (ndarray):\nTranspose of the array.</li>\n<li><strong>data</strong> (buffer):\nThe array's elements, in memory.</li>\n<li><strong>dtype</strong> (dtype object):\nDescribes the format of the elements in the array.</li>\n<li><strong>flags</strong> (dict):\nDictionary containing information related to memory use, e.g.,\n'C_CONTIGUOUS', 'OWNDATA', 'WRITEABLE', etc.</li>\n<li><strong>flat</strong> (numpy.flatiter object):\nFlattened version of the array as an iterator.  The iterator\nallows assignments, e.g., <code>x.flat = 3</code> (See <code>ndarray.flat</code> for\nassignment examples; TODO).</li>\n<li><strong>imag</strong> (ndarray):\nImaginary part of the array.</li>\n<li><strong>real</strong> (ndarray):\nReal part of the array.</li>\n<li><strong>size</strong> (int):\nNumber of elements in the array.</li>\n<li><strong>itemsize</strong> (int):\nThe memory use of each array element in bytes.</li>\n<li><strong>nbytes</strong> (int):\nThe total number of bytes required to store the array data,\ni.e., <code>itemsize * size</code>.</li>\n<li><strong>ndim</strong> (int):\nThe array's number of dimensions.</li>\n<li><strong>shape</strong> (tuple of ints):\nShape of the array.</li>\n<li><strong>strides</strong> (tuple of ints):\nThe step-size required to move from one element to the next in\nmemory. For example, a contiguous <code>(3, 4)</code> array of type\n<code>int16</code> in C-order has strides <code>(8, 2)</code>.  This implies that\nto move from element to element in memory requires jumps of 2 bytes.\nTo move from row-to-row, one needs to jump 8 bytes at a time\n(<code>2 * 4</code>).</li>\n<li><strong>ctypes</strong> (ctypes object):\nClass containing properties of the array needed for interaction\nwith ctypes.</li>\n<li><strong>base</strong> (ndarray):\nIf the array is a view into another array, that array is its <code>base</code>\n(unless that array is also a view).  The <code>base</code> array is where the\narray data is actually stored.</li>\n</ul>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>array</code>:  Construct an array. <br />\n<code>zeros</code>:  Create an array, each element of which is zero. <br />\n<code>empty</code>:  Create an array, but leave its allocated memory unchanged (i.e.,\nit contains \"garbage\"). <br />\n<code>dtype</code>:  Create a data-type. <br />\n<code>numpy.typing.NDArray</code>:  An ndarray alias :term:<code>generic &lt;generic type&gt;</code>\nw.r.t. its <code>dtype.type &lt;numpy.dtype.type&gt;</code>.  </p>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>There are two modes of creating an array using <code>__new__</code>:</p>\n\n<ol>\n<li>If <code>buffer</code> is None, then only <code>shape</code>, <code>dtype</code>, and <code>order</code>\nare used.</li>\n<li>If <code>buffer</code> is an object exposing the buffer interface, then\nall keywords are interpreted.</li>\n</ol>\n\n<p>No <code>__init__</code> method is needed because the array is fully initialized\nafter the <code>__new__</code> method.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>These examples illustrate the low-level <code>ndarray</code> constructor.  Refer\nto the <code>See Also</code> section above for easier ways of constructing an\nndarray.</p>\n\n<p>First mode, <code>buffer</code> is None:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">(</span><span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">order</span><span class=\"o\">=</span><span class=\"s1\">&#39;F&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">array([[0.0e+000, 0.0e+000], # random</span>\n<span class=\"go\">       [     nan, 2.5e-323]])</span>\n</code></pre></div>\n\n<p>Second mode:</p>\n\n<div class=\"pdoc-code codehilite\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">((</span><span class=\"mi\">2</span><span class=\"p\">,),</span> <span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">]),</span>\n<span class=\"gp\">... </span>           <span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int_</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">itemsize</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>           <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"c1\"># offset = 1*itemsize, i.e. skip first element</span>\n<span class=\"go\">array([2, 3])</span>\n</code></pre></div>\n", "bases": "numpy.ndarray"}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"fullname": "pyerrors.input.hadrons.Npr_matrix.__init__", "modulename": "pyerrors.input.hadrons", "qualname": "Npr_matrix.__init__", "type": "function", "doc": "<p></p>\n", "signature": "()", "funcdef": "def"}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"fullname": "pyerrors.input.hadrons.Npr_matrix.g5H", "modulename": "pyerrors.input.hadrons", "qualname": "Npr_matrix.g5H", "type": "variable", "doc": "<p>Gamma_5 hermitean conjugate</p>\n\n<p>Uses the fact that the propagator is gamma5 hermitean, so just the\nin and out momenta of the propagator are exchanged.</p>\n"}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"fullname": "pyerrors.input.hadrons.read_ExternalLeg_hd5", "modulename": "pyerrors.input.hadrons", "qualname": "read_ExternalLeg_hd5", "type": "function", "doc": "<p>Read hadrons ExternalLeg hdf5 file and output an array of CObs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath to the files to read</li>\n<li><strong>filestem</strong> (str):\nnamestem of the files to read</li>\n<li><strong>ens_id</strong> (str):\nname of the ensemble, required for internal bookkeeping</li>\n<li><strong>idl</strong> (range):\nIf specified only configurations in the given range are read in.</li>\n</ul>\n", "signature": "(path, filestem, ens_id, idl=None)", "funcdef": "def"}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"fullname": "pyerrors.input.hadrons.read_Bilinear_hd5", "modulename": "pyerrors.input.hadrons", "qualname": "read_Bilinear_hd5", "type": "function", "doc": "<p>Read hadrons Bilinear hdf5 file and output an array of CObs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath to the files to read</li>\n<li><strong>filestem</strong> (str):\nnamestem of the files to read</li>\n<li><strong>ens_id</strong> (str):\nname of the ensemble, required for internal bookkeeping</li>\n<li><strong>idl</strong> (range):\nIf specified only configurations in the given range are read in.</li>\n</ul>\n", "signature": "(path, filestem, ens_id, idl=None)", "funcdef": "def"}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"fullname": "pyerrors.input.hadrons.read_Fourquark_hd5", "modulename": "pyerrors.input.hadrons", "qualname": "read_Fourquark_hd5", "type": "function", "doc": "<p>Read hadrons FourquarkFullyConnected hdf5 file and output an array of CObs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath to the files to read</li>\n<li><strong>filestem</strong> (str):\nnamestem of the files to read</li>\n<li><strong>ens_id</strong> (str):\nname of the ensemble, required for internal bookkeeping</li>\n<li><strong>idl</strong> (range):\nIf specified only configurations in the given range are read in.</li>\n<li><strong>vertices</strong> (list):\nVertex functions to be extracted.</li>\n</ul>\n", "signature": "(path, filestem, ens_id, idl=None, vertices=['VA', 'AV'])", "funcdef": "def"}, "pyerrors.input.json": {"fullname": "pyerrors.input.json", "modulename": "pyerrors.input.json", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.json.create_json_string": {"fullname": "pyerrors.input.json.create_json_string", "modulename": "pyerrors.input.json", "qualname": "create_json_string", "type": "function", "doc": "<p>Generate the string for the export of a list of Obs or structures containing Obs\nto a .json(.gz) file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ol</strong> (list):\nList of objects that will be exported. At the moment, these objects can be\neither of: Obs, list, numpy.ndarray, Corr.\nAll Obs inside a structure have to be defined on the same set of configurations.</li>\n<li><strong>description</strong> (str):\nOptional string that describes the contents of the json file.</li>\n<li><strong>indent</strong> (int):\nSpecify the indentation level of the json file. None or 0 is permissible and\nsaves disk space.</li>\n</ul>\n", "signature": "(ol, description='', indent=1)", "funcdef": "def"}, "pyerrors.input.json.dump_to_json": {"fullname": "pyerrors.input.json.dump_to_json", "modulename": "pyerrors.input.json", "qualname": "dump_to_json", "type": "function", "doc": "<p>Export a list of Obs or structures containing Obs to a .json(.gz) file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ol</strong> (list):\nList of objects that will be exported. At the moment, these objects can be\neither of: Obs, list, numpy.ndarray, Corr.\nAll Obs inside a structure have to be defined on the same set of configurations.</li>\n<li><strong>fname</strong> (str):\nFilename of the output file.</li>\n<li><strong>description</strong> (str):\nOptional string that describes the contents of the json file.</li>\n<li><strong>indent</strong> (int):\nSpecify the indentation level of the json file. None or 0 is permissible and\nsaves disk space.</li>\n<li><strong>gz</strong> (bool):\nIf True, the output is a gzipped json. If False, the output is a json file.</li>\n</ul>\n", "signature": "(ol, fname, description='', indent=1, gz=True)", "funcdef": "def"}, "pyerrors.input.json.import_json_string": {"fullname": "pyerrors.input.json.import_json_string", "modulename": "pyerrors.input.json", "qualname": "import_json_string", "type": "function", "doc": "<p>Reconstruct a list of Obs or structures containing Obs from a json string.</p>\n\n<p>The following structures are supported: Obs, list, numpy.ndarray, Corr\nIf the list contains only one element, it is unpacked from the list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>json_string</strong> (str):\njson string containing the data.</li>\n<li><strong>verbose</strong> (bool):\nPrint additional information that was written to the file.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned.</li>\n</ul>\n", "signature": "(json_string, verbose=True, full_output=False)", "funcdef": "def"}, "pyerrors.input.json.load_json": {"fullname": "pyerrors.input.json.load_json", "modulename": "pyerrors.input.json", "qualname": "load_json", "type": "function", "doc": "<p>Import a list of Obs or structures containing Obs from a .json(.gz) file.</p>\n\n<p>The following structures are supported: Obs, list, numpy.ndarray, Corr\nIf the list contains only one element, it is unpacked from the list.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fname</strong> (str):\nFilename of the input file.</li>\n<li><strong>verbose</strong> (bool):\nPrint additional information that was written to the file.</li>\n<li><strong>gz</strong> (bool):\nIf True, assumes that data is gzipped. If False, assumes JSON file.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned.</li>\n</ul>\n", "signature": "(fname, verbose=True, gz=True, full_output=False)", "funcdef": "def"}, "pyerrors.input.json.dump_dict_to_json": {"fullname": "pyerrors.input.json.dump_dict_to_json", "modulename": "pyerrors.input.json", "qualname": "dump_dict_to_json", "type": "function", "doc": "<p>Export a dict of Obs or structures containing Obs to a .json(.gz) file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>od</strong> (dict):\nDict of JSON valid structures and objects that will be exported.\nAt the moment, these objects can be either of: Obs, list, numpy.ndarray, Corr.\nAll Obs inside a structure have to be defined on the same set of configurations.</li>\n<li><strong>fname</strong> (str):\nFilename of the output file.</li>\n<li><strong>description</strong> (str):\nOptional string that describes the contents of the json file.</li>\n<li><strong>indent</strong> (int):\nSpecify the indentation level of the json file. None or 0 is permissible and\nsaves disk space.</li>\n<li><strong>reps</strong> (str):\nSpecify the structure of the placeholder in exported dict to be reps[0-9]+.</li>\n<li><strong>gz</strong> (bool):\nIf True, the output is a gzipped json. If False, the output is a json file.</li>\n</ul>\n", "signature": "(od, fname, description='', indent=1, reps='DICTOBS', gz=True)", "funcdef": "def"}, "pyerrors.input.json.load_json_dict": {"fullname": "pyerrors.input.json.load_json_dict", "modulename": "pyerrors.input.json", "qualname": "load_json_dict", "type": "function", "doc": "<p>Import a dict of Obs or structures containing Obs from a .json(.gz) file.</p>\n\n<p>The following structures are supported: Obs, list, numpy.ndarray, Corr</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fname</strong> (str):\nFilename of the input file.</li>\n<li><strong>verbose</strong> (bool):\nPrint additional information that was written to the file.</li>\n<li><strong>gz</strong> (bool):\nIf True, assumes that data is gzipped. If False, assumes JSON file.</li>\n<li><strong>full_output</strong> (bool):\nIf True, a dict containing auxiliary information and the data is returned.\nIf False, only the data is returned.</li>\n<li><strong>reps</strong> (str):\nSpecify the structure of the placeholder in imported dict to be reps[0-9]+.</li>\n</ul>\n", "signature": "(fname, verbose=True, gz=True, full_output=False, reps='DICTOBS')", "funcdef": "def"}, "pyerrors.input.misc": {"fullname": "pyerrors.input.misc", "modulename": "pyerrors.input.misc", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.misc.read_pbp": {"fullname": "pyerrors.input.misc.read_pbp", "modulename": "pyerrors.input.misc", "qualname": "read_pbp", "type": "function", "doc": "<p>Read pbp format from given folder structure. Returns a list of length nrw</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>r_start</strong> (list):\nlist which contains the first config to be read for each replicum</li>\n<li><strong>r_stop</strong> (list):\nlist which contains the last config to be read for each replicum</li>\n</ul>\n", "signature": "(path, prefix, **kwargs)", "funcdef": "def"}, "pyerrors.input.openQCD": {"fullname": "pyerrors.input.openQCD", "modulename": "pyerrors.input.openQCD", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.openQCD.read_rwms": {"fullname": "pyerrors.input.openQCD.read_rwms", "modulename": "pyerrors.input.openQCD", "qualname": "read_rwms", "type": "function", "doc": "<p>Read rwms format from given folder structure. Returns a list of length nrw</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath that contains the data files</li>\n<li><strong>prefix</strong> (str):\nall files in path that start with prefix are considered as input files.\nMay be used together postfix to consider only special file endings.\nPrefix is ignored, if the keyword 'files' is used.</li>\n<li><strong>version</strong> (str):\nversion of openQCD, default 2.0</li>\n<li><strong>names</strong> (list):\nlist of names that is assigned to the data according according\nto the order in the file list. Use careful, if you do not provide file names!</li>\n<li><strong>r_start</strong> (list):\nlist which contains the first config to be read for each replicum</li>\n<li><strong>r_stop</strong> (list):\nlist which contains the last config to be read for each replicum</li>\n<li><strong>r_step</strong> (int):\ninteger that defines a fixed step size between two measurements (in units of configs)\nIf not given, r_step=1 is assumed.</li>\n<li><strong>postfix</strong> (str):\npostfix of the file to read, e.g. '.ms1' for openQCD-files</li>\n<li><strong>files</strong> (list):\nlist which contains the filenames to be read. No automatic detection of\nfiles performed if given.</li>\n<li><strong>print_err</strong> (bool):\nPrint additional information that is useful for debugging.</li>\n</ul>\n", "signature": "(path, prefix, version='2.0', names=None, **kwargs)", "funcdef": "def"}, "pyerrors.input.openQCD.extract_t0": {"fullname": "pyerrors.input.openQCD.extract_t0", "modulename": "pyerrors.input.openQCD", "qualname": "extract_t0", "type": "function", "doc": "<p>Extract t0 from given .ms.dat files. Returns t0 as Obs.</p>\n\n<p>It is assumed that all boundary effects have\nsufficiently decayed at x0=xmin.\nThe data around the zero crossing of t^2<E> - 0.3\nis fitted with a linear function\nfrom which the exact root is extracted.</p>\n\n<p>It is assumed that one measurement is performed for each config.\nIf this is not the case, the resulting idl, as well as the handling\nof r_start, r_stop and r_step is wrong and the user has to correct\nthis in the resulting observable.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nPath to .ms.dat files</li>\n<li><strong>prefix</strong> (str):\nEnsemble prefix</li>\n<li><strong>dtr_read</strong> (int):\nDetermines how many trajectories should be skipped\nwhen reading the ms.dat files.\nCorresponds to dtr_cnfg / dtr_ms in the openQCD input file.</li>\n<li><strong>xmin</strong> (int):\nFirst timeslice where the boundary\neffects have sufficiently decayed.</li>\n<li><strong>spatial_extent</strong> (int):\nspatial extent of the lattice, required for normalization.</li>\n<li><strong>fit_range</strong> (int):\nNumber of data points left and right of the zero\ncrossing to be included in the linear fit. (Default: 5)</li>\n<li><strong>r_start</strong> (list):\nlist which contains the first config to be read for each replicum.</li>\n<li><strong>r_stop</strong> (list):\nlist which contains the last config to be read for each replicum.</li>\n<li><strong>r_step</strong> (int):\ninteger that defines a fixed step size between two measurements (in units of configs)\nIf not given, r_step=1 is assumed.</li>\n<li><strong>plaquette</strong> (bool):\nIf true extract the plaquette estimate of t0 instead.</li>\n<li><strong>names</strong> (list):\nlist of names that is assigned to the data according according\nto the order in the file list. Use careful, if you do not provide file names!</li>\n<li><strong>files</strong> (list):\nlist which contains the filenames to be read. No automatic detection of\nfiles performed if given.</li>\n<li><strong>plot_fit</strong> (bool):\nIf true, the fit for the extraction of t0 is shown together with the data.</li>\n<li><strong>assume_thermalization</strong> (bool):\nIf True: If the first record divided by the distance between two measurements is larger than\n1, it is assumed that this is due to thermalization and the first measurement belongs\nto the first config (default).\nIf False: The config numbers are assumed to be traj_number // difference</li>\n</ul>\n", "signature": "(path, prefix, dtr_read, xmin, spatial_extent, fit_range=5, **kwargs)", "funcdef": "def"}, "pyerrors.input.openQCD.read_qtop": {"fullname": "pyerrors.input.openQCD.read_qtop", "modulename": "pyerrors.input.openQCD", "qualname": "read_qtop", "type": "function", "doc": "<p>Read the topologial charge based on openQCD gradient flow measurements.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath of the measurement files</li>\n<li><strong>prefix</strong> (str):\nprefix of the measurement files, e.g. <prefix>_id0_r0.ms.dat.\nIgnored if file names are passed explicitly via keyword files.</li>\n<li><strong>c</strong> (double):\nSmearing radius in units of the lattice extent, c = sqrt(8 t0) / L.</li>\n<li><strong>dtr_cnfg</strong> (int):\n(optional) parameter that specifies the number of measurements\nbetween two configs.\nIf it is not set, the distance between two measurements\nin the file is assumed to be the distance between two configurations.</li>\n<li><strong>steps</strong> (int):\n(optional) Distance between two configurations in units of trajectories /\ncycles. Assumed to be the distance between two measurements * dtr_cnfg if not given</li>\n<li><strong>version</strong> (str):\nEither openQCD or sfqcd, depending on the data.</li>\n<li><strong>L</strong> (int):\nspatial length of the lattice in L/a.\nHAS to be set if version != sfqcd, since openQCD does not provide\nthis in the header</li>\n<li><strong>r_start</strong> (list):\nlist which contains the first config to be read for each replicum.</li>\n<li><strong>r_stop</strong> (list):\nlist which contains the last config to be read for each replicum.</li>\n<li><strong>files</strong> (list):\nspecify the exact files that need to be read\nfrom path, practical if e.g. only one replicum is needed</li>\n<li><strong>names</strong> (list):\nAlternative labeling for replicas/ensembles.\nHas to have the appropriate length.</li>\n<li><strong>Zeuthen_flow</strong> (bool):\n(optional) If True, the Zeuthen flow is used for Qtop. Only possible\nfor version=='sfqcd' If False, the Wilson flow is used.</li>\n<li><strong>integer_charge</strong> (bool):\nIf True, the charge is rounded towards the nearest integer on each config.</li>\n</ul>\n", "signature": "(path, prefix, c, dtr_cnfg=1, version='openQCD', **kwargs)", "funcdef": "def"}, "pyerrors.input.openQCD.qtop_projection": {"fullname": "pyerrors.input.openQCD.qtop_projection", "modulename": "pyerrors.input.openQCD", "qualname": "qtop_projection", "type": "function", "doc": "<p>Returns the projection to the topological charge sector defined by target.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (Obs):\nTopological charge.</li>\n<li><strong>target</strong> (int):\nSpecifies the topological sector to be reweighted to (default 0)</li>\n</ul>\n", "signature": "(qtop, target=0)", "funcdef": "def"}, "pyerrors.input.openQCD.read_qtop_sector": {"fullname": "pyerrors.input.openQCD.read_qtop_sector", "modulename": "pyerrors.input.openQCD", "qualname": "read_qtop_sector", "type": "function", "doc": "<p>Constructs reweighting factors to a specified topological sector.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath of the measurement files</li>\n<li><strong>prefix</strong> (str):\nprefix of the measurement files, e.g. <prefix>_id0_r0.ms.dat</li>\n<li><strong>c</strong> (double):\nSmearing radius in units of the lattice extent, c = sqrt(8 t0) / L</li>\n<li><strong>target</strong> (int):\nSpecifies the topological sector to be reweighted to (default 0)</li>\n<li><strong>dtr_cnfg</strong> (int):\n(optional) parameter that specifies the number of trajectories\nbetween two configs.\nif it is not set, the distance between two measurements\nin the file is assumed to be the distance between two configurations.</li>\n<li><strong>steps</strong> (int):\n(optional) Distance between two configurations in units of trajectories /\ncycles. Assumed to be the distance between two measurements * dtr_cnfg if not given</li>\n<li><strong>version</strong> (str):\nversion string of the openQCD (sfqcd) version used to create\nthe ensemble. Default is 2.0. May also be set to sfqcd.</li>\n<li><strong>L</strong> (int):\nspatial length of the lattice in L/a.\nHAS to be set if version != sfqcd, since openQCD does not provide\nthis in the header</li>\n<li><strong>r_start</strong> (list):\noffset of the first ensemble, making it easier to match\nlater on with other Obs</li>\n<li><strong>r_stop</strong> (list):\nlast configurations that need to be read (per replicum)</li>\n<li><strong>files</strong> (list):\nspecify the exact files that need to be read\nfrom path, practical if e.g. only one replicum is needed</li>\n<li><strong>names</strong> (list):\nAlternative labeling for replicas/ensembles.\nHas to have the appropriate length</li>\n<li><strong>Zeuthen_flow</strong> (bool):\n(optional) If True, the Zeuthen flow is used for Qtop. Only possible\nfor version=='sfqcd' If False, the Wilson flow is used.</li>\n</ul>\n", "signature": "(path, prefix, c, target=0, **kwargs)", "funcdef": "def"}, "pyerrors.input.sfcf": {"fullname": "pyerrors.input.sfcf", "modulename": "pyerrors.input.sfcf", "type": "module", "doc": "<p></p>\n"}, "pyerrors.input.sfcf.read_sfcf": {"fullname": "pyerrors.input.sfcf.read_sfcf", "modulename": "pyerrors.input.sfcf", "qualname": "read_sfcf", "type": "function", "doc": "<p>Read sfcf c format from given folder structure.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>quarks</strong> (str):\nLabel of the quarks used in the sfcf input file. e.g. \"quark quark\"\nfor version 0.0 this does NOT need to be given with the typical \" - \"\nthat is present in the output file,\nthis is done automatically for this version</li>\n<li><strong>noffset</strong> (int):\nOffset of the source (only relevant when wavefunctions are used)</li>\n<li><strong>wf</strong> (int):\nID of wave function</li>\n<li><strong>wf2</strong> (int):\nID of the second wavefunction\n(only relevant for boundary-to-boundary correlation functions)</li>\n<li><strong>im</strong> (bool):\nif True, read imaginary instead of real part\nof the correlation function.</li>\n<li><strong>corr_type</strong> (str):\nchange between bi (boundary - inner) (default) bib (boundary - inner - boundary) and bb (boundary - boundary)\ncorrelator types</li>\n<li><strong>names</strong> (list):\nAlternative labeling for replicas/ensembles.\nHas to have the appropriate length</li>\n<li><strong>ens_name</strong> (str):\nreplaces the name of the ensemble</li>\n<li><strong>version</strong> (str):\nversion of SFCF, with which the measurement was done.\nif the compact output option (-c) was specified,\nappend a \"c\" to the version (e.g. \"1.0c\")\nif the append output option (-a) was specified,\nappend an \"a\" to the version</li>\n<li><strong>cfg_separator</strong> (str):\nString that separates the ensemble identifier from the configuration number (default 'n').</li>\n<li><strong>replica</strong> (list):\nlist of replica to be read, default is all</li>\n<li><strong>files</strong> (list):\nlist of files to be read per replica, default is all.\nfor non-compact output format, hand the folders to be read here.</li>\n<li><strong>check_configs:</strong>: list of list of supposed configs, eg. [range(1,1000)]\nfor one replicum with 1000 configs</li>\n</ul>\n", "signature": "(\n    path,\n    prefix,\n    name,\n    quarks='.*',\n    corr_type='bi',\n    noffset=0,\n    wf=0,\n    wf2=0,\n    version='1.0c',\n    cfg_separator='n',\n    **kwargs\n)", "funcdef": "def"}, "pyerrors.input.utils": {"fullname": "pyerrors.input.utils", "modulename": "pyerrors.input.utils", "type": "module", "doc": "<p>Utilities for the input</p>\n"}, "pyerrors.input.utils.check_idl": {"fullname": "pyerrors.input.utils.check_idl", "modulename": "pyerrors.input.utils", "qualname": "check_idl", "type": "function", "doc": "<p>Checks if list of configurations is contained in an idl</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>idl</strong> (range or list):\nidl of the current replicum</li>\n<li><strong>che</strong> (list):\nlist of configurations to be checked against</li>\n</ul>\n", "signature": "(idl, che)", "funcdef": "def"}, "pyerrors.linalg": {"fullname": "pyerrors.linalg", "modulename": "pyerrors.linalg", "type": "module", "doc": "<p></p>\n"}, "pyerrors.linalg.matmul": {"fullname": "pyerrors.linalg.matmul", "modulename": "pyerrors.linalg", "qualname": "matmul", "type": "function", "doc": "<p>Matrix multiply all operands.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operands</strong> (numpy.ndarray):\nArbitrary number of 2d-numpy arrays which can be real or complex\nObs valued.</li>\n<li><strong>This implementation is faster compared to standard multiplication via the @ operator.</strong></li>\n</ul>\n", "signature": "(*operands)", "funcdef": "def"}, "pyerrors.linalg.jack_matmul": {"fullname": "pyerrors.linalg.jack_matmul", "modulename": "pyerrors.linalg", "qualname": "jack_matmul", "type": "function", "doc": "<p>Matrix multiply both operands making use of the jackknife approximation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>operands</strong> (numpy.ndarray):\nArbitrary number of 2d-numpy arrays which can be real or complex\nObs valued.</li>\n<li><strong>For large matrices this is considerably faster compared to matmul.</strong></li>\n</ul>\n", "signature": "(*operands)", "funcdef": "def"}, "pyerrors.linalg.einsum": {"fullname": "pyerrors.linalg.einsum", "modulename": "pyerrors.linalg", "qualname": "einsum", "type": "function", "doc": "<p>Wrapper for numpy.einsum</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>subscripts</strong> (str):\nSubscripts for summation (see numpy documentation for details)</li>\n<li><strong>operands</strong> (numpy.ndarray):\nArbitrary number of 2d-numpy arrays which can be real or complex\nObs valued.</li>\n</ul>\n", "signature": "(subscripts, *operands)", "funcdef": "def"}, "pyerrors.linalg.inv": {"fullname": "pyerrors.linalg.inv", "modulename": "pyerrors.linalg", "qualname": "inv", "type": "function", "doc": "<p>Inverse of Obs or CObs valued matrices.</p>\n", "signature": "(x)", "funcdef": "def"}, "pyerrors.linalg.cholesky": {"fullname": "pyerrors.linalg.cholesky", "modulename": "pyerrors.linalg", "qualname": "cholesky", "type": "function", "doc": "<p>Cholesky decomposition of Obs or CObs valued matrices.</p>\n", "signature": "(x)", "funcdef": "def"}, "pyerrors.linalg.det": {"fullname": "pyerrors.linalg.det", "modulename": "pyerrors.linalg", "qualname": "det", "type": "function", "doc": "<p>Determinant of Obs valued matrices.</p>\n", "signature": "(x)", "funcdef": "def"}, "pyerrors.linalg.eigh": {"fullname": "pyerrors.linalg.eigh", "modulename": "pyerrors.linalg", "qualname": "eigh", "type": "function", "doc": "<p>Computes the eigenvalues and eigenvectors of a given hermitian matrix of Obs according to np.linalg.eigh.</p>\n", "signature": "(obs, **kwargs)", "funcdef": "def"}, "pyerrors.linalg.eig": {"fullname": "pyerrors.linalg.eig", "modulename": "pyerrors.linalg", "qualname": "eig", "type": "function", "doc": "<p>Computes the eigenvalues of a given matrix of Obs according to np.linalg.eig.</p>\n", "signature": "(obs, **kwargs)", "funcdef": "def"}, "pyerrors.linalg.pinv": {"fullname": "pyerrors.linalg.pinv", "modulename": "pyerrors.linalg", "qualname": "pinv", "type": "function", "doc": "<p>Computes the Moore-Penrose pseudoinverse of a matrix of Obs.</p>\n", "signature": "(obs, **kwargs)", "funcdef": "def"}, "pyerrors.linalg.svd": {"fullname": "pyerrors.linalg.svd", "modulename": "pyerrors.linalg", "qualname": "svd", "type": "function", "doc": "<p>Computes the singular value decomposition of a matrix of Obs.</p>\n", "signature": "(obs, **kwargs)", "funcdef": "def"}, "pyerrors.misc": {"fullname": "pyerrors.misc", "modulename": "pyerrors.misc", "type": "module", "doc": "<p></p>\n"}, "pyerrors.misc.dump_object": {"fullname": "pyerrors.misc.dump_object", "modulename": "pyerrors.misc", "qualname": "dump_object", "type": "function", "doc": "<p>Dump object into pickle file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obj</strong> (object):\nobject to be saved in the pickle file</li>\n<li><strong>name</strong> (str):\nname of the file</li>\n<li><strong>path</strong> (str):\nspecifies a custom path for the file (default '.')</li>\n</ul>\n", "signature": "(obj, name, **kwargs)", "funcdef": "def"}, "pyerrors.misc.load_object": {"fullname": "pyerrors.misc.load_object", "modulename": "pyerrors.misc", "qualname": "load_object", "type": "function", "doc": "<p>Load object from pickle file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\npath to the file</li>\n</ul>\n", "signature": "(path)", "funcdef": "def"}, "pyerrors.misc.pseudo_Obs": {"fullname": "pyerrors.misc.pseudo_Obs", "modulename": "pyerrors.misc", "qualname": "pseudo_Obs", "type": "function", "doc": "<p>Generate an Obs object with given value, dvalue and name for test purposes</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (float):\ncentral value of the Obs to be generated.</li>\n<li><strong>dvalue</strong> (float):\nerror of the Obs to be generated.</li>\n<li><strong>name</strong> (str):\nname of the ensemble for which the Obs is to be generated.</li>\n<li><strong>samples</strong> (int):\nnumber of samples for the Obs (default 1000).</li>\n</ul>\n", "signature": "(value, dvalue, name, samples=1000)", "funcdef": "def"}, "pyerrors.misc.gen_correlated_data": {"fullname": "pyerrors.misc.gen_correlated_data", "modulename": "pyerrors.misc", "qualname": "gen_correlated_data", "type": "function", "doc": "<p>Generate observables with given covariance and autocorrelation times.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>means</strong> (list):\nlist containing the mean value of each observable.</li>\n<li><strong>cov</strong> (numpy.ndarray):\ncovariance matrix for the data to be generated.</li>\n<li><strong>name</strong> (str):\nensemble name for the data to be geneated.</li>\n<li><strong>tau</strong> (float or list):\ncan either be a real number or a list with an entry for\nevery dataset.</li>\n<li><strong>samples</strong> (int):\nnumber of samples to be generated for each observable.</li>\n</ul>\n", "signature": "(means, cov, name, tau=0.5, samples=1000)", "funcdef": "def"}, "pyerrors.mpm": {"fullname": "pyerrors.mpm", "modulename": "pyerrors.mpm", "type": "module", "doc": "<p></p>\n"}, "pyerrors.mpm.matrix_pencil_method": {"fullname": "pyerrors.mpm.matrix_pencil_method", "modulename": "pyerrors.mpm", "qualname": "matrix_pencil_method", "type": "function", "doc": "<p>Matrix pencil method to extract k energy levels from data</p>\n\n<p>Implementation of the matrix pencil method based on\neq. (2.17) of Y. Hua, T. K. Sarkar, IEEE Trans. Acoust. 38, 814-824 (1990)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (list):\ncan be a list of Obs for the analysis of a single correlator, or a list of lists\nof Obs if several correlators are to analyzed at once.</li>\n<li><strong>k</strong> (int):\nNumber of states to extract (default 1).</li>\n<li><strong>p</strong> (int):\nmatrix pencil parameter which filters noise. The optimal value is expected between\nlen(data)/3 and 2*len(data)/3. The computation is more expensive the closer p is\nto len(data)/2 but could possibly suppress more noise (default len(data)//2).</li>\n</ul>\n", "signature": "(corrs, k=1, p=None, **kwargs)", "funcdef": "def"}, "pyerrors.obs": {"fullname": "pyerrors.obs", "modulename": "pyerrors.obs", "type": "module", "doc": "<p></p>\n"}, "pyerrors.obs.Obs": {"fullname": "pyerrors.obs.Obs", "modulename": "pyerrors.obs", "qualname": "Obs", "type": "class", "doc": "<p>Class for a general observable.</p>\n\n<p>Instances of Obs are the basic objects of a pyerrors error analysis.\nThey are initialized with a list which contains arrays of samples for\ndifferent ensembles/replica and another list of same length which contains\nthe names of the ensembles/replica. Mathematical operations can be\nperformed on instances. The result is another instance of Obs. The error of\nan instance can be computed with the gamma_method. Also contains additional\nmethods for output and visualization of the error calculation.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>S_global</strong> (float):\nStandard value for S (default 2.0)</li>\n<li><strong>S_dict</strong> (dict):\nDictionary for S values. If an entry for a given ensemble\nexists this overwrites the standard value for that ensemble.</li>\n<li><strong>tau_exp_global</strong> (float):\nStandard value for tau_exp (default 0.0)</li>\n<li><strong>tau_exp_dict</strong> (dict):\nDictionary for tau_exp values. If an entry for a given ensemble exists\nthis overwrites the standard value for that ensemble.</li>\n<li><strong>N_sigma_global</strong> (float):\nStandard value for N_sigma (default 1.0)</li>\n<li><strong>N_sigma_dict</strong> (dict):\nDictionary for N_sigma values. If an entry for a given ensemble exists\nthis overwrites the standard value for that ensemble.</li>\n</ul>\n"}, "pyerrors.obs.Obs.__init__": {"fullname": "pyerrors.obs.Obs.__init__", "modulename": "pyerrors.obs", "qualname": "Obs.__init__", "type": "function", "doc": "<p>Initialize Obs object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>samples</strong> (list):\nlist of numpy arrays containing the Monte Carlo samples</li>\n<li><strong>names</strong> (list):\nlist of strings labeling the individual samples</li>\n<li><strong>idl</strong> (list, optional):\nlist of ranges or lists on which the samples are defined</li>\n</ul>\n", "signature": "(self, samples, names, idl=None, **kwargs)", "funcdef": "def"}, "pyerrors.obs.Obs.S_global": {"fullname": "pyerrors.obs.Obs.S_global", "modulename": "pyerrors.obs", "qualname": "Obs.S_global", "type": "variable", "doc": "<p></p>\n", "default_value": " = 2.0"}, "pyerrors.obs.Obs.S_dict": {"fullname": "pyerrors.obs.Obs.S_dict", "modulename": "pyerrors.obs", "qualname": "Obs.S_dict", "type": "variable", "doc": "<p></p>\n", "default_value": " = {}"}, "pyerrors.obs.Obs.tau_exp_global": {"fullname": "pyerrors.obs.Obs.tau_exp_global", "modulename": "pyerrors.obs", "qualname": "Obs.tau_exp_global", "type": "variable", "doc": "<p></p>\n", "default_value": " = 0.0"}, "pyerrors.obs.Obs.tau_exp_dict": {"fullname": "pyerrors.obs.Obs.tau_exp_dict", "modulename": "pyerrors.obs", "qualname": "Obs.tau_exp_dict", "type": "variable", "doc": "<p></p>\n", "default_value": " = {}"}, "pyerrors.obs.Obs.N_sigma_global": {"fullname": "pyerrors.obs.Obs.N_sigma_global", "modulename": "pyerrors.obs", "qualname": "Obs.N_sigma_global", "type": "variable", "doc": "<p></p>\n", "default_value": " = 1.0"}, "pyerrors.obs.Obs.N_sigma_dict": {"fullname": "pyerrors.obs.Obs.N_sigma_dict", "modulename": "pyerrors.obs", "qualname": "Obs.N_sigma_dict", "type": "variable", "doc": "<p></p>\n", "default_value": " = {}"}, "pyerrors.obs.Obs.filter_eps": {"fullname": "pyerrors.obs.Obs.filter_eps", "modulename": "pyerrors.obs", "qualname": "Obs.filter_eps", "type": "variable", "doc": "<p></p>\n", "default_value": " = 1e-10"}, "pyerrors.obs.Obs.names": {"fullname": "pyerrors.obs.Obs.names", "modulename": "pyerrors.obs", "qualname": "Obs.names", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.shape": {"fullname": "pyerrors.obs.Obs.shape", "modulename": "pyerrors.obs", "qualname": "Obs.shape", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.r_values": {"fullname": "pyerrors.obs.Obs.r_values", "modulename": "pyerrors.obs", "qualname": "Obs.r_values", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.deltas": {"fullname": "pyerrors.obs.Obs.deltas", "modulename": "pyerrors.obs", "qualname": "Obs.deltas", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.N": {"fullname": "pyerrors.obs.Obs.N", "modulename": "pyerrors.obs", "qualname": "Obs.N", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.is_merged": {"fullname": "pyerrors.obs.Obs.is_merged", "modulename": "pyerrors.obs", "qualname": "Obs.is_merged", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.idl": {"fullname": "pyerrors.obs.Obs.idl", "modulename": "pyerrors.obs", "qualname": "Obs.idl", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.ddvalue": {"fullname": "pyerrors.obs.Obs.ddvalue", "modulename": "pyerrors.obs", "qualname": "Obs.ddvalue", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.reweighted": {"fullname": "pyerrors.obs.Obs.reweighted", "modulename": "pyerrors.obs", "qualname": "Obs.reweighted", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.tag": {"fullname": "pyerrors.obs.Obs.tag", "modulename": "pyerrors.obs", "qualname": "Obs.tag", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.value": {"fullname": "pyerrors.obs.Obs.value", "modulename": "pyerrors.obs", "qualname": "Obs.value", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.dvalue": {"fullname": "pyerrors.obs.Obs.dvalue", "modulename": "pyerrors.obs", "qualname": "Obs.dvalue", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_names": {"fullname": "pyerrors.obs.Obs.e_names", "modulename": "pyerrors.obs", "qualname": "Obs.e_names", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.cov_names": {"fullname": "pyerrors.obs.Obs.cov_names", "modulename": "pyerrors.obs", "qualname": "Obs.cov_names", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.mc_names": {"fullname": "pyerrors.obs.Obs.mc_names", "modulename": "pyerrors.obs", "qualname": "Obs.mc_names", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_content": {"fullname": "pyerrors.obs.Obs.e_content", "modulename": "pyerrors.obs", "qualname": "Obs.e_content", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.covobs": {"fullname": "pyerrors.obs.Obs.covobs", "modulename": "pyerrors.obs", "qualname": "Obs.covobs", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.gamma_method": {"fullname": "pyerrors.obs.Obs.gamma_method", "modulename": "pyerrors.obs", "qualname": "Obs.gamma_method", "type": "function", "doc": "<p>Estimate the error and related properties of the Obs.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>S</strong> (float):\nspecifies a custom value for the parameter S (default 2.0).\nIf set to 0 it is assumed that the data exhibits no\nautocorrelation. In this case the error estimates coincides\nwith the sample standard error.</li>\n<li><strong>tau_exp</strong> (float):\npositive value triggers the critical slowing down analysis\n(default 0.0).</li>\n<li><strong>N_sigma</strong> (float):\nnumber of standard deviations from zero until the tail is\nattached to the autocorrelation function (default 1).</li>\n<li><strong>fft</strong> (bool):\ndetermines whether the fft algorithm is used for the computation\nof the autocorrelation function (default True)</li>\n</ul>\n", "signature": "(self, **kwargs)", "funcdef": "def"}, "pyerrors.obs.Obs.details": {"fullname": "pyerrors.obs.Obs.details", "modulename": "pyerrors.obs", "qualname": "Obs.details", "type": "function", "doc": "<p>Output detailed properties of the Obs.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>ens_content</strong> (bool):\nprint details about the ensembles and replica if true.</li>\n</ul>\n", "signature": "(self, ens_content=True)", "funcdef": "def"}, "pyerrors.obs.Obs.is_zero_within_error": {"fullname": "pyerrors.obs.Obs.is_zero_within_error", "modulename": "pyerrors.obs", "qualname": "Obs.is_zero_within_error", "type": "function", "doc": "<p>Checks whether the observable is zero within 'sigma' standard errors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sigma</strong> (int):\nNumber of standard errors used for the check.</li>\n<li><strong>Works only properly when the gamma method was run.</strong></li>\n</ul>\n", "signature": "(self, sigma=1)", "funcdef": "def"}, "pyerrors.obs.Obs.is_zero": {"fullname": "pyerrors.obs.Obs.is_zero", "modulename": "pyerrors.obs", "qualname": "Obs.is_zero", "type": "function", "doc": "<p>Checks whether the observable is zero within a given tolerance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>atol</strong> (float):\nAbsolute tolerance (for details see numpy documentation).</li>\n</ul>\n", "signature": "(self, atol=1e-10)", "funcdef": "def"}, "pyerrors.obs.Obs.plot_tauint": {"fullname": "pyerrors.obs.Obs.plot_tauint", "modulename": "pyerrors.obs", "qualname": "Obs.plot_tauint", "type": "function", "doc": "<p>Plot integrated autocorrelation time for each ensemble.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>save</strong> (str):\nsaves the figure to a file named 'save' if.</li>\n</ul>\n", "signature": "(self, save=None)", "funcdef": "def"}, "pyerrors.obs.Obs.plot_rho": {"fullname": "pyerrors.obs.Obs.plot_rho", "modulename": "pyerrors.obs", "qualname": "Obs.plot_rho", "type": "function", "doc": "<p>Plot normalized autocorrelation function time for each ensemble.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>save</strong> (str):\nsaves the figure to a file named 'save' if.</li>\n</ul>\n", "signature": "(self, save=None)", "funcdef": "def"}, "pyerrors.obs.Obs.plot_rep_dist": {"fullname": "pyerrors.obs.Obs.plot_rep_dist", "modulename": "pyerrors.obs", "qualname": "Obs.plot_rep_dist", "type": "function", "doc": "<p>Plot replica distribution for each ensemble with more than one replicum.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.plot_history": {"fullname": "pyerrors.obs.Obs.plot_history", "modulename": "pyerrors.obs", "qualname": "Obs.plot_history", "type": "function", "doc": "<p>Plot derived Monte Carlo history for each ensemble</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>expand</strong> (bool):\nshow expanded history for irregular Monte Carlo chains (default: True).</li>\n</ul>\n", "signature": "(self, expand=True)", "funcdef": "def"}, "pyerrors.obs.Obs.plot_piechart": {"fullname": "pyerrors.obs.Obs.plot_piechart", "modulename": "pyerrors.obs", "qualname": "Obs.plot_piechart", "type": "function", "doc": "<p>Plot piechart which shows the fractional contribution of each\nensemble to the error and returns a dictionary containing the fractions.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.dump": {"fullname": "pyerrors.obs.Obs.dump", "modulename": "pyerrors.obs", "qualname": "Obs.dump", "type": "function", "doc": "<p>Dump the Obs to a file 'name' of chosen format.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nname of the file to be saved.</li>\n<li><strong>datatype</strong> (str):\nFormat of the exported file. Supported formats include\n\"json.gz\" and \"pickle\"</li>\n<li><strong>description</strong> (str):\nDescription for output file, only relevant for json.gz format.</li>\n<li><strong>path</strong> (str):\nspecifies a custom path for the file (default '.')</li>\n</ul>\n", "signature": "(self, filename, datatype='json.gz', description='', **kwargs)", "funcdef": "def"}, "pyerrors.obs.Obs.export_jackknife": {"fullname": "pyerrors.obs.Obs.export_jackknife", "modulename": "pyerrors.obs", "qualname": "Obs.export_jackknife", "type": "function", "doc": "<p>Export jackknife samples from the Obs</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>numpy.ndarray</strong>: Returns a numpy array of length N + 1 where N is the number of samples\nfor the given ensemble and replicum. The zeroth entry of the array contains\nthe mean value of the Obs, entries 1 to N contain the N jackknife samples\nderived from the Obs. The current implementation only works for observables\ndefined on exactly one ensemble and replicum. The derived jackknife samples\nshould agree with samples from a full jackknife analysis up to O(1/N).</li>\n</ul>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.sqrt": {"fullname": "pyerrors.obs.Obs.sqrt", "modulename": "pyerrors.obs", "qualname": "Obs.sqrt", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.log": {"fullname": "pyerrors.obs.Obs.log", "modulename": "pyerrors.obs", "qualname": "Obs.log", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.exp": {"fullname": "pyerrors.obs.Obs.exp", "modulename": "pyerrors.obs", "qualname": "Obs.exp", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.sin": {"fullname": "pyerrors.obs.Obs.sin", "modulename": "pyerrors.obs", "qualname": "Obs.sin", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.cos": {"fullname": "pyerrors.obs.Obs.cos", "modulename": "pyerrors.obs", "qualname": "Obs.cos", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.tan": {"fullname": "pyerrors.obs.Obs.tan", "modulename": "pyerrors.obs", "qualname": "Obs.tan", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arcsin": {"fullname": "pyerrors.obs.Obs.arcsin", "modulename": "pyerrors.obs", "qualname": "Obs.arcsin", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arccos": {"fullname": "pyerrors.obs.Obs.arccos", "modulename": "pyerrors.obs", "qualname": "Obs.arccos", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arctan": {"fullname": "pyerrors.obs.Obs.arctan", "modulename": "pyerrors.obs", "qualname": "Obs.arctan", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.sinh": {"fullname": "pyerrors.obs.Obs.sinh", "modulename": "pyerrors.obs", "qualname": "Obs.sinh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.cosh": {"fullname": "pyerrors.obs.Obs.cosh", "modulename": "pyerrors.obs", "qualname": "Obs.cosh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.tanh": {"fullname": "pyerrors.obs.Obs.tanh", "modulename": "pyerrors.obs", "qualname": "Obs.tanh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arcsinh": {"fullname": "pyerrors.obs.Obs.arcsinh", "modulename": "pyerrors.obs", "qualname": "Obs.arcsinh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arccosh": {"fullname": "pyerrors.obs.Obs.arccosh", "modulename": "pyerrors.obs", "qualname": "Obs.arccosh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.arctanh": {"fullname": "pyerrors.obs.Obs.arctanh", "modulename": "pyerrors.obs", "qualname": "Obs.arctanh", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.Obs.N_sigma": {"fullname": "pyerrors.obs.Obs.N_sigma", "modulename": "pyerrors.obs", "qualname": "Obs.N_sigma", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.S": {"fullname": "pyerrors.obs.Obs.S", "modulename": "pyerrors.obs", "qualname": "Obs.S", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_ddvalue": {"fullname": "pyerrors.obs.Obs.e_ddvalue", "modulename": "pyerrors.obs", "qualname": "Obs.e_ddvalue", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_drho": {"fullname": "pyerrors.obs.Obs.e_drho", "modulename": "pyerrors.obs", "qualname": "Obs.e_drho", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_dtauint": {"fullname": "pyerrors.obs.Obs.e_dtauint", "modulename": "pyerrors.obs", "qualname": "Obs.e_dtauint", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_dvalue": {"fullname": "pyerrors.obs.Obs.e_dvalue", "modulename": "pyerrors.obs", "qualname": "Obs.e_dvalue", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_n_dtauint": {"fullname": "pyerrors.obs.Obs.e_n_dtauint", "modulename": "pyerrors.obs", "qualname": "Obs.e_n_dtauint", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_n_tauint": {"fullname": "pyerrors.obs.Obs.e_n_tauint", "modulename": "pyerrors.obs", "qualname": "Obs.e_n_tauint", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_rho": {"fullname": "pyerrors.obs.Obs.e_rho", "modulename": "pyerrors.obs", "qualname": "Obs.e_rho", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_tauint": {"fullname": "pyerrors.obs.Obs.e_tauint", "modulename": "pyerrors.obs", "qualname": "Obs.e_tauint", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.e_windowsize": {"fullname": "pyerrors.obs.Obs.e_windowsize", "modulename": "pyerrors.obs", "qualname": "Obs.e_windowsize", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.Obs.tau_exp": {"fullname": "pyerrors.obs.Obs.tau_exp", "modulename": "pyerrors.obs", "qualname": "Obs.tau_exp", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.CObs": {"fullname": "pyerrors.obs.CObs", "modulename": "pyerrors.obs", "qualname": "CObs", "type": "class", "doc": "<p>Class for a complex valued observable.</p>\n"}, "pyerrors.obs.CObs.__init__": {"fullname": "pyerrors.obs.CObs.__init__", "modulename": "pyerrors.obs", "qualname": "CObs.__init__", "type": "function", "doc": "<p></p>\n", "signature": "(self, real, imag=0.0)", "funcdef": "def"}, "pyerrors.obs.CObs.tag": {"fullname": "pyerrors.obs.CObs.tag", "modulename": "pyerrors.obs", "qualname": "CObs.tag", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.CObs.real": {"fullname": "pyerrors.obs.CObs.real", "modulename": "pyerrors.obs", "qualname": "CObs.real", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.CObs.imag": {"fullname": "pyerrors.obs.CObs.imag", "modulename": "pyerrors.obs", "qualname": "CObs.imag", "type": "variable", "doc": "<p></p>\n"}, "pyerrors.obs.CObs.gamma_method": {"fullname": "pyerrors.obs.CObs.gamma_method", "modulename": "pyerrors.obs", "qualname": "CObs.gamma_method", "type": "function", "doc": "<p>Executes the gamma_method for the real and the imaginary part.</p>\n", "signature": "(self, **kwargs)", "funcdef": "def"}, "pyerrors.obs.CObs.is_zero": {"fullname": "pyerrors.obs.CObs.is_zero", "modulename": "pyerrors.obs", "qualname": "CObs.is_zero", "type": "function", "doc": "<p>Checks whether both real and imaginary part are zero within machine precision.</p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.CObs.conjugate": {"fullname": "pyerrors.obs.CObs.conjugate", "modulename": "pyerrors.obs", "qualname": "CObs.conjugate", "type": "function", "doc": "<p></p>\n", "signature": "(self)", "funcdef": "def"}, "pyerrors.obs.derived_observable": {"fullname": "pyerrors.obs.derived_observable", "modulename": "pyerrors.obs", "qualname": "derived_observable", "type": "function", "doc": "<p>Construct a derived Obs according to func(data, **kwargs) using automatic differentiation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong> (object):\narbitrary function of the form func(data, **kwargs). For the\nautomatic differentiation to work, all numpy functions have to have\nthe autograd wrapper (use 'import autograd.numpy as anp').</li>\n<li><strong>data</strong> (list):\nlist of Obs, e.g. [obs1, obs2, obs3].</li>\n<li><strong>num_grad</strong> (bool):\nif True, numerical derivatives are used instead of autograd\n(default False). To control the numerical differentiation the\nkwargs of numdifftools.step_generators.MaxStepGenerator\ncan be used.</li>\n<li><strong>man_grad</strong> (list):\nmanually supply a list or an array which contains the jacobian\nof func. Use cautiously, supplying the wrong derivative will\nnot be intercepted.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>For simple mathematical operations it can be practical to use anonymous\nfunctions. For the ratio of two observables one can e.g. use</p>\n\n<p>new_obs = derived_observable(lambda x: x[0] / x[1], [obs1, obs2])</p>\n", "signature": "(func, data, array_mode=False, **kwargs)", "funcdef": "def"}, "pyerrors.obs.reweight": {"fullname": "pyerrors.obs.reweight", "modulename": "pyerrors.obs", "qualname": "reweight", "type": "function", "doc": "<p>Reweight a list of observables.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>weight</strong> (Obs):\nReweighting factor. An Observable that has to be defined on a superset of the\nconfigurations in obs[i].idl for all i.</li>\n<li><strong>obs</strong> (list):\nlist of Obs, e.g. [obs1, obs2, obs3].</li>\n<li><strong>all_configs</strong> (bool):\nif True, the reweighted observables are normalized by the average of\nthe reweighting factor on all configurations in weight.idl and not\non the configurations in obs[i].idl.</li>\n</ul>\n", "signature": "(weight, obs, **kwargs)", "funcdef": "def"}, "pyerrors.obs.correlate": {"fullname": "pyerrors.obs.correlate", "modulename": "pyerrors.obs", "qualname": "correlate", "type": "function", "doc": "<p>Correlate two observables.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obs_a</strong> (Obs):\nFirst observable</li>\n<li><strong>obs_b</strong> (Obs):\nSecond observable</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Keep in mind to only correlate primary observables which have not been reweighted\nyet. The reweighting has to be applied after correlating the observables.\nCurrently only works if ensembles are identical (this is not strictly necessary).</p>\n", "signature": "(obs_a, obs_b)", "funcdef": "def"}, "pyerrors.obs.covariance": {"fullname": "pyerrors.obs.covariance", "modulename": "pyerrors.obs", "qualname": "covariance", "type": "function", "doc": "<p>Calculates the covariance matrix of a set of observables.</p>\n\n<p>The gamma method has to be applied first to all observables.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obs</strong> (list or numpy.ndarray):\nList or one dimensional array of Obs</li>\n<li><strong>visualize</strong> (bool):\nIf True plots the corresponding normalized correlation matrix (default False).</li>\n<li><strong>correlation</strong> (bool):\nIf True the correlation instead of the covariance is returned (default False).</li>\n<li><strong>smooth</strong> (None or int):\nIf smooth is an integer 'E' between 2 and the dimension of the matrix minus 1 the eigenvalue\nsmoothing procedure of hep-lat/9412087 is applied to the correlation matrix which leaves the\nlargest E eigenvalues essentially unchanged and smoothes the smaller eigenvalues to avoid extremely\nsmall ones.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The covariance is estimated by calculating the correlation matrix assuming no autocorrelation and then rescaling the correlation matrix by the full errors including the previous gamma method estimate for the autocorrelation of the observables. The covariance at windowsize 0 is guaranteed to be positive semi-definite\n$$v_i\\Gamma_{ij}(0)v_j=\\frac{1}{N}\\sum_{s=1}^N\\sum_{i,j}v_i\\delta_i^s\\delta_j^s v_j=\\frac{1}{N}\\sum_{s=1}^N\\sum_{i}|v_i\\delta_i^s|^2\\geq 0\\,,$$ for every $v\\in\\mathbb{R}^M$, while such an identity does not hold for larger windows/lags.\nFor observables defined on a single ensemble our approximation is equivalent to assuming that the integrated autocorrelation time of an off-diagonal element is equal to the geometric mean of the integrated autocorrelation times of the corresponding diagonal elements.\n$$\\tau_{\\mathrm{int}, ij}=\\sqrt{\\tau_{\\mathrm{int}, i}\\times \\tau_{\\mathrm{int}, j}}$$\nThis construction ensures that the estimated covariance matrix is positive semi-definite (up to numerical rounding errors).</p>\n", "signature": "(obs, visualize=False, correlation=False, smooth=None, **kwargs)", "funcdef": "def"}, "pyerrors.obs.import_jackknife": {"fullname": "pyerrors.obs.import_jackknife", "modulename": "pyerrors.obs", "qualname": "import_jackknife", "type": "function", "doc": "<p>Imports jackknife samples and returns an Obs</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>jacks</strong> (numpy.ndarray):\nnumpy array containing the mean value as zeroth entry and\nthe N jackknife samples as first to Nth entry.</li>\n<li><strong>name</strong> (str):\nname of the ensemble the samples are defined on.</li>\n</ul>\n", "signature": "(jacks, name, idl=None)", "funcdef": "def"}, "pyerrors.obs.merge_obs": {"fullname": "pyerrors.obs.merge_obs", "modulename": "pyerrors.obs", "qualname": "merge_obs", "type": "function", "doc": "<p>Combine all observables in list_of_obs into one new observable</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>list_of_obs</strong> (list):\nlist of the Obs object to be combined</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>It is not possible to combine obs which are based on the same replicum</p>\n", "signature": "(list_of_obs)", "funcdef": "def"}, "pyerrors.obs.cov_Obs": {"fullname": "pyerrors.obs.cov_Obs", "modulename": "pyerrors.obs", "qualname": "cov_Obs", "type": "function", "doc": "<p>Create an Obs based on mean(s) and a covariance matrix</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mean</strong> (list of floats or float):\nN mean value(s) of the new Obs</li>\n<li><strong>cov</strong> (list or array):\n2d (NxN) Covariance matrix, 1d diagonal entries or 0d covariance</li>\n<li><strong>name</strong> (str):\nidentifier for the covariance matrix</li>\n<li><strong>grad</strong> (list or array):\nGradient of the Covobs wrt. the means belonging to cov.</li>\n</ul>\n", "signature": "(means, cov, name, grad=None)", "funcdef": "def"}, "pyerrors.roots": {"fullname": "pyerrors.roots", "modulename": "pyerrors.roots", "type": "module", "doc": "<p></p>\n"}, "pyerrors.roots.find_root": {"fullname": "pyerrors.roots.find_root", "modulename": "pyerrors.roots", "qualname": "find_root", "type": "function", "doc": "<p>Finds the root of the function func(x, d) where d is an <code>Obs</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>d</strong> (Obs):\nObs passed to the function.</li>\n<li><strong>func</strong> (object):\nFunction to be minimized. Any numpy functions have to use the autograd.numpy wrapper.\nExample:\n<code>python\nimport autograd.numpy as anp\ndef root_func(x, d):\n   return anp.exp(-x ** 2) - d\n</code></li>\n<li><strong>guess</strong> (float):\nInitial guess for the minimization.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Obs</strong>: <code>Obs</code> valued root of the function.</li>\n</ul>\n", "signature": "(d, func, guess=1.0, **kwargs)", "funcdef": "def"}, "pyerrors.version": {"fullname": "pyerrors.version", "modulename": "pyerrors.version", "type": "module", "doc": "<p></p>\n"}}, "docInfo": {"pyerrors": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7902}, "pyerrors.correlators": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 108}, "pyerrors.correlators.Corr.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 94}, "pyerrors.correlators.Corr.reweighted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.gamma_method": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "pyerrors.correlators.Corr.projected": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 64}, "pyerrors.correlators.Corr.item": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 53}, "pyerrors.correlators.Corr.plottable": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 31}, "pyerrors.correlators.Corr.symmetric": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "pyerrors.correlators.Corr.anti_symmetric": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "pyerrors.correlators.Corr.matrix_symmetric": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "pyerrors.correlators.Corr.GEVP": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 178}, "pyerrors.correlators.Corr.Eigenvalue": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 181}, "pyerrors.correlators.Corr.Hankel": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 67}, "pyerrors.correlators.Corr.roll": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 26}, "pyerrors.correlators.Corr.reverse": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 9}, "pyerrors.correlators.Corr.thin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 43}, "pyerrors.correlators.Corr.correlate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 53}, "pyerrors.correlators.Corr.reweight": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 79}, "pyerrors.correlators.Corr.T_symmetry": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 51}, "pyerrors.correlators.Corr.deriv": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 46}, "pyerrors.correlators.Corr.second_deriv": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 44}, "pyerrors.correlators.Corr.m_eff": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 135}, "pyerrors.correlators.Corr.fit": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 110}, "pyerrors.correlators.Corr.plateau": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 92}, "pyerrors.correlators.Corr.set_prange": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 11}, "pyerrors.correlators.Corr.show": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 222}, "pyerrors.correlators.Corr.spaghetti_plot": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 42}, "pyerrors.correlators.Corr.dump": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 69}, "pyerrors.correlators.Corr.print": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.sqrt": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.log": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.exp": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.sin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.cos": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.tan": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.sinh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.cosh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.tanh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arcsin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arccos": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arctan": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arcsinh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arccosh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.arctanh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.real": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.imag": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.correlators.Corr.prune": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 325}, "pyerrors.covobs": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.covobs.Covobs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.covobs.Covobs.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 100}, "pyerrors.covobs.Covobs.errsq": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 12}, "pyerrors.covobs.Covobs.cov": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.covobs.Covobs.grad": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.dirac": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.dirac.epsilon_tensor": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 13}, "pyerrors.dirac.epsilon_tensor_rank4": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 13}, "pyerrors.dirac.Grid_gamma": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 9}, "pyerrors.fits": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.fits.Fit_result": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 3, "doc": 32}, "pyerrors.fits.Fit_result.__init__": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.fits.Fit_result.gamma_method": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "pyerrors.fits.least_squares": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 609}, "pyerrors.fits.total_least_squares": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 417}, "pyerrors.fits.fit_lin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 90}, "pyerrors.fits.qqplot": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 27}, "pyerrors.fits.residual_plot": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 17}, "pyerrors.fits.error_band": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 23}, "pyerrors.fits.ks_test": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 40}, "pyerrors.input": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 81}, "pyerrors.input.bdio": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.bdio.read_ADerrors": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 106}, "pyerrors.input.bdio.write_ADerrors": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 108}, "pyerrors.input.bdio.read_mesons": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 194}, "pyerrors.input.bdio.read_dSdm": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 191}, "pyerrors.input.dobs": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.dobs.create_pobs_string": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 164}, "pyerrors.input.dobs.write_pobs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 202}, "pyerrors.input.dobs.read_pobs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 131}, "pyerrors.input.dobs.import_dobs_string": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 185}, "pyerrors.input.dobs.read_dobs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 204}, "pyerrors.input.dobs.create_dobs_string": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 208}, "pyerrors.input.dobs.write_dobs": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 240}, "pyerrors.input.hadrons": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.hadrons.read_meson_hd5": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 110}, "pyerrors.input.hadrons.Npr_matrix": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 1065}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 2, "bases": 0, "doc": 3}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 30}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 81}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 81}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 94}, "pyerrors.input.json": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.json.create_json_string": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 116}, "pyerrors.input.json.dump_to_json": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 147}, "pyerrors.input.json.import_json_string": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 108}, "pyerrors.input.json.load_json": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 128}, "pyerrors.input.json.dump_dict_to_json": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 172}, "pyerrors.input.json.load_json_dict": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 12, "bases": 0, "doc": 135}, "pyerrors.input.misc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.misc.read_pbp": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 62}, "pyerrors.input.openQCD": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.openQCD.read_rwms": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 254}, "pyerrors.input.openQCD.extract_t0": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 13, "bases": 0, "doc": 457}, "pyerrors.input.openQCD.read_qtop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 346}, "pyerrors.input.openQCD.qtop_projection": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 49}, "pyerrors.input.openQCD.read_qtop_sector": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 340}, "pyerrors.input.sfcf": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.input.sfcf.read_sfcf": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 23, "bases": 0, "doc": 331}, "pyerrors.input.utils": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 6}, "pyerrors.input.utils.check_idl": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 47}, "pyerrors.linalg": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.linalg.matmul": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 54}, "pyerrors.linalg.jack_matmul": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 58}, "pyerrors.linalg.einsum": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 52}, "pyerrors.linalg.inv": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 10}, "pyerrors.linalg.cholesky": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 11}, "pyerrors.linalg.det": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 8}, "pyerrors.linalg.eigh": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 20}, "pyerrors.linalg.eig": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 17}, "pyerrors.linalg.pinv": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "pyerrors.linalg.svd": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 13}, "pyerrors.misc": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.misc.dump_object": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 57}, "pyerrors.misc.load_object": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 26}, "pyerrors.misc.pseudo_Obs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 89}, "pyerrors.misc.gen_correlated_data": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 109}, "pyerrors.mpm": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.mpm.matrix_pencil_method": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 147}, "pyerrors.obs": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 238}, "pyerrors.obs.Obs.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 62}, "pyerrors.obs.Obs.S_global": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.S_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tau_exp_global": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tau_exp_dict": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.N_sigma_global": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.N_sigma_dict": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 2, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.filter_eps": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 3, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.names": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.shape": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.r_values": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.deltas": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.N": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.is_merged": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.idl": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.ddvalue": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.reweighted": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tag": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.value": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.dvalue": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.cov_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.mc_names": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_content": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.covobs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.gamma_method": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 133}, "pyerrors.obs.Obs.details": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 34}, "pyerrors.obs.Obs.is_zero_within_error": {"qualname": 5, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 50}, "pyerrors.obs.Obs.is_zero": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 35}, "pyerrors.obs.Obs.plot_tauint": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 34}, "pyerrors.obs.Obs.plot_rho": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 35}, "pyerrors.obs.Obs.plot_rep_dist": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 14}, "pyerrors.obs.Obs.plot_history": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 35}, "pyerrors.obs.Obs.plot_piechart": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 23}, "pyerrors.obs.Obs.dump": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 9, "bases": 0, "doc": 89}, "pyerrors.obs.Obs.export_jackknife": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 101}, "pyerrors.obs.Obs.sqrt": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.log": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.exp": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.sin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.cos": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tan": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arcsin": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arccos": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arctan": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.sinh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.cosh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tanh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arcsinh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arccosh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.arctanh": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.N_sigma": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.S": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_ddvalue": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_drho": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_dtauint": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_dvalue": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_n_dtauint": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_n_tauint": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_rho": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_tauint": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.e_windowsize": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.Obs.tau_exp": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.CObs": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "pyerrors.obs.CObs.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 3}, "pyerrors.obs.CObs.tag": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.CObs.real": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.CObs.imag": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.obs.CObs.gamma_method": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 14}, "pyerrors.obs.CObs.is_zero": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 15}, "pyerrors.obs.CObs.conjugate": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 3, "bases": 0, "doc": 3}, "pyerrors.obs.derived_observable": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 184}, "pyerrors.obs.reweight": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 97}, "pyerrors.obs.correlate": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 75}, "pyerrors.obs.covariance": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 299}, "pyerrors.obs.import_jackknife": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 6, "bases": 0, "doc": 61}, "pyerrors.obs.merge_obs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 5, "bases": 0, "doc": 56}, "pyerrors.obs.cov_Obs": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 7, "bases": 0, "doc": 90}, "pyerrors.roots": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "pyerrors.roots.find_root": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 8, "bases": 0, "doc": 117}, "pyerrors.version": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}}, "length": 212, "save": true}, "index": {"qualname": {"root": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 6, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 47, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2, "d": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.obs.Obs.cos": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.obs.Obs.cosh": {"tf": 1}}, "df": 2}}, "v": {"docs": {"pyerrors.covobs.Covobs.cov": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.covobs.Covobs": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.covobs.Covobs.cov": {"tf": 1}, "pyerrors.covobs.Covobs.grad": {"tf": 1}, "pyerrors.obs.Obs.covobs": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.e_content": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.CObs.conjugate": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.conjugate": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.linalg.cholesky": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 6}}, "v": {"docs": {"pyerrors.linalg.inv": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.idl": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pyerrors.obs.Obs.is_merged": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 4}}, "r": {"docs": {"pyerrors.obs.Obs.r_values": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.obs.Obs.reweighted": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.reverse": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 14}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.residual_plot": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.roll": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"4": {"docs": {"pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "w": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}}, "df": 2}}}, "g": {"5": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.covobs.Covobs.grad": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.merge_obs": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.obs.Obs.is_merged": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 5}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {"pyerrors.obs.Obs.mc_names": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.print": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.plottable": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.linalg.pinv": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.S": {"tf": 1}}, "df": 3, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}}, "df": 3}}, "y": {"docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.shape": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.obs.Obs.sqrt": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.obs.Obs.sin": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.obs.Obs.sinh": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.linalg.svd": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.obs.Obs.arcsin": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.obs.Obs.arcsinh": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.obs.Obs.arccos": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.obs.Obs.arccosh": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.obs.Obs.arctan": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.obs.Obs.arctanh": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {"pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.e_content": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_drho": {"tf": 1}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.linalg.eig": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"pyerrors.linalg.eigh": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.exp": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {"pyerrors.covobs.Covobs.errsq": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.error_band": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}}, "df": 1}}}}}, "d": {"5": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1}}}}}}}, "t": {"0": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.obs.Obs.tan": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.obs.Obs.tanh": {"tf": 1}}, "df": 2}}, "u": {"docs": {"pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"pyerrors.obs.Obs.tag": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"pyerrors.linalg.det": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.details": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.deltas": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 5}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.e_drho": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}}, "df": 5}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.obs.Obs.log": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.fits.fit_lin": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.e_windowsize": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {"pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.N": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.names": {"tf": 1}, "pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.Obs.mc_names": {"tf": 1}}, "df": 4}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.filter_eps": {"tf": 1}, "pyerrors.obs.Obs.names": {"tf": 1}, "pyerrors.obs.Obs.shape": {"tf": 1}, "pyerrors.obs.Obs.r_values": {"tf": 1}, "pyerrors.obs.Obs.deltas": {"tf": 1}, "pyerrors.obs.Obs.N": {"tf": 1}, "pyerrors.obs.Obs.is_merged": {"tf": 1}, "pyerrors.obs.Obs.idl": {"tf": 1}, "pyerrors.obs.Obs.ddvalue": {"tf": 1}, "pyerrors.obs.Obs.reweighted": {"tf": 1}, "pyerrors.obs.Obs.tag": {"tf": 1}, "pyerrors.obs.Obs.value": {"tf": 1}, "pyerrors.obs.Obs.dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.Obs.mc_names": {"tf": 1}, "pyerrors.obs.Obs.e_content": {"tf": 1}, "pyerrors.obs.Obs.covobs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.Obs.sqrt": {"tf": 1}, "pyerrors.obs.Obs.log": {"tf": 1}, "pyerrors.obs.Obs.exp": {"tf": 1}, "pyerrors.obs.Obs.sin": {"tf": 1}, "pyerrors.obs.Obs.cos": {"tf": 1}, "pyerrors.obs.Obs.tan": {"tf": 1}, "pyerrors.obs.Obs.arcsin": {"tf": 1}, "pyerrors.obs.Obs.arccos": {"tf": 1}, "pyerrors.obs.Obs.arctan": {"tf": 1}, "pyerrors.obs.Obs.sinh": {"tf": 1}, "pyerrors.obs.Obs.cosh": {"tf": 1}, "pyerrors.obs.Obs.tanh": {"tf": 1}, "pyerrors.obs.Obs.arcsinh": {"tf": 1}, "pyerrors.obs.Obs.arccosh": {"tf": 1}, "pyerrors.obs.Obs.arctanh": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}, "pyerrors.obs.Obs.S": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_drho": {"tf": 1}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 67, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.value": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs.r_values": {"tf": 1}}, "df": 1}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 3}}}}}}, "fullname": {"root": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs": {"tf": 1}, "pyerrors.covobs.Covobs": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.covobs.Covobs.cov": {"tf": 1}, "pyerrors.covobs.Covobs.grad": {"tf": 1}, "pyerrors.dirac": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.filter_eps": {"tf": 1}, "pyerrors.obs.Obs.names": {"tf": 1}, "pyerrors.obs.Obs.shape": {"tf": 1}, "pyerrors.obs.Obs.r_values": {"tf": 1}, "pyerrors.obs.Obs.deltas": {"tf": 1}, "pyerrors.obs.Obs.N": {"tf": 1}, "pyerrors.obs.Obs.is_merged": {"tf": 1}, "pyerrors.obs.Obs.idl": {"tf": 1}, "pyerrors.obs.Obs.ddvalue": {"tf": 1}, "pyerrors.obs.Obs.reweighted": {"tf": 1}, "pyerrors.obs.Obs.tag": {"tf": 1}, "pyerrors.obs.Obs.value": {"tf": 1}, "pyerrors.obs.Obs.dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.Obs.mc_names": {"tf": 1}, "pyerrors.obs.Obs.e_content": {"tf": 1}, "pyerrors.obs.Obs.covobs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.Obs.sqrt": {"tf": 1}, "pyerrors.obs.Obs.log": {"tf": 1}, "pyerrors.obs.Obs.exp": {"tf": 1}, "pyerrors.obs.Obs.sin": {"tf": 1}, "pyerrors.obs.Obs.cos": {"tf": 1}, "pyerrors.obs.Obs.tan": {"tf": 1}, "pyerrors.obs.Obs.arcsin": {"tf": 1}, "pyerrors.obs.Obs.arccos": {"tf": 1}, "pyerrors.obs.Obs.arctan": {"tf": 1}, "pyerrors.obs.Obs.sinh": {"tf": 1}, "pyerrors.obs.Obs.cosh": {"tf": 1}, "pyerrors.obs.Obs.tanh": {"tf": 1}, "pyerrors.obs.Obs.arcsinh": {"tf": 1}, "pyerrors.obs.Obs.arccosh": {"tf": 1}, "pyerrors.obs.Obs.arctanh": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}, "pyerrors.obs.Obs.S": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_drho": {"tf": 1}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.conjugate": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}, "pyerrors.version": {"tf": 1}}, "df": 212}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.print": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.plottable": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}}, "df": 3}}}, "b": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.linalg.pinv": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 47, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 48}}}, "e": {"docs": {"pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2, "d": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.obs.Obs.cos": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.obs.Obs.cosh": {"tf": 1}}, "df": 2}}, "v": {"docs": {"pyerrors.covobs.Covobs.cov": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 3, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.covobs": {"tf": 1}, "pyerrors.covobs.Covobs": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.errsq": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.cov": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.grad": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.covobs": {"tf": 1}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.e_content": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.CObs.conjugate": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.conjugate": {"tf": 1}}, "df": 8}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}}, "df": 3}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.linalg.cholesky": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 6}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input": {"tf": 1}, "pyerrors.input.bdio": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 41}}}, "v": {"docs": {"pyerrors.linalg.inv": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.imag": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.idl": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pyerrors.obs.Obs.is_merged": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 4}}, "r": {"docs": {"pyerrors.obs.Obs.r_values": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.reweighted": {"tf": 1}, "pyerrors.obs.Obs.reweighted": {"tf": 1}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.reverse": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.real": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 14}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.residual_plot": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.roll": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.roots": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"4": {"docs": {"pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}, "w": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}}, "df": 2}}}, "g": {"5": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.covobs.Covobs.grad": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.merge_obs": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.obs.Obs.is_merged": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 5}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.misc": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.misc": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 7}}}, "p": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.mpm": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 2}}, "c": {"docs": {"pyerrors.obs.Obs.mc_names": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.S": {"tf": 1}}, "df": 3, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}}, "df": 3}}, "y": {"docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.shape": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.obs.Obs.sqrt": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.obs.Obs.sin": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.obs.Obs.sinh": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}}, "df": 5}}}}}, "f": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.input.sfcf": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.linalg.svd": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.obs.Obs.arcsin": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.obs.Obs.arcsinh": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.obs.Obs.arccos": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.obs.Obs.arccosh": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.obs.Obs.arctan": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.obs.Obs.arctanh": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {"pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.e_content": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_drho": {"tf": 1}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_rho": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1}}, "df": 11, "i": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.linalg.eig": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {"pyerrors.linalg.eigh": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}, "x": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.exp": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {"pyerrors.covobs.Covobs.errsq": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.error_band": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 8}}}}}}, "d": {"5": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1}}}}}}}, "t": {"0": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.obs.Obs.tan": {"tf": 1}}, "df": 2, "h": {"docs": {"pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.obs.Obs.tanh": {"tf": 1}}, "df": 2}}, "u": {"docs": {"pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}, "pyerrors.obs.Obs.e_tauint": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {"pyerrors.obs.Obs.tag": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}}, "o": {"docs": {"pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"pyerrors.linalg.det": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.details": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.deltas": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.dirac": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}}, "df": 5}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.ddvalue": {"tf": 1}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.dvalue": {"tf": 1}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.e_drho": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.e_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}}, "df": 5, "s": {"docs": {"pyerrors.fits": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}}, "df": 11}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.obs.Obs.log": {"tf": 1}}, "df": 2}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.fits.fit_lin": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.linalg": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}}, "df": 11}}}}}}, "q": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.bdio": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}}, "df": 1}}}}}}}}, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.e_windowsize": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {"pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1}, "pyerrors.obs.Obs.N": {"tf": 1}, "pyerrors.obs.Obs.N_sigma": {"tf": 1}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1}}, "df": 6, "p": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 3}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.names": {"tf": 1}, "pyerrors.obs.Obs.e_names": {"tf": 1}, "pyerrors.obs.Obs.cov_names": {"tf": 1}, "pyerrors.obs.Obs.mc_names": {"tf": 1}}, "df": 4}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.json": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}}, "df": 7}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 1, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 2}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 6}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.obs": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.S_global": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.S_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.filter_eps": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.names": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.shape": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.r_values": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.deltas": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_merged": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.idl": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.ddvalue": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.reweighted": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tag": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.value": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dvalue": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_names": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.cov_names": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.mc_names": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_content": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.covobs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.details": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rho": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sqrt": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.log": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.exp": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sin": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.cos": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tan": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arcsin": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arccos": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arctan": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sinh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.cosh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tanh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arcsinh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arccosh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arctanh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N_sigma": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.S": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_drho": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_rho": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_tauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tau_exp": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}, "pyerrors.obs.CObs.tag": {"tf": 1}, "pyerrors.obs.CObs.real": {"tf": 1}, "pyerrors.obs.CObs.imag": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.conjugate": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}}, "df": 81, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.utils": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 2}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.value": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs.r_values": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.version": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 3}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"0": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}}, "df": 3}, "1": {"0": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.obs.Obs.N_sigma_global": {"tf": 1}}, "df": 1, "e": {"docs": {"pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 1}}, "2": {"docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.obs.Obs.S_global": {"tf": 1}, "pyerrors.obs.Obs.S_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.filter_eps": {"tf": 1}}, "df": 7}}, "signature": {"root": {"0": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 16, "c": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "1": {"0": {"0": {"0": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 10, "e": {"docs": {"pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 1}}, "2": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 3}, "3": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}, "5": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 2}, "docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plottable": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.symmetric": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.roll": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reverse": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.thin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.correlate": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.set_prange": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.dump": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.print": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.sqrt": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.log": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.exp": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.sin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.cos": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.tan": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.sinh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.cosh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.tanh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arcsin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arccos": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arctan": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arccosh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.arctanh": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.errsq": {"tf": 1.4142135623730951}, "pyerrors.dirac.epsilon_tensor": {"tf": 1.4142135623730951}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1.4142135623730951}, "pyerrors.dirac.Grid_gamma": {"tf": 1.4142135623730951}, "pyerrors.fits.Fit_result.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1.4142135623730951}, "pyerrors.fits.residual_plot": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1.4142135623730951}, "pyerrors.fits.ks_test": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 2}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.input.utils.check_idl": {"tf": 1.4142135623730951}, "pyerrors.linalg.matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.jack_matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.einsum": {"tf": 1.4142135623730951}, "pyerrors.linalg.inv": {"tf": 1.4142135623730951}, "pyerrors.linalg.cholesky": {"tf": 1.4142135623730951}, "pyerrors.linalg.det": {"tf": 1.4142135623730951}, "pyerrors.linalg.eigh": {"tf": 1.4142135623730951}, "pyerrors.linalg.eig": {"tf": 1.4142135623730951}, "pyerrors.linalg.pinv": {"tf": 1.4142135623730951}, "pyerrors.linalg.svd": {"tf": 1.4142135623730951}, "pyerrors.misc.dump_object": {"tf": 1.4142135623730951}, "pyerrors.misc.load_object": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1.4142135623730951}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.details": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rho": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sqrt": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.log": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.exp": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sin": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.cos": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tan": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arcsin": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arccos": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arctan": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.sinh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.cosh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.tanh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arcsinh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arccosh": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.arctanh": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.__init__": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.is_zero": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.conjugate": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.merge_obs": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1.4142135623730951}}, "df": 141, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.sqrt": {"tf": 1}, "pyerrors.correlators.Corr.log": {"tf": 1}, "pyerrors.correlators.Corr.exp": {"tf": 1}, "pyerrors.correlators.Corr.sin": {"tf": 1}, "pyerrors.correlators.Corr.cos": {"tf": 1}, "pyerrors.correlators.Corr.tan": {"tf": 1}, "pyerrors.correlators.Corr.sinh": {"tf": 1}, "pyerrors.correlators.Corr.cosh": {"tf": 1}, "pyerrors.correlators.Corr.tanh": {"tf": 1}, "pyerrors.correlators.Corr.arcsin": {"tf": 1}, "pyerrors.correlators.Corr.arccos": {"tf": 1}, "pyerrors.correlators.Corr.arctan": {"tf": 1}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1}, "pyerrors.correlators.Corr.arccosh": {"tf": 1}, "pyerrors.correlators.Corr.arctanh": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.fits.Fit_result.__init__": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.Obs.sqrt": {"tf": 1}, "pyerrors.obs.Obs.log": {"tf": 1}, "pyerrors.obs.Obs.exp": {"tf": 1}, "pyerrors.obs.Obs.sin": {"tf": 1}, "pyerrors.obs.Obs.cos": {"tf": 1}, "pyerrors.obs.Obs.tan": {"tf": 1}, "pyerrors.obs.Obs.arcsin": {"tf": 1}, "pyerrors.obs.Obs.arccos": {"tf": 1}, "pyerrors.obs.Obs.arctan": {"tf": 1}, "pyerrors.obs.Obs.sinh": {"tf": 1}, "pyerrors.obs.Obs.cosh": {"tf": 1}, "pyerrors.obs.Obs.tanh": {"tf": 1}, "pyerrors.obs.Obs.arcsinh": {"tf": 1}, "pyerrors.obs.Obs.arccosh": {"tf": 1}, "pyerrors.obs.Obs.arctanh": {"tf": 1}, "pyerrors.obs.CObs.__init__": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.conjugate": {"tf": 1}}, "df": 78}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.json.import_json_string": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 3}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 3}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {"pyerrors.correlators.Corr.roll": {"tf": 1}}, "df": 1, "r": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 4}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 2}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 3}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 3}}}}}, "d": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4, "l": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 15}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 3}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 29}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 11, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 31}}}}}}, "v": {"1": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 3}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}, "l": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 4}}, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.print": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}}, "df": 2}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}, "l": {"docs": {"pyerrors.obs.CObs.__init__": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 15}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 7, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 8}}}}}, "j": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 1}}}}}, "t": {"0": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 13}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {"pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}}, "df": 2, "f": {"docs": {"pyerrors.obs.merge_obs": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.misc.dump_object": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 9, "l": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 6}}}}}, "l": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}}, "df": 3}}}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}, "f": {"2": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 3}}}}, "z": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 10}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2}}}, "v": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "v": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}}, "df": 6, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}, "i": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 1}}, "df": 1}, "6": {"9": {"7": {"9": {"5": {"8": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"2": {"8": {"9": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"1": {"8": {"0": {"6": {"4": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 3}}, "df": 1}, "2": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"4": {"4": {"5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"5": {"8": {"5": {"6": {"5": {"0": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"4": {"8": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"5": {"6": {"0": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"9": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 6.164414002968976}, "pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 2.6457513110645907}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 2}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}}, "df": 23, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"0": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "c": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}, "d": {"docs": {"pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 1}}, "1": {"0": {"0": {"0": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 3}, "3": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"7": {"2": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1}}, "df": 1}, "1": {"9": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"4": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "4": {"3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"0": {"0": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "6": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"6": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "9": {"0": {"6": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "8": {"8": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "9": {"0": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"pyerrors": {"tf": 6.164414002968976}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 19, "}": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "+": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "d": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 2}, "*": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "/": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 1}}}, "2": {"0": {"0": {"4": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "7": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "1": {"1": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "9": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"1": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 2}}, "df": 1}, "1": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "3": {"8": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}, "5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "7": {"2": {"1": {"8": {"6": {"6": {"7": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"9": {"7": {"7": {"6": {"2": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 2}}, "df": 1}, "9": {"9": {"0": {"9": {"7": {"0": {"3": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"pyerrors": {"tf": 5}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 12, "x": {"2": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "d": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 5}, "*": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "3": {"0": {"6": {"7": {"5": {"2": {"0": {"1": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "1": {"4": {"9": {"8": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"2": {"7": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}, "4": {"9": {"7": {"6": {"8": {"0": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"2": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "6": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "7": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "8": {"3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "9": {"docs": {"pyerrors": {"tf": 7.745966692414834}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}}, "df": 6, "a": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "4": {"0": {"3": {"2": {"0": {"9": {"8": {"3": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}, "9": {"5": {"9": {"1": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 6, "x": {"4": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "5": {"0": {"0": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}, "1": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "1": {"5": {"6": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "9": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "2": {"8": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "3": {"8": {"0": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"8": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"7": {"3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "4": {"6": {"5": {"9": {"8": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "8": {"3": {"4": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 5, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "6": {"4": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "5": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "9": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"8": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}}, "df": 2}, "7": {"0": {"0": {"0": {"0": {"0": {"0": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1}}, "df": 1}, "1": {"4": {"2": {"2": {"9": {"0": {"0": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "+": {"0": {"0": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"4": {"6": {"6": {"5": {"8": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1}}, "df": 1}, "4": {"5": {"7": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"3": {"1": {"0": {"1": {"0": {"2": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"0": {"7": {"7": {"5": {"2": {"4": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"7": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "8": {"0": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "1": {"4": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "2": {"4": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "4": {"5": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 5}, "9": {"1": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "3": {"3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 1}}, "df": 1}, "4": {"7": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "5": {"9": {"3": {"0": {"3": {"5": {"7": {"8": {"5": {"1": {"6": {"0": {"9": {"3": {"6": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "4": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "7": {"6": {"8": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"3": {"1": {"9": {"8": {"8": {"1": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"1": {"0": {"0": {"7": {"1": {"2": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "5": {"8": {"3": {"6": {"5": {"4": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 3}, "docs": {"pyerrors": {"tf": 62.37788069500277}, "pyerrors.correlators": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr": {"tf": 3}, "pyerrors.correlators.Corr.__init__": {"tf": 5.0990195135927845}, "pyerrors.correlators.Corr.reweighted": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.item": {"tf": 4.58257569495584}, "pyerrors.correlators.Corr.plottable": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.symmetric": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 5.477225575051661}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 5.477225575051661}, "pyerrors.correlators.Corr.Hankel": {"tf": 4.58257569495584}, "pyerrors.correlators.Corr.roll": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.reverse": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.thin": {"tf": 4.242640687119285}, "pyerrors.correlators.Corr.correlate": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.reweight": {"tf": 4.58257569495584}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 4.242640687119285}, "pyerrors.correlators.Corr.deriv": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.second_deriv": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.m_eff": {"tf": 5.830951894845301}, "pyerrors.correlators.Corr.fit": {"tf": 5.291502622129181}, "pyerrors.correlators.Corr.plateau": {"tf": 5}, "pyerrors.correlators.Corr.set_prange": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 7.937253933193772}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 3.872983346207417}, "pyerrors.correlators.Corr.dump": {"tf": 5.0990195135927845}, "pyerrors.correlators.Corr.print": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.sqrt": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.log": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.exp": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.sin": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.cos": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.tan": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.sinh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.cosh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.tanh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arcsin": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arccos": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arctan": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arcsinh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arccosh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.arctanh": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.real": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.imag": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 6.855654600401044}, "pyerrors.covobs": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.__init__": {"tf": 5.916079783099616}, "pyerrors.covobs.Covobs.errsq": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.cov": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.grad": {"tf": 1.7320508075688772}, "pyerrors.dirac": {"tf": 1.7320508075688772}, "pyerrors.dirac.epsilon_tensor": {"tf": 2}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 2}, "pyerrors.dirac.Grid_gamma": {"tf": 1.7320508075688772}, "pyerrors.fits": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result": {"tf": 3.872983346207417}, "pyerrors.fits.Fit_result.__init__": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 15.748015748023622}, "pyerrors.fits.total_least_squares": {"tf": 14.66287829861518}, "pyerrors.fits.fit_lin": {"tf": 4.795831523312719}, "pyerrors.fits.qqplot": {"tf": 1.7320508075688772}, "pyerrors.fits.residual_plot": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1.7320508075688772}, "pyerrors.fits.ks_test": {"tf": 3.872983346207417}, "pyerrors.input": {"tf": 4.69041575982343}, "pyerrors.input.bdio": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_ADerrors": {"tf": 5.196152422706632}, "pyerrors.input.bdio.write_ADerrors": {"tf": 5.196152422706632}, "pyerrors.input.bdio.read_mesons": {"tf": 7.416198487095663}, "pyerrors.input.bdio.read_dSdm": {"tf": 7.416198487095663}, "pyerrors.input.dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_pobs_string": {"tf": 7}, "pyerrors.input.dobs.write_pobs": {"tf": 7.810249675906654}, "pyerrors.input.dobs.read_pobs": {"tf": 5.744562646538029}, "pyerrors.input.dobs.import_dobs_string": {"tf": 6.244997998398398}, "pyerrors.input.dobs.read_dobs": {"tf": 6.782329983125268}, "pyerrors.input.dobs.create_dobs_string": {"tf": 7.3484692283495345}, "pyerrors.input.dobs.write_dobs": {"tf": 8.18535277187245}, "pyerrors.input.hadrons": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 6}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 20.808652046684813}, "pyerrors.input.hadrons.Npr_matrix.__init__": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 5.385164807134504}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 5.385164807134504}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 5.916079783099616}, "pyerrors.input.json": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 5.0990195135927845}, "pyerrors.input.json.dump_to_json": {"tf": 6.164414002968976}, "pyerrors.input.json.import_json_string": {"tf": 5.477225575051661}, "pyerrors.input.json.load_json": {"tf": 6}, "pyerrors.input.json.dump_dict_to_json": {"tf": 6.6332495807108}, "pyerrors.input.json.load_json_dict": {"tf": 6.4031242374328485}, "pyerrors.input.misc": {"tf": 1.7320508075688772}, "pyerrors.input.misc.read_pbp": {"tf": 4.242640687119285}, "pyerrors.input.openQCD": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 7.874007874011811}, "pyerrors.input.openQCD.extract_t0": {"tf": 9.899494936611665}, "pyerrors.input.openQCD.read_qtop": {"tf": 9.433981132056603}, "pyerrors.input.openQCD.qtop_projection": {"tf": 4.58257569495584}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 9.219544457292887}, "pyerrors.input.sfcf": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 8.888194417315589}, "pyerrors.input.utils": {"tf": 1.4142135623730951}, "pyerrors.input.utils.check_idl": {"tf": 4.242640687119285}, "pyerrors.linalg": {"tf": 1.7320508075688772}, "pyerrors.linalg.matmul": {"tf": 4.58257569495584}, "pyerrors.linalg.jack_matmul": {"tf": 4.47213595499958}, "pyerrors.linalg.einsum": {"tf": 4.47213595499958}, "pyerrors.linalg.inv": {"tf": 1.7320508075688772}, "pyerrors.linalg.cholesky": {"tf": 1.7320508075688772}, "pyerrors.linalg.det": {"tf": 1.7320508075688772}, "pyerrors.linalg.eigh": {"tf": 1.7320508075688772}, "pyerrors.linalg.eig": {"tf": 1.7320508075688772}, "pyerrors.linalg.pinv": {"tf": 1.7320508075688772}, "pyerrors.linalg.svd": {"tf": 1.7320508075688772}, "pyerrors.misc": {"tf": 1.7320508075688772}, "pyerrors.misc.dump_object": {"tf": 5}, "pyerrors.misc.load_object": {"tf": 3.7416573867739413}, "pyerrors.misc.pseudo_Obs": {"tf": 5.656854249492381}, "pyerrors.misc.gen_correlated_data": {"tf": 6.244997998398398}, "pyerrors.mpm": {"tf": 1.7320508075688772}, "pyerrors.mpm.matrix_pencil_method": {"tf": 5.385164807134504}, "pyerrors.obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 6.928203230275509}, "pyerrors.obs.Obs.__init__": {"tf": 4.898979485566356}, "pyerrors.obs.Obs.S_global": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.S_dict": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tau_exp_global": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tau_exp_dict": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.N_sigma_global": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.N_sigma_dict": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.filter_eps": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.names": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.shape": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.r_values": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.deltas": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.N": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_merged": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.idl": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.ddvalue": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.reweighted": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tag": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.value": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.dvalue": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_names": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.cov_names": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.mc_names": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_content": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.covobs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 5.744562646538029}, "pyerrors.obs.Obs.details": {"tf": 3.872983346207417}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 4.47213595499958}, "pyerrors.obs.Obs.is_zero": {"tf": 3.872983346207417}, "pyerrors.obs.Obs.plot_tauint": {"tf": 3.872983346207417}, "pyerrors.obs.Obs.plot_rho": {"tf": 3.872983346207417}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.plot_history": {"tf": 3.7416573867739413}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.dump": {"tf": 5.744562646538029}, "pyerrors.obs.Obs.export_jackknife": {"tf": 3.7416573867739413}, "pyerrors.obs.Obs.sqrt": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.log": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.exp": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.sin": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.cos": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tan": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arcsin": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arccos": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arctan": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.sinh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.cosh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tanh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arcsinh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arccosh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.arctanh": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.N_sigma": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.S": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_ddvalue": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_drho": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_dtauint": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_dvalue": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_n_dtauint": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_n_tauint": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_rho": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_tauint": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.e_windowsize": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.tau_exp": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.__init__": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.tag": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.real": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.imag": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.is_zero": {"tf": 1.7320508075688772}, "pyerrors.obs.CObs.conjugate": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 6.4031242374328485}, "pyerrors.obs.reweight": {"tf": 5.196152422706632}, "pyerrors.obs.correlate": {"tf": 4.898979485566356}, "pyerrors.obs.covariance": {"tf": 6.4031242374328485}, "pyerrors.obs.import_jackknife": {"tf": 4.47213595499958}, "pyerrors.obs.merge_obs": {"tf": 4.123105625617661}, "pyerrors.obs.cov_Obs": {"tf": 5.385164807134504}, "pyerrors.roots": {"tf": 1.7320508075688772}, "pyerrors.roots.find_root": {"tf": 6.782329983125268}, "pyerrors.version": {"tf": 1.7320508075688772}}, "df": 212, "w": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 34}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 9}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 2}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 12}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 9}}}}}, "o": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 5.830951894845301}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 28, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}, "/": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 12}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 3, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 6}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 11}}}, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}, "f": {"2": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "i": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 7, "s": {"docs": {"pyerrors": {"tf": 8}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 2.8284271247461903}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2.8284271247461903}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 3.4641016151377544}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 3.3166247903554}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_pobs": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_dobs": {"tf": 2.449489742783178}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2.449489742783178}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.4641016151377544}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 2}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.extract_t0": {"tf": 3.605551275463989}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.449489742783178}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 2.8284271247461903}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 50}, "t": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 18, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}}, "df": 9, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "n": {"docs": {"pyerrors": {"tf": 8.12403840463596}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.3166247903554}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.23606797749979}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 37, "t": {"1": {"6": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.6457513110645907}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 30, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 6, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 10}, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 2}}, "df": 1}}, "v": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 4, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 3}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plottable": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils": {"tf": 1}}, "df": 13}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 9}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 8}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 2}, "pyerrors.input.dobs.import_dobs_string": {"tf": 2}, "pyerrors.input.dobs.read_dobs": {"tf": 2}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors.input": {"tf": 1}}, "df": 1}, "d": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 5}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}, "d": {"0": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}, "docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 6, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3}, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "r": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.reweight": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}}, "df": 10}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "f": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 2}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 2}, "pyerrors.input.dobs.read_dobs": {"tf": 2.449489742783178}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 2.23606797749979}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 2}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 3}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.8284271247461903}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.449489742783178}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}}, "df": 45}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}}}, "/": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}, "\\": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "j": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}, "^": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "|": {"docs": {}, "df": 0, "^": {"2": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}, "docs": {}, "df": 0}}}}, "}": {"docs": {}, "df": 0, "|": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}}, "df": 3, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 6.557438524302}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input": {"tf": 2}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 4}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 5, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.7320508075688772}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 6, "s": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1.4142135623730951}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 2}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 83}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 2}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2}, "pyerrors.input.bdio.read_mesons": {"tf": 2}, "pyerrors.input.bdio.read_dSdm": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.misc.dump_object": {"tf": 1.4142135623730951}, "pyerrors.misc.load_object": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}}, "df": 18}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 3.872983346207417}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 3}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 9, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}}, "df": 2}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors.input": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 3.4641016151377544}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 6}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 3}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"pyerrors": {"tf": 5.477225575051661}, "pyerrors.correlators.Corr": {"tf": 1}}, "df": 2, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 4}}, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 11, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.plottable": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 2}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "^": {"0": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "n": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1.4142135623730951}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 6, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 5}, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}}, "df": 3}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"pyerrors": {"tf": 8.306623862918075}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 3.605551275463989}, "pyerrors.fits.total_least_squares": {"tf": 3.3166247903554}, "pyerrors.fits.fit_lin": {"tf": 1.7320508075688772}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 2}, "pyerrors.input.bdio.read_dSdm": {"tf": 2}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_pobs": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 2}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2.449489742783178}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3}, "pyerrors.input.json.create_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_to_json": {"tf": 2.23606797749979}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2.23606797749979}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 2.449489742783178}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 65, "n": {"docs": {"pyerrors": {"tf": 5.0990195135927845}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.605551275463989}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 29, "d": {"docs": {"pyerrors": {"tf": 6.928203230275509}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.input": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 56}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 7}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1.4142135623730951}}, "df": 5}}, "r": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, ":": {"1": {"0": {"0": {"9": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"5": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "8": {"0": {"9": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "2": {"0": {"0": {"4": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}}}}}}, "e": {"docs": {"pyerrors": {"tf": 5.477225575051661}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 41}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 4.47213595499958}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 6.082762530298219}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 9}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 4}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 3, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 9}}}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}, "pyerrors.roots.find_root": {"tf": 1.4142135623730951}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 2}}, "df": 6}}}}}}}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 7}}}}}}}}, "s": {"docs": {"pyerrors": {"tf": 6}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 20, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 7}, "s": {"docs": {"pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1, "^": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "l": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 29, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 6}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 8, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 5}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 18, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 3}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 12}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 6}}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "i": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "d": {"docs": {"pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 2}}}, "y": {"docs": {"pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}}, "df": 4}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "d": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 6}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}}, "df": 3}}}}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 2}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 6.782329983125268}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 2}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.8284271247461903}, "pyerrors.fits.total_least_squares": {"tf": 2}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1.4142135623730951}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.6457513110645907}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.449489742783178}, "pyerrors.input.utils": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1.7320508075688772}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 2}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 3.872983346207417}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 2}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 57, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 7, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.7320508075688772}}, "df": 15, "s": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 2}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 4.358898943540674}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.7320508075688772}}, "df": 30}, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "{": {"1": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "{": {"2": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "}": {"docs": {}, "df": 0, "+": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "docs": {}, "df": 0}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.6457513110645907}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1.7320508075688772}, "pyerrors.fits.qqplot": {"tf": 1.4142135623730951}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}}, "df": 14, "s": {"docs": {"pyerrors": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 17}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 8}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 4.358898943540674}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 2}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 2}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 2}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_to_json": {"tf": 2.23606797749979}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 2}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2.23606797749979}, "pyerrors.input.json.load_json_dict": {"tf": 2}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.misc.dump_object": {"tf": 2}, "pyerrors.misc.load_object": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 2.23606797749979}}, "df": 34, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.6457513110645907}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 10, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 10, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}}, "df": 3}}}}}, "^": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 2}, "pyerrors.roots.find_root": {"tf": 1.7320508075688772}}, "df": 6, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.fit": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 2}}, "df": 11, "s": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 7}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 11, "y": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1.4142135623730951}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 11, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}}, "w": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 2}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}}, "df": 2}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 19}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 8}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 12, "r": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 5.830951894845301}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 9, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 2, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs": {"tf": 1.7320508075688772}}, "df": 1}}}}, "p": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 4, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 10, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 10}}, "s": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 2.8284271247461903}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.CObs.gamma_method": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 2}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.linalg.eigh": {"tf": 1}}, "df": 3}}}}}}}}}, "h": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"1": {"docs": {"pyerrors": {"tf": 3.4641016151377544}}, "df": 1, "|": {"docs": {}, "df": 0, "r": {"0": {"1": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "2": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 5.5677643628300215}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2.449489742783178}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 27, "s": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 7, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 10}}}, "y": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}}, "df": 7}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 2}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 10, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors": {"tf": 2}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}}, "df": 2}}}, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 14}}, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.6457513110645907}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}, "q": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}}}, "g": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 2}, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 5}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 3}, "pyerrors.correlators.Corr.m_eff": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.prune": {"tf": 2}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}}, "df": 7, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 2}, "s": {"docs": {"pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}}, "df": 4}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.CObs": {"tf": 1}}, "df": 5}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 3}, "s": {"docs": {"pyerrors.fits.residual_plot": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.merge_obs": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}, "/": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "/": {"1": {"6": {"0": {"3": {"7": {"5": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": null}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 24}}}, "s": {"docs": {"pyerrors": {"tf": 5}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 11}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 5, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}}, "df": 4, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.correlators.Corr.reweight": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.utils.check_idl": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}}, "df": 16}}}}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 7}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.bdio.write_ADerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 6.6332495807108}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 18, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.correlate": {"tf": 2}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 23, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.prune": {"tf": 2.23606797749979}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 2.449489742783178}}, "df": 6, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 5}}}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}}, "df": 6}}, "v": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.covobs.Covobs.__init__": {"tf": 2}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}}, "df": 4, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 4}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 2.23606797749979}, "pyerrors.obs.cov_Obs": {"tf": 2}}, "df": 6}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}}, "df": 3}}, "e": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {"pyerrors": {"tf": 5.656854249492381}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}}, "df": 26, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 7}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.CObs": {"tf": 1}}, "df": 5}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 3, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 4}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}, "p": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 3}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 7, "f": {"docs": {"pyerrors": {"tf": 10.295630140987}, "pyerrors.correlators.Corr": {"tf": 2}, "pyerrors.correlators.Corr.__init__": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 2}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.dump": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 2.6457513110645907}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.errsq": {"tf": 1.4142135623730951}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 3}, "pyerrors.fits.total_least_squares": {"tf": 3}, "pyerrors.fits.fit_lin": {"tf": 2.23606797749979}, "pyerrors.fits.qqplot": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2.23606797749979}, "pyerrors.input.dobs.write_pobs": {"tf": 2.449489742783178}, "pyerrors.input.dobs.read_pobs": {"tf": 2}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 2}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2.8284271247461903}, "pyerrors.input.dobs.write_dobs": {"tf": 2.8284271247461903}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 5.0990195135927845}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 2.6457513110645907}, "pyerrors.input.json.dump_to_json": {"tf": 2.6457513110645907}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2.8284271247461903}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.extract_t0": {"tf": 3.1622776601683795}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.8284271247461903}, "pyerrors.input.sfcf.read_sfcf": {"tf": 3.4641016151377544}, "pyerrors.input.utils.check_idl": {"tf": 1.7320508075688772}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1.4142135623730951}, "pyerrors.linalg.eig": {"tf": 1.4142135623730951}, "pyerrors.linalg.pinv": {"tf": 1.4142135623730951}, "pyerrors.linalg.svd": {"tf": 1.4142135623730951}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 2}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 2.6457513110645907}, "pyerrors.obs.Obs": {"tf": 2.8284271247461903}, "pyerrors.obs.Obs.__init__": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.export_jackknife": {"tf": 2}, "pyerrors.obs.derived_observable": {"tf": 2.449489742783178}, "pyerrors.obs.reweight": {"tf": 2}, "pyerrors.obs.covariance": {"tf": 3.1622776601683795}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1.7320508075688772}, "pyerrors.obs.cov_Obs": {"tf": 1.7320508075688772}, "pyerrors.roots.find_root": {"tf": 1.4142135623730951}}, "df": 89, "f": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"pyerrors": {"tf": 5.291502622129181}, "pyerrors.correlators.Corr.plottable": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 29, "e": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 18, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}}, "df": 25}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.linalg.matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.jack_matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.einsum": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 17}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {}, "df": 0, "s": {"1": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 3}, "2": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 3}, "3": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 3}, "docs": {"pyerrors": {"tf": 9.591663046625438}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.fit_lin": {"tf": 2.23606797749979}, "pyerrors.input": {"tf": 2.23606797749979}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2}, "pyerrors.input.dobs.write_pobs": {"tf": 2}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.json.create_json_string": {"tf": 2}, "pyerrors.input.json.dump_to_json": {"tf": 2}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 2.23606797749979}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}, "pyerrors.obs.correlate": {"tf": 2}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 2}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 2.23606797749979}}, "df": 55, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 3.4641016151377544}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 16, "s": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 2}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 13}}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}, "[": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}}, "df": 2}}, "l": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}, "j": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.8284271247461903}, "pyerrors.misc.dump_object": {"tf": 1.7320508075688772}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 20, "s": {"docs": {"pyerrors": {"tf": 3.605551275463989}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "r": {"docs": {"pyerrors": {"tf": 4.123105625617661}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}, "pyerrors.obs.cov_Obs": {"tf": 2}}, "df": 42, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.6457513110645907}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 4, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors.obs.Obs": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "d": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 22, "s": {"docs": {"pyerrors.correlators.Corr.plottable": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}}, "df": 2}}, "m": {"docs": {"pyerrors": {"tf": 3.872983346207417}, "pyerrors.correlators.Corr.m_eff": {"tf": 2.449489742783178}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}}, "df": 3, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors": {"tf": 4.795831523312719}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 2.8284271247461903}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 2.6457513110645907}, "pyerrors.obs.cov_Obs": {"tf": 1.7320508075688772}}, "df": 19}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}}, "df": 7}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 3}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 5}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 3}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "y": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 8}, "j": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}}, "df": 3}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 5}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 4, "a": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 4.69041575982343}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 16, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 2}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}}}, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 2.8284271247461903}}, "df": 1}}}}}, "y": {"docs": {"pyerrors": {"tf": 7.681145747868608}}, "df": 1}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 3}, "y": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.matmul": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.roots.find_root": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1}, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}, "c": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "s": {"1": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 2.23606797749979}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3, "a": {"docs": {"pyerrors": {"tf": 4.795831523312719}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.1622776601683795}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 2.449489742783178}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}}, "df": 28, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 2.449489742783178}}, "df": 12, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}, "y": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 2}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2}}, "df": 5}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}}, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 2}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3}, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 8}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}}, "df": 5}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.details": {"tf": 1}}, "df": 2}}, "s": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 7}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "s": {"docs": {"pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 4}}}, "e": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"pyerrors": {"tf": 2}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 15}, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 2}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 2}, "pyerrors.input.bdio.read_dSdm": {"tf": 2}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 2}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 30, "s": {"docs": {"pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 7}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 5}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors.correlators.Corr.dump": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyerrors.correlators.Corr.roll": {"tf": 1.4142135623730951}}, "df": 1, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 3.1622776601683795}}, "df": 1}}}, "r": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 3}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.misc.pseudo_Obs": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}}, "df": 1}}}}, "b": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 8}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 2}}}, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "{": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}}, "df": 1, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyerrors": {"tf": 6.082762530298219}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.6457513110645907}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 2.23606797749979}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.23606797749979}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2}, "pyerrors.input.dobs.write_pobs": {"tf": 2}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.6457513110645907}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 2}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 53, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.23606797749979}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 10}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}, "a": {"docs": {"pyerrors.fits.error_band": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 2}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 21, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}}, "df": 4}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 3.1622776601683795}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.6457513110645907}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 30}, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.read_mesons": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.6457513110645907}}, "df": 4}}}, "i": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "b": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}, "t": {"0": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 5, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.GEVP": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.prune": {"tf": 4.47213595499958}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 8, "h": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1, "e": {"docs": {"pyerrors": {"tf": 16.1245154965971}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 3}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.projected": {"tf": 2}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 2}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 3.4641016151377544}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.thin": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.correlate": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.reweight": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 2}, "pyerrors.correlators.Corr.deriv": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.m_eff": {"tf": 3}, "pyerrors.correlators.Corr.fit": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.plateau": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.set_prange": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 3.3166247903554}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.dump": {"tf": 2}, "pyerrors.correlators.Corr.prune": {"tf": 4.795831523312719}, "pyerrors.covobs.Covobs.__init__": {"tf": 2.23606797749979}, "pyerrors.covobs.Covobs.errsq": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 4.47213595499958}, "pyerrors.fits.total_least_squares": {"tf": 3.4641016151377544}, "pyerrors.fits.fit_lin": {"tf": 2.449489742783178}, "pyerrors.fits.qqplot": {"tf": 1.7320508075688772}, "pyerrors.fits.residual_plot": {"tf": 1.7320508075688772}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 2}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2}, "pyerrors.input.bdio.read_mesons": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.6457513110645907}, "pyerrors.input.dobs.create_pobs_string": {"tf": 3.4641016151377544}, "pyerrors.input.dobs.write_pobs": {"tf": 3.872983346207417}, "pyerrors.input.dobs.read_pobs": {"tf": 3}, "pyerrors.input.dobs.import_dobs_string": {"tf": 3.605551275463989}, "pyerrors.input.dobs.read_dobs": {"tf": 3.605551275463989}, "pyerrors.input.dobs.create_dobs_string": {"tf": 4.47213595499958}, "pyerrors.input.dobs.write_dobs": {"tf": 4.58257569495584}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 2.6457513110645907}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 5.830951894845301}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 2}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 2}, "pyerrors.input.json.create_json_string": {"tf": 2.8284271247461903}, "pyerrors.input.json.dump_to_json": {"tf": 3}, "pyerrors.input.json.import_json_string": {"tf": 2.6457513110645907}, "pyerrors.input.json.load_json": {"tf": 2.6457513110645907}, "pyerrors.input.json.dump_dict_to_json": {"tf": 3.3166247903554}, "pyerrors.input.json.load_json_dict": {"tf": 2.6457513110645907}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 3}, "pyerrors.input.openQCD.extract_t0": {"tf": 5.385164807134504}, "pyerrors.input.openQCD.read_qtop": {"tf": 4.47213595499958}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 4.242640687119285}, "pyerrors.input.sfcf.read_sfcf": {"tf": 4.242640687119285}, "pyerrors.input.utils": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.linalg.pinv": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1.7320508075688772}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 2.23606797749979}, "pyerrors.misc.gen_correlated_data": {"tf": 1.7320508075688772}, "pyerrors.mpm.matrix_pencil_method": {"tf": 2.23606797749979}, "pyerrors.obs.Obs": {"tf": 3.1622776601683795}, "pyerrors.obs.Obs.__init__": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 3.4641016151377544}, "pyerrors.obs.Obs.details": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.dump": {"tf": 2}, "pyerrors.obs.Obs.export_jackknife": {"tf": 3.3166247903554}, "pyerrors.obs.CObs.gamma_method": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 2.8284271247461903}, "pyerrors.obs.reweight": {"tf": 2.23606797749979}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 4.898979485566356}, "pyerrors.obs.import_jackknife": {"tf": 2}, "pyerrors.obs.merge_obs": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 2}, "pyerrors.roots.find_root": {"tf": 2.449489742783178}}, "df": 104, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 6}}, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 2}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 6.244997998398398}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2}, "pyerrors.input.dobs.write_pobs": {"tf": 2}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 29}, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 4}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 26}, "n": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.23606797749979}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_history": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 27}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {"pyerrors": {"tf": 8.660254037844387}, "pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.plateau": {"tf": 2}, "pyerrors.correlators.Corr.show": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 3.1622776601683795}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.7320508075688772}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.total_least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.input.bdio.read_ADerrors": {"tf": 2.23606797749979}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.read_mesons": {"tf": 2.6457513110645907}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.6457513110645907}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2.23606797749979}, "pyerrors.input.dobs.write_pobs": {"tf": 2.23606797749979}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.7416573867739413}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 2}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.6457513110645907}, "pyerrors.input.openQCD.extract_t0": {"tf": 3.4641016151377544}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.6457513110645907}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 3.4641016151377544}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.8284271247461903}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1.7320508075688772}, "pyerrors.mpm.matrix_pencil_method": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 2.23606797749979}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 2.8284271247461903}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1.7320508075688772}}, "df": 78, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.obs.Obs.is_zero": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.23606797749979}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 18}}, "a": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 1, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}}, "df": 3}, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "g": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 7}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reverse": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 11, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 10, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}}, "df": 3}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.8284271247461903}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 6, "s": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 3}, "+": {"1": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.7320508075688772}}, "df": 2}, "2": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1.7320508075688772}}, "df": 1}}, "/": {"2": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 2}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "j": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}}, "df": 4}}}}, "^": {"2": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "g": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 2}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 14, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"5": {"docs": {"pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 4.242640687119285}, "pyerrors.correlators.Corr.gamma_method": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.Fit_result.gamma_method": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 11}}}, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {"pyerrors": {"tf": 8.306623862918075}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.8284271247461903}}, "df": 2}, "e": {"docs": {}, "df": 0, "q": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 5, "d": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}}, "df": 3}, "s": {"docs": {"pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.misc.gen_correlated_data": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 2.23606797749979}}, "df": 4}}, "t": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 25}, "s": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.dirac.Grid_gamma": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "z": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}}, "df": 13, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 7}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}, "^": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}, "l": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2, "/": {"0": {"3": {"0": {"6": {"0": {"1": {"7": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"4": {"1": {"2": {"0": {"8": {"7": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1, "x": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "r": {"docs": {"pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 9}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.linalg.jack_matmul": {"tf": 1}}, "df": 2, "r": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 5}}, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.__init__": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.GEVP": {"tf": 2}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 2.449489742783178}, "pyerrors.covobs.Covobs.__init__": {"tf": 1.4142135623730951}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 2.6457513110645907}, "pyerrors.fits.total_least_squares": {"tf": 2.449489742783178}, "pyerrors.fits.fit_lin": {"tf": 2.23606797749979}, "pyerrors.fits.ks_test": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2.23606797749979}, "pyerrors.input.dobs.write_pobs": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2.23606797749979}, "pyerrors.input.dobs.write_dobs": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 2}, "pyerrors.input.json.dump_to_json": {"tf": 2}, "pyerrors.input.json.import_json_string": {"tf": 2}, "pyerrors.input.json.load_json": {"tf": 2}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.read_rwms": {"tf": 3.1622776601683795}, "pyerrors.input.openQCD.extract_t0": {"tf": 3}, "pyerrors.input.openQCD.read_qtop": {"tf": 2.449489742783178}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.6457513110645907}, "pyerrors.input.utils.check_idl": {"tf": 2}, "pyerrors.misc.gen_correlated_data": {"tf": 2}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.__init__": {"tf": 2.449489742783178}, "pyerrors.obs.derived_observable": {"tf": 2}, "pyerrors.obs.reweight": {"tf": 1.7320508075688772}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.merge_obs": {"tf": 2}, "pyerrors.obs.cov_Obs": {"tf": 1.7320508075688772}}, "df": 43, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 6}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}}, "df": 4}}}, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 2.23606797749979}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2.23606797749979}, "pyerrors.input.bdio.read_mesons": {"tf": 2.23606797749979}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.23606797749979}}, "df": 4}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.misc.load_object": {"tf": 1}}, "df": 2}}, "w": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}}}}}, "l": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "n": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}}, "df": 5, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 9}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}, "q": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}, "/": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1.4142135623730951}}, "df": 11, "o": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 2.23606797749979}, "pyerrors.input.bdio.write_ADerrors": {"tf": 2.23606797749979}, "pyerrors.input.bdio.read_mesons": {"tf": 2.23606797749979}, "pyerrors.input.bdio.read_dSdm": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 5, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}}, "df": 1, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {"pyerrors": {"tf": 3.605551275463989}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.einsum": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 7}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 2}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.linalg.einsum": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}, "e": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.linalg.svd": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 4}}, "h": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.4142135623730951}}, "df": 5}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 3}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 3, "s": {"1": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "2": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "3": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors": {"tf": 3.872983346207417}, "pyerrors.input": {"tf": 1.7320508075688772}, "pyerrors.misc.pseudo_Obs": {"tf": 1.4142135623730951}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 2}, "pyerrors.obs.Obs.export_jackknife": {"tf": 2.23606797749979}, "pyerrors.obs.import_jackknife": {"tf": 1.7320508075688772}}, "df": 8}}}}, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.correlate": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 12}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_rho": {"tf": 1.4142135623730951}}, "df": 3, "d": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 4}, "s": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2.23606797749979}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 3}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2.449489742783178}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 9}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}}}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.dump": {"tf": 1.7320508075688772}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_pobs_string": {"tf": 2}, "pyerrors.input.dobs.write_pobs": {"tf": 2.23606797749979}, "pyerrors.input.dobs.read_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.7320508075688772}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.23606797749979}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.dump_object": {"tf": 1.4142135623730951}, "pyerrors.misc.load_object": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 2}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 42, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 3.4641016151377544}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 14, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 3}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 12, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 6, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 8}}, "y": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 7}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.openQCD.qtop_projection": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 12, "s": {"docs": {"pyerrors.correlators.Corr.set_prange": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2}}, "e": {"docs": {"pyerrors": {"tf": 3}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}}, "df": 8}, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 4}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 2}, "pyerrors.input.dobs.import_dobs_string": {"tf": 2.449489742783178}, "pyerrors.input.dobs.read_dobs": {"tf": 2.449489742783178}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 8}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 11}, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.misc.dump_object": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 8}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 11}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.thin": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"docs": {"pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 1}}}}}}}}, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.deriv": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1.4142135623730951}}, "df": 3}, "z": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.matrix_symmetric": {"tf": 1}}, "df": 2}, "d": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.roll": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 5}}}, "w": {"docs": {"pyerrors.obs.Obs.plot_history": {"tf": 1}}, "df": 1, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}, "s": {"docs": {"pyerrors.obs.Obs.plot_piechart": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}}, "df": 4}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 2.6457513110645907}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.correlators.Corr.fit": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2, "{": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "\\": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.obs.covariance": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}}, "df": 1}}}}, "n": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.Hankel": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.prune": {"tf": 2.8284271247461903}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 2}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 10, "o": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 9, "n": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 16}}, "t": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 26, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 7}}}, "w": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.4142135623730951}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 3.4641016151377544}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2.23606797749979}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.jack_matmul": {"tf": 1.4142135623730951}, "pyerrors.linalg.einsum": {"tf": 2}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}, "pyerrors.roots.find_root": {"tf": 1.7320508075688772}}, "df": 21}}, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.roll": {"tf": 1}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}}, "df": 18, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}, "pyerrors.linalg.eigh": {"tf": 1}, "pyerrors.linalg.eig": {"tf": 1}}, "df": 4}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 3.872983346207417}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 2}, "pyerrors.input.dobs.write_dobs": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.misc.dump_object": {"tf": 1.4142135623730951}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 22, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {"pyerrors.obs.Obs.plot_tauint": {"tf": 1}, "pyerrors.obs.Obs.plot_rho": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.obs.merge_obs": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 6}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 3}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 3.605551275463989}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 15}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "x": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 2}}, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 2}}}, "x": {"0": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.symmetric": {"tf": 1}, "pyerrors.correlators.Corr.anti_symmetric": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 6}, "1": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}}, "df": 3}, "2": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 2.8284271247461903}, "pyerrors.fits.total_least_squares": {"tf": 3}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1.7320508075688772}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1.7320508075688772}}, "df": 7}, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 1}}}, "[": {"0": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}, "1": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}, "y": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.spaghetti_plot": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {"pyerrors.obs.correlate": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 3}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}, "r": {"0": {"1": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}, "docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 2.6457513110645907}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.obs.CObs.gamma_method": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 9}, "d": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1.7320508075688772}, "pyerrors.input.bdio.read_dSdm": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 2}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 2}, "pyerrors.input.misc.read_pbp": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_rwms": {"tf": 2.23606797749979}, "pyerrors.input.openQCD.extract_t0": {"tf": 2}, "pyerrors.input.openQCD.read_qtop": {"tf": 2}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.23606797749979}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 4}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}}, "df": 3}}}, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 2.449489742783178}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.fits.residual_plot": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 7}, "s": {"docs": {"pyerrors.input.bdio.read_ADerrors": {"tf": 1}, "pyerrors.input.bdio.write_ADerrors": {"tf": 1}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 5}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 2}}}}}}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.correlators.Corr.__init__": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1.4142135623730951}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.read_dobs": {"tf": 1.7320508075688772}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.7320508075688772}, "pyerrors.obs.Obs.details": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}}, "df": 11, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.misc.read_pbp": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}, "pyerrors.obs.Obs.plot_rep_dist": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.merge_obs": {"tf": 1}}, "df": 11}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "s": {"docs": {"pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 2, "[": {"0": {"docs": {"pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.T_symmetry": {"tf": 1}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.bdio.read_mesons": {"tf": 1}, "pyerrors.input.bdio.read_dSdm": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 13, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.item": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.dirac.Grid_gamma": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.input.misc.read_pbp": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.obs.Obs.plot_piechart": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1.4142135623730951}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 16}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_pobs": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.read_dobs": {"tf": 1.4142135623730951}, "pyerrors.input.json.import_json_string": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 9}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.reverse": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.input.openQCD.qtop_projection": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.correlators.Corr.reweight": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 4}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 2}}, "df": 4, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}}, "df": 1}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 7}}}}}, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.json.import_json_string": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1}}, "df": 5}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.input.utils.check_idl": {"tf": 1}}, "df": 11, "s": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.__init__": {"tf": 1}}, "df": 2}}}, "k": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 3}, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.7320508075688772}}, "df": 2}}, "w": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}}, "df": 1}}}, "v": {"1": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "@": {"docs": {}, "df": 0, "v": {"2": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}, "docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.prune": {"tf": 2.23606797749979}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}}, "df": 4, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 3.1622776601683795}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.plottable": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.linalg.svd": {"tf": 1}, "pyerrors.misc.pseudo_Obs": {"tf": 1.7320508075688772}, "pyerrors.misc.gen_correlated_data": {"tf": 1}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 2.449489742783178}, "pyerrors.obs.Obs.gamma_method": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}, "pyerrors.obs.cov_Obs": {"tf": 1}}, "df": 18, "s": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.show": {"tf": 1.7320508075688772}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.error_band": {"tf": 1}, "pyerrors.fits.ks_test": {"tf": 1}, "pyerrors.obs.Obs": {"tf": 1.7320508075688772}}, "df": 7}, "d": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.linalg.matmul": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.linalg.einsum": {"tf": 1}, "pyerrors.linalg.inv": {"tf": 1}, "pyerrors.linalg.cholesky": {"tf": 1}, "pyerrors.linalg.det": {"tf": 1}, "pyerrors.obs.CObs": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.covobs.Covobs.__init__": {"tf": 1}, "pyerrors.covobs.Covobs.errsq": {"tf": 1}}, "df": 2}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.dobs.import_dobs_string": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.Fit_result": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.linalg.matmul": {"tf": 1}}, "df": 5}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.obs.Obs": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1, "d": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {"pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.7320508075688772}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 2.23606797749979}, "pyerrors.input.sfcf.read_sfcf": {"tf": 2.449489742783178}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}, "pyerrors.input.json.load_json_dict": {"tf": 1}}, "df": 3}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3, "s": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}}, "df": 3}}}}}}, "\\": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "\\": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "{": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "}": {"docs": {}, "df": 0, "^": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "j": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr.item": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.obs.covariance": {"tf": 1.7320508075688772}}, "df": 4, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.plateau": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors.fits.least_squares": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.input": {"tf": 2.23606797749979}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 2}, "pyerrors.obs.import_jackknife": {"tf": 1.4142135623730951}}, "df": 4}}}}}, "s": {"docs": {"pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 3.7416573867739413}, "pyerrors.correlators.Corr.dump": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.dump_to_json": {"tf": 2.23606797749979}, "pyerrors.input.json.import_json_string": {"tf": 1.7320508075688772}, "pyerrors.input.json.load_json": {"tf": 1.4142135623730951}, "pyerrors.input.json.dump_dict_to_json": {"tf": 2.449489742783178}, "pyerrors.input.json.load_json_dict": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.dump": {"tf": 1.4142135623730951}}, "df": 9}}}, "l": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "}": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}, "^": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 2}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 4}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.json.import_json_string": {"tf": 1}, "pyerrors.input.json.load_json": {"tf": 1}}, "df": 2}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.obs.Obs.gamma_method": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.correlators.Corr": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.obs.derived_observable": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.linalg.jack_matmul": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 2}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 13, "d": {"docs": {"pyerrors": {"tf": 2.8284271247461903}, "pyerrors.correlators.Corr.deriv": {"tf": 1}, "pyerrors.correlators.Corr.second_deriv": {"tf": 1}, "pyerrors.correlators.Corr.fit": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1.4142135623730951}, "pyerrors.fits.least_squares": {"tf": 1.7320508075688772}, "pyerrors.fits.total_least_squares": {"tf": 1}, "pyerrors.fits.fit_lin": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_rwms": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.7320508075688772}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}}, "df": 22}, "r": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 2}, "s": {"docs": {"pyerrors.correlators.Corr.m_eff": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1}}, "df": 2}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors.correlators.Corr.projected": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.utils": {"tf": 1}}, "df": 1}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 2.23606797749979}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 2.449489742783178}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.qqplot": {"tf": 1.4142135623730951}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"pyerrors.correlators.Corr.T_symmetry": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "k": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1.4142135623730951}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 4}}, "df": 1, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {"pyerrors": {"tf": 1.7320508075688772}, "pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.correlators.Corr.show": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.gamma_method": {"tf": 1}, "pyerrors.obs.Obs.is_zero_within_error": {"tf": 1}, "pyerrors.obs.Obs.is_zero": {"tf": 1}, "pyerrors.obs.CObs.is_zero": {"tf": 1}}, "df": 10, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1.4142135623730951}}, "df": 1}, "t": {"docs": {}, "df": 0, "h": {"docs": {"pyerrors.obs.Obs.export_jackknife": {"tf": 1}, "pyerrors.obs.import_jackknife": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.read_pobs": {"tf": 1}, "pyerrors.input.dobs.import_dobs_string": {"tf": 1}, "pyerrors.input.dobs.read_dobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}}, "df": 9}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"pyerrors": {"tf": 2.23606797749979}, "pyerrors.correlators.Corr": {"tf": 1.4142135623730951}, "pyerrors.correlators.Corr.projected": {"tf": 1}, "pyerrors.correlators.Corr.prune": {"tf": 1}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.json.create_json_string": {"tf": 1}, "pyerrors.input.json.dump_to_json": {"tf": 1}, "pyerrors.input.json.dump_dict_to_json": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.derived_observable": {"tf": 1.4142135623730951}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.roots.find_root": {"tf": 1}}, "df": 18}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"pyerrors": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.Hankel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {"pyerrors": {"tf": 2.6457513110645907}, "pyerrors.correlators.Corr.reweight": {"tf": 1}, "pyerrors.fits.least_squares": {"tf": 1.4142135623730951}, "pyerrors.fits.total_least_squares": {"tf": 1.4142135623730951}, "pyerrors.input.dobs.create_pobs_string": {"tf": 1}, "pyerrors.input.dobs.write_pobs": {"tf": 1}, "pyerrors.input.dobs.create_dobs_string": {"tf": 1}, "pyerrors.input.dobs.write_dobs": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1.4142135623730951}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1.4142135623730951}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}, "pyerrors.obs.reweight": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 16}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.obs.Obs.plot_history": {"tf": 1.4142135623730951}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix.g5H": {"tf": 1.4142135623730951}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"pyerrors.linalg.eigh": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.sfcf.read_sfcf": {"tf": 1}}, "df": 3}}, "p": {"docs": {"pyerrors.correlators.Corr.GEVP": {"tf": 1}, "pyerrors.correlators.Corr.Eigenvalue": {"tf": 1}, "pyerrors.obs.covariance": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"pyerrors.input.openQCD.read_qtop": {"tf": 1}, "pyerrors.input.openQCD.read_qtop_sector": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"pyerrors": {"tf": 2}, "pyerrors.fits.least_squares": {"tf": 1}, "pyerrors.input.hadrons.Npr_matrix": {"tf": 1}, "pyerrors.input.openQCD.extract_t0": {"tf": 1}}, "df": 4}, "s": {"docs": {}, "df": 0, "t": {"docs": {"pyerrors": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"pyerrors": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"pyerrors.correlators.Corr.show": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.obs.covariance": {"tf": 1}}, "df": 1, "s": {"docs": {"pyerrors.correlators.Corr.prune": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"pyerrors.dirac.epsilon_tensor": {"tf": 1}, "pyerrors.dirac.epsilon_tensor_rank4": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"5": {"docs": {"pyerrors.input.hadrons.read_meson_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_ExternalLeg_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Bilinear_hd5": {"tf": 1}, "pyerrors.input.hadrons.read_Fourquark_hd5": {"tf": 1}}, "df": 4}, "docs": {}, "df": 0}}, "u": {"docs": {}, "df": 0, "a": {"docs": {"pyerrors.mpm.matrix_pencil_method": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"pyerrors": {"tf": 1.4142135623730951}, "pyerrors.mpm.matrix_pencil_method": {"tf": 1.7320508075688772}}, "df": 2, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"pyerrors": {"tf": 1}, "pyerrors.correlators.Corr.thin": {"tf": 1}, "pyerrors.obs.correlate": {"tf": 1}}, "df": 3}}, "y": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"pyerrors.input.openQCD.read_rwms": {"tf": 1}, "pyerrors.input.openQCD.read_qtop": {"tf": 1}}, "df": 2, "s": {"docs": {"pyerrors.input.hadrons.Npr_matrix": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "\u2013": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {"pyerrors.fits.ks_test": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"1": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}}, "df": 1}, "2": {"docs": {"pyerrors.input.bdio.read_mesons": {"tf": 1}}, "df": 1}, "docs": {"pyerrors.input.bdio.read_dSdm": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"pyerrors.obs.derived_observable": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();